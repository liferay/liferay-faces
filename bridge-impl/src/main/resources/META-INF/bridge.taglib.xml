<?xml version='1.0' encoding='UTF-8'?>
<facelet-taglib xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:vdldoc="http://vdldoc.omnifaces.org"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facelettaglibrary_2_2.xsd http://vdldoc.omnifaces.org https://raw.githubusercontent.com/omnifaces/vdldoc/master/src/main/resources/org/omnifaces/vdldoc/resources/vdldoc.taglib.xml.xsd"
	version="2.2">
	<description><![CDATA[The Liferay Faces Bridge facelet component tags with the <code>bridge:</code> tag name prefix.]]></description>
	<namespace>http://liferay.com/faces/bridge</namespace>
	<tag>
		<description><![CDATA[InputFile is a UIInput component that renders an <code>&lt;input&gt;</code> element with type=file. Since it extends HtmlInputFile, it supports all the features of h:inputFile and also supports multi-file uploads.]]></description>
		<tag-name>inputFile</tag-name>
		<component>
			<component-type>com.liferay.faces.bridge.component.inputfile.InputFile</component-type>
			<renderer-type>com.liferay.faces.bridge.component.inputfile.InputFileRenderer</renderer-type>
			<handler-class>com.liferay.faces.bridge.component.inputfile.internal.InputFileHandler</handler-class>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, files are uploaded automatically as soon as they are selected. The default value is false.]]></description>
			<name>auto</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>on</code> (default) and <code>off</code>.]]></description>
			<name>autocomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when a file is uploaded. The method must be <code>public</code>, return <code>void</code>, and take a <code>FileUploadEvent</code> argument.]]></description>
			<name>fileUploadListener</name>
			<required>false</required>
			<method-signature>void fileUploadListener(com.liferay.faces.util.component.inputfile.FileUploadEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether or not multiple files can be uploaded. Valid values are blank (to upload a single file) or "multiple" (to upload multiple files).]]></description>
			<name>multiple</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the visual length of the element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
</facelet-taglib>
