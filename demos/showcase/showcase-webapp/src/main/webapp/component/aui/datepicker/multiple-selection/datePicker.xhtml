<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:aui="http://liferay.com/faces/aui"
	xmlns:aui-nongen="http://liferay.com/faces/aui-nongen" xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html" xmlns:showcase="http://java.sun.com/jsf/composite/showcase"
	xmlns:ui="http://java.sun.com/jsf/facelets" template="/templates/component-3col.xhtml">

	<ui:define name="col1">
		<!-- Example#1: Hold down shift or control to select multiple dates -->
		<h:form>
			<aui-nongen:field label="#{i18n['example-1']}">
				<h:outputText value="#{i18n['aui-datepicker-multiple-selection-example-1']}" />
			</aui-nongen:field>
			<aui-nongen:field label="#{i18n['component']}">
				<h:inputTextarea id="multiple" value="#{datePickerModelBean.multiple}" />
				<aui:datePicker for="multiple" dateSeparator=" | " selectionMode="multiple" />
			</aui-nongen:field>
			<h:commandButton value="#{i18n['submit']}">
				<f:ajax execute="@form" render="@form" />
			</h:commandButton>
			<aui-nongen:field label="#{i18n['model-value']}">
				<showcase:outputModel>
					<h:outputText value="#{datePickerModelBean.multiple}" />
				</showcase:outputModel>
			</aui-nongen:field>
		</h:form>
	</ui:define>

	<ui:define name="col2">
		<!-- Example#2: Pop up the datePicker multiple times to select multiple dates -->
		<h:form>
			<aui-nongen:field label="#{i18n['example-2']}">
				<h:outputText value="#{i18n['aui-datepicker-multiple-selection-example-2']}" />
			</aui-nongen:field>
			<aui-nongen:field label="#{i18n['component']}">
				<h:inputTextarea id="multipleSticky" value="#{datePickerModelBean.multiple}" />
				<aui:datePicker for="multipleSticky" selectionMode="multiple-sticky" />
			</aui-nongen:field>
			<h:commandButton value="#{i18n['submit']}">
				<f:ajax execute="@form" render="@form" />
			</h:commandButton>
			<aui-nongen:field label="#{i18n['model-value']}">
				<showcase:outputModel>
					<h:outputText value="#{datePickerModelBean.multiple}" />
				</showcase:outputModel>
			</aui-nongen:field>
		</h:form>
	</ui:define>

</ui:composition>