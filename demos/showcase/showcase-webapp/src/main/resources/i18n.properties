actionlistener-execution-when-immediate-is-false=ActionListener execution when [vdldoc:alloy:commandButton:immediate] is `false` (the default)
actionlistener-execution-when-immediate-is-true=ActionListener execution when [vdldoc:alloy:commandButton:immediate] is `true`
are-you-sure-you-want-to-delete-this=Are you sure you want to delete this?
alloy-button=[javadoc:com.liferay.faces.alloy.component.button.Button] is a [javadoc:javax.faces.component.UIOutput] component that renders a styleable HTML `&lt;button&gt;` element. The default [vdldoc:alloy:button:type] is `button`. Since it extends [javadoc:javax.faces.component.html.HtmlOutcomeTargetButton], it supports all the features of [vdldoc:h:button]. The component does *not need to be a child* of `h:form` since the [vdldoc:alloy:button:outcome] attribute is designed to navigate via HTTP GET.
alloy-button-general=*Children* such as [vdldoc:alloy:icon], [vdldoc:alloy:outputText], and [vdldoc:h:graphicImage] can be specified for styling purposes. Alternatively, the [vdldoc:alloy:button:image] and [vdldoc:alloy:button:value] attributes can be specified for styling purposes.
alloy-button-general-example-1=Styling via children
alloy-button-general-example-2=Styling via [vdldoc:alloy:button:image] attribute
alloy-button-general-example-3=Styling via [vdldoc:alloy:button:value] attribute
alloy-button-navigation=The component can be used to *navigate* between pages with the [vdldoc:alloy:button:outcome] attribute.
alloy-button-param=URL *parameters* can be specified via [vdldoc:f:param] child tags. Setting [vdldoc:alloy:button:includeViewParams] to `true` will automatically include all of the [vdldoc:f:viewParam] tags (view parameters) as URL parameters.
alloy-button-various-styles=The component can be *styled* with Bootstrap class names as described in the <a href="http://liferay.github.io/alloy-bootstrap/base-css.html#buttons" target="_blank">Alloy Base CSS</a> documentation.
alloy-commandbutton=[javadoc:com.liferay.faces.alloy.component.commandbutton.CommandButton] is a [javadoc:javax.faces.component.UICommand] component that renders a styleable HTML `&lt;button&gt;` element. The default [vdldoc:alloy:commandButton:type] is `submit`. Since it extends [javadoc:javax.faces.component.html.HtmlCommandButton], it supports all the features of [vdldoc:h:commandButton]. The component *must be a child* of [vdldoc:h:form] in order to trigger the [vdldoc:alloy:commandButton:action] or [vdldoc:alloy:commandButton:actionListener].
alloy-commandbutton-general=*Children* such as [vdldoc:alloy:icon], [vdldoc:alloy:outputText], and [vdldoc:h:graphicImage] can be specified for styling purposes. Alternatively, the [vdldoc:alloy:commandButton:image] and [vdldoc:alloy:commandButton:value] attributes can be specified for styling purposes.
alloy-commandbutton-general-example-1=Styling via children
alloy-commandbutton-general-example-2=Styling via [vdldoc:alloy:commandbutton:image] attribute
alloy-commandbutton-general-example-3=Styling via [vdldoc:alloy:commandbutton:value] attribute
alloy-commandbutton-immediate=When the [vdldoc:alloy:commandButton:immediate] attribute is `true`, the submitted value is converted and validated during *APPLY_REQUEST_VALUES* phase of the JSF lifecycle, rather than the normal PROCESS_VALIDATIONS phase.
alloy-commandbutton-navigation=The component can be used to *navigate* between pages with the [vdldoc:alloy:commandbutton:action] attribute. By specifying a `&lt;redirect&gt;` element in the `navigation-rule`, it will utilize the POST/REDIRECT/GET pattern.
alloy-commandbutton-param=URL *parameters* can be specified via the [vdldoc:alloy:commandbutton:action] attribute. By specifying a `faces-redirect=true` parameter in the action attribute, it will utilize the POST/REDIRECT/GET pattern.
alloy-commandbutton-value-attribute=Although the component&apos;s [vdldoc:alloy:commandButton:value] attribute is *read-only* (can&apos;t be changed via form submission), it can be used to determine that an item has been selected by the user.
alloy-commandbutton-various-styles=The component can be *styled* with Bootstrap class names as described in the <a href="http://liferay.github.io/alloy-bootstrap/base-css.html#buttons" target="_blank">Alloy Base CSS</a> documentation.
alloy-icon=[javadoc:com.liferay.faces.alloy.component.icon.Icon] is a [javadoc:javax.faces.component.UIComponent] that renders a span which contains an icon specified by the [vdldoc:alloy:icon:name] attribute.
alloy-icon-general=The component displays an *icon* specified by the [vdldoc:alloy:icon:name] attribute. Names are described in the <a href="http://liferay.github.io/alloy-bootstrap/base-css.html#icons" target="_blank">Alloy Base CSS</a> documentation.
alloy-input-date-benefits-description=since it combines date selection and text input in a single component.
alloy-inputdate=[javadoc:com.liferay.faces.alloy.component.inputdate.InputDate] is a [javadoc:javax.faces.component.UIInput] component that renders a textbox and a popup a calendar with selectable dates. The component attepts to automatically convert the submitted value to a [javadoc:java.util.Date] via a built in [javadoc:javax.faces.convert.DateTimeConverter].
alloy-inputdate-date-pattern=A *custom pattern* can be specified via the [vdldoc:alloy:inputDate:datePattern] attribute. The syntax of the date pattern follows the format specified by [javadoc:java.text.SimpleDateFormat].
alloy-inputdate-general=The [vdldoc:alloy:inputDate:showOn] attribute specifies which events will popup the calendar.
alloy-inputdate-general-example-1=Specifying *focus* (the default) for the `showOn` attribute.
alloy-inputdate-general-example-2=Specifying *button* for the `showOn` attribute.
alloy-inputdate-general-example-3=Specifying *both* for the `showOn` attribute.
alloy-inputdate-instant-ajax=The component supports *instant Ajax* by simply adding an [vdldoc:f:ajax] child tag.
alloy-inputdate-localization=A *custom locale* can be specified via the [vdldoc:alloy:inputDate:locale] attribute.
alloy-inputdate-localization-example-1=Hard coded Brazilian Portuguese locale
alloy-inputdate-localization-example-2=Japanese [javadoc:java.util.Locale] obtained from a bean via EL
alloy-inputdate-min-max-date=*Minimum and maximum dates* can be specified via the [vdldoc:alloy:inputDate:minimumDate] and [vdldoc:alloy:inputDate:maximumDate] attributes. The component performs server side validation to ensure that submitted values are within the specified range.
alloy-inputdate-multiple-panes=The number of month *panes* that are displayed can be specified via the [vdldoc:alloy:inputDate:panes] attribute (maximum of 3).
alloy-inputsourcecode=[javadoc:com.liferay.faces.alloy.component.aceeditor.InputSourceCode] is a [javadoc:javax.faces.component.UIInput] component that renders a field for editing source code text.
alloy-inputsourcecode-default-value=A *default value* can specified using when the [vdldoc:alloy:inputSourceCode:value] attribute is bound via EL to a model bean property. In the example below, the default value of the `sourceText` property is set inside of the `InputSourceCodeModelBean.getSourceText()` method.
alloy-inputsourcecode-general=The component supports *color-coded text* for various programming languages via the [vdldoc:alloy:inputSourceCode:mode] attribute.
alloy-inputtext=[javadoc:com.liferay.faces.alloy.component.inputtextarea.InputText] is a [javadoc:javax.faces.component.UIInput] component that renders a field for editing *single-line text*. Since it extends [javadoc:javax.faces.component.html.HtmlInputText], it supports all the features of [vdldoc:h:inputText].
alloy-inputtext-conversion=The [vdldoc:alloy:inputText:value] attribute can be *converted* via the [vdldoc:alloy:inputText:converter] attribute or by specifying an [vdldoc:f:converter] type of child tag. In addition, custom user feedback can be specified via the [vdldoc:alloy:inputText:converterMessage] attribute.
alloy-inputtext-general=The [vdldoc:alloy:inputText:value] attribute can be *bound to a model bean property* via EL.
alloy-inputtext-immediate=When the [vdldoc:alloy:inputText:immediate] attribute is `true`, the submitted value is converted and validated during *APPLY_REQUEST_VALUES* phase of the JSF lifecycle, rather than the normal PROCESS_VALIDATIONS phase.
alloy-inputtext-validation=The [vdldoc:alloy:inputText:value] attribute can be *validated* via the [vdldoc:alloy:inputText:validator] attribute or by specifying an [vdldoc:f:validator] type of child tag. In addition, custom user feedback can be specified via the [vdldoc:alloy:inputText:validatorMessage] attribute.
alloy-inputtextarea=[javadoc:com.liferay.faces.alloy.component.inputtextarea.InputTextarea] is a [javadoc:javax.faces.component.UIInput] component that renders a field for editing *multi-line text*. Since it extends [javadoc:javax.faces.component.html.HtmlInputTextarea], it supports all the features of [vdldoc:h:inputTextarea].
alloy-inputtextarea-conversion=The [vdldoc:alloy:inputTextarea:value] attribute can be *converted* via the [vdldoc:alloy:inputTextarea:converter] attribute or by specifying an [vdldoc:f:converter] type of child tag. In addition, custom user feedback can be specified via the [vdldoc:alloy:inputTextarea:converterMessage] attribute.
alloy-inputtextarea-general=The [vdldoc:alloy:inputTextarea:value] attribute can be *bound to a model bean property* via EL.
alloy-inputtextarea-immediate=When the [vdldoc:alloy:inputTextarea:immediate] attribute is `true`, the submitted value is converted and validated during *APPLY_REQUEST_VALUES* phase of the JSF lifecycle, rather than the normal PROCESS_VALIDATIONS phase.
alloy-inputtextarea-right-to-left=The component supports *Right-To-Left* language input by setting the [vdldoc:alloy:inputTextarea:dir] and [vdldoc:alloy:inputTextarea:lang] attributes.
alloy-inputtextarea-size=The *size* of the rendered textarea can be specified via the [vdldoc:alloy:inputTextarea:rows] and [vdldoc:alloy:inputTextarea:cols] attributes, or via CSS using the [vdldoc:alloy:inputTextarea:styleClass] or [vdldoc:alloy:inputTextarea:style] attributes.
alloy-inputtextarea-size-example-1=Setting the size via the [vdldoc:alloy:inputTextarea:rows] and [vdldoc:alloy:inputTextarea:cols] attributes
alloy-inputtextarea-size-example-2=Setting the size via the [vdldoc:alloy:inputTextarea:style] attribute
alloy-inputtextarea-validation=The [vdldoc:alloy:inputTextarea:value] attribute can be *validated* via the [vdldoc:alloy:inputTextarea:validator] attribute or by specifying an [vdldoc:f:validator] type of child tag. In addition, custom user feedback can be specified via the [vdldoc:alloy:inputTextarea:validatorMessage] attribute.
alloy-outputremainingchars=[javadoc:com.liferay.faces.alloy.component.outputremainingchars.OutputRemainingChars] is a [javadoc:javax.faces.component.UIOutput] component that displays the number of characters remaining for an associated [vdldoc:alloy:inputText] or [vdldoc:alloy:inputTextarea].
alloy-outputremainingchars-general=The [vdldoc:alloy:outputRemainingChars:value] attribute can contain text with a `{0}` token that is substituted with the number of remaining characters. If the `value` attribute is not specified, then only the number of remaining characters are rendered.
alloy-outputremainingchars-general-example-1=Associate with an [vdldoc:alloy:inputText] and specify a `{0}` token within the [vdldoc:alloy:outputRemainingChars:value] attribute.
alloy-outputremainingchars-general-example-2=Associate with an [vdldoc:alloy:inputTextarea] and simply render the number of remaining characters.
alloy-outputremainingchars-default-value=When a *default value* of an associated [vdldoc:alloy:inputText] or [vdldoc:alloy:inputTextarea] is specified, the number of remaining characters will be calculated before rendering.
alloy-outputremainingchars-max-length-events=There are two attributes to use for events:
alloy-outputremainingchars-max-length-reached-1=The [vdldoc:alloy:outputRemainingChars:onMaxlengthReached] event occurs *every time* maxlength is reached.
alloy-outputremainingchars-max-length-reached-2=The [vdldoc:alloy:outputRemainingChars:onceMaxlengthReached] event occurs *the first time* maxlength is reached.
alloy-outputtext=[javadoc:com.liferay.faces.alloy.component.outputtext.OutputText] is a [javadoc:javax.faces.component.UIOutput] component that renders its own value as text. Since it extends [javadoc:javax.faces.component.html.HtmlOutputText], it supports all the features of [vdldoc:h:outputText].
alloy-outputtext-general=The [vdldoc:alloy:outputText:value] attribute can be *bound* to a model bean property via EL.
alloy-outputtext-conversion=The [vdldoc:alloy:outputText:value] attribute can be *converted* by specifying an [vdldoc:f:converter] type of child tag.
alloy-outputtext-right-to-left=The component supports *Right-To-Left* language input by setting the [vdldoc:alloy:outputText:dir] and [vdldoc:alloy:outputText:lang] attributes.
alloy-panelgroup=[javadoc:com.liferay.faces.alloy.component.panelgroup.PanelGroup] is a [javadoc:javax.faces.component.UIPanel] component that renders a `&lt;span&gt;` or a `&lt;div&gt;` element for grouping purposes. Since it extends [javadoc:javax.faces.component.html.HtmlPanelGroup], it supports all the features of [vdldoc:h:panelGroup].
alloy-panelgroup-general=The [vdldoc:alloy:panelGroup:layout] attribute specifies whether the component renders a `span` or a `div`.
alloy-panelgroup-general-example-1=By default, the component renders a `span`.
alloy-panelgroup-general-example-2=Specifying `block` for the [vdldoc:alloy:panelGroup:layout] attribute causes the component to render a `div`.
alloy-pickdate=[javadoc:com.liferay.faces.alloy.component.pickdate.PickDate] is a [javadoc:javax.faces.component.UIPanel] component that renders a popup a calendar with selectable dates.
alloy-pickdate-date-pattern=A *custom pattern* can be specified via the [vdldoc:alloy:pickDate:datePattern] attribute. The syntax of the date pattern follows the format specified by [javadoc:java.text.SimpleDateFormat].
alloy-pickdate-general=The component can be attached to an [vdldoc:alloy:inputText] or [vdldoc:alloy:inputTextarea] via the [vdldoc:alloy:pickDate:for] attribute.
alloy-pickdate-instant-ajax=The component supports *instant Ajax* by simply adding [vdldoc:f:ajax] as a child of the input tag.
alloy-pickdate-localization=A *custom locale* can be specified via the [vdldoc:alloy:pickDate:locale] attribute.
alloy-pickdate-localization-example-1=Hard coded Brazilian Portuguese locale
alloy-pickdate-localization-example-2=Japanese [javadoc:java.util.Locale] obtained from a bean via EL
alloy-pickdate-min-max-date=*Minimum and maximum dates* can be specified via the [vdldoc:alloy:pickDate:minimumDate] and [vdldoc:alloy:pickDate:maximumDate] attributes.
alloy-pickdate-multiple-panes=The number of month *panes* that are displayed can be specified via the [vdldoc:alloy:pickDate:panes] attribute (maximum of 3).
alloy-pickdate-multiple-selection=The *date selection mode* can be specified via the [vdldoc:alloy:pickDate:selectionMode] attribute. Valid values include "single" (the default), "multiple," or "multiple-sticky." The character(s) separating the selected dates can be specified via the [vdldoc:alloy:pickDate:dateSeparator] attribute.
alloy-pickdate-multiple-selection-example-1=Hold down shift or control to select multiple dates
alloy-pickdate-multiple-selection-example-2=Pop up the pickDate multiple times to select multiple dates
alloy-selectoneradio=[javadoc:com.liferay.faces.alloy.component.selectoneradio.SelectOneRadio] is a [javadoc:javax.faces.component.UISelectOne] component that renders radio buttons. Since it extends [javadoc:javax.faces.component.html.HtmlSelectOneRadio], it supports all the features of [vdldoc:h:selectOneRadio] such as accepting [vdldoc:f:selectItem] or [vdldoc:f:selectItems] as child tags.
alloy-selectoneradio-conversion=The [vdldoc:alloy:selectOneRadio:value] attribute can be *converted* by specifying an [vdldoc:f:converter] child tag.
alloy-selectoneradio-data-model=The component will display *dynamically* when the [vdldoc:f:selectItems:value] attribute of the child [vdldoc:f:selectItems] tag is bound via EL to a model bean property (which is wrapped implicitly by JSF with a [javadoc:javax.faces.model.DataModel]). The [vdldoc:f:selectItems:var] attribute of the child [vdldoc:f:selectItems] tag is used to introduce a variable name into the EL when iterating over the model.
alloy-selectoneradio-default-value=A *default value* can specified using when the [vdldoc:alloy:selectOneRadio:value] attribute is bound via EL to a model bean property.
alloy-selectoneradio-general=The [vdldoc:alloy:outputText:value] attribute can be *bound* to a model bean property via EL.
alloy-selectoneradio-instant-ajax=The component supports *instant Ajax* by simply adding [vdldoc:f:ajax] as a child tag.
alloy-selectoneradio-immediate=When the [vdldoc:alloy:selectOneRadio:immediate] attribute is `true`, the submitted value is converted and validated during *APPLY_REQUEST_VALUES* phase of the JSF lifecycle, rather than the normal PROCESS_VALIDATIONS phase.
alloy-selectoneradio-vertical-layout=Setting the value of the [vdldoc:alloy:selectOneRadio:layout] attribute to `pageDirection` will cause the component to render with a *vertical layout*.
alloy-selectstarrating=[javadoc:com.liferay.faces.alloy.component.selectstarrating.SelectStarRating] is a [javadoc:javax.faces.component.UISelectOne] component that renders a set of stars. The user can click on a star to select a rating and click on the same star a second time to de-select a rating. Since it extends [javadoc:javax.faces.component.html.HtmlSelectOneRadio], it accepts [vdldoc:f:selectItem] or [vdldoc:f:selectItems] as child tags.
alloy-selectstarrating-data-model=The component can display stars *dynamically* when the [vdldoc:f:selectItems:value] attribute of the child [vdldoc:f:selectItems] tag is bound via EL to a model bean property (which is wrapped implicitly by JSF with a [javadoc:javax.faces.model.DataModel]). The [vdldoc:f:selectItems:var] attribute of the child [vdldoc:f:selectItems] tag is used to introduce a variable name into the EL when iterating over the model.
alloy-selectstarrating-default-value=A *default value* can be specified using one of two ways:
alloy-selectstarrating-default-value-example-1=Initializing the default value in the model bean.
alloy-selectstarrating-default-value-example-2=Setting the [vdldoc:alloy:starRating:defaultSelected] attribute.
alloy-selectstarrating-general=There are two basic ways to *bind* the [vdldoc:alloy:starRating:value] attribute this component to a model bean property:
alloy-selectstarrating-general-example-1=String value (no converter required)
alloy-selectstarrating-general-example-2=Object value (requires a converter)
alloy-selectstarrating-instant-ajax=The component supports *instant Ajax* by simply adding [vdldoc:f:ajax] as a child tag.
alloy-selectthumbrating=[javadoc:com.liferay.faces.alloy.component.selectthumbrating.SelectThumbRating] is a [javadoc:javax.faces.component.UISelectOne] component that renders a pair of thumb icons that a user can select to indicate their favor. The user can click on a thumb to select their favor and click on the same thumb a second time to de-select their favor. Since it extends [javadoc:javax.faces.component.html.HtmlSelectOneRadio], it accepts [vdldoc:f:selectItem] or [vdldoc:f:selectItems] as children.
alloy-selectthumbrating-general=The [vdldoc:alloy:thumbRating:value] of the component is typically of type [javadoc:java.lang.Boolean].
alloy-selectthumbrating-instant-ajax=The component supports *instant Ajax* by simply adding [vdldoc:f:ajax] as a child tag.
alloy-tabview=[javadoc:com.liferay.faces.alloy.component.TabView] is a [javadoc:javax.faces.component.UIData] (iterator) component that renders tabs either statically or dynamically.
alloy-tabview-general=Tabs can be specified *statically* with [vdldoc:alloy:tab] child tags.
alloy-tabview-data-model=Since it extends [javadoc:javax.faces.component.UIData], it can render tabs *dynamically* when the [vdldoc:alloy:tabView:value] attribute is bound via EL to a model bean property (which is wrapped implicitly by JSF with a [javadoc:javax.faces.model.DataModel]). The [vdldoc:alloy:tabView:var] attribute can be used to introduce a variable name into the EL when iterating over the model.
back-to-navigation-with=Back to Navigation with
bridge-inputfile=[javadoc:com.liferay.faces.bridge.component.HtmlInputFile] is a [javadoc:javax.faces.component.UIInput] component that renders an HTML *&lt;input type="file" /&gt;* element. The component requires the [vdldoc:h:form:enctype] attribute of the encosing [vdldoc:h:form] tag to be *"multipart/form-data"* and only works in a full-page (non-Ajax) postback.
bridge-inputfile-general=The HTML5 [vdldoc:bridge:inputFile:multiple] attribute can be set to *"multiple"* in order to support multi-file uploads. 
block=Block
component=Component
conversion=Conversion
conversion-to-a-date-using-converter-attribute=Conversion to a [javadoc:java.util.Date] using the [vdldoc:alloy:inputTextarea:converter] attribute
conversion-to-a-date-using-f-convertdatetime=Conversion to a [javadoc:java.util.Date] using an [vdldoc:f:convertDateTime] child tag
converter-message=Failed to convert this field
danger=Danger
data-model=Data Model
date-pattern=Date Pattern
description=Description
default=Default
default-value=Default Value
dislike=Dislike
example=Example
favorite-liferay-benefit=Favorite Liferay Benefit
hyperlink-targeting-the-showcase-portlet=Hyperlink targeting the Showcase portlet
general=General
immediate=Immediate
info=Info
instant-ajax=Instant Ajax
inverse=Inverse
large=Large
like=Like
link=Link
locale-from-el=locale from EL
localization=Localization
max-length-events=Max Length Events
min-max-date=Min/Max Date
mini=Mini
model-value=Model Value
multiple-panes=Multiple Panes
multiple-selection=Multiple Selection
navigation=Navigation
note=Note
param=Param
parameter-value=Parameter Value
please-consider-using=Please consider using
portlet-actionurl=[javadoc:com.liferay.faces.bridge.component.PortletActionURL] is a [javadoc:javax.faces.component.UIOutput] component that provides the ability to get a [javadoc:javax.portlet.PortletURL] that invokes the ACTION_PHASE of the portlet lifecycle targeting the current portlet.
portlet-actionurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet *action parameters* to the URL. The [vdldoc:portlet:actionURL] component tag is *provided for the sake of completeness* since it has little purpose in JSF portlets. As shown in the example below, a *practical use-case* might be to @Override [javadoc:javax.portlet.faces.GenericFacesPortlet] in order to intercept a non-JSF postback.
portlet-namespace=[javadoc:com.liferay.faces.bridge.component.PortletNamespace] is a [javadoc:javax.faces.component.UIOutput] component that provides the ability to get the portlet namespace.
portlet-namespace-general=There are two basic ways to get the portlet namespace:
portlet-namespace-general-example-1=Introducing a var into the EL
portlet-namespace-general-example-2=Output directly to the response
portlet-renderurl=[javadoc:com.liferay.faces.bridge.component.PortletRenderURL] is a [javadoc:javax.faces.component.UIOutput] component that provides the ability to get a [javadoc:javax.portlet.PortletURL] that invokes the RENDER_PHASE of the portlet lifecycle targeting the current portlet.
portlet-renderurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet *render parameters* to the URL.
portlet-resourceurl=[javadoc:com.liferay.faces.bridge.component.PortletResourceURL] is a [javadoc:javax.faces.component.UIOutput] component that provides the ability to get a [javadoc:javax.portlet.ResourceURL] that invokes the RESOURCE_PHASE of the portlet lifecycle targeting the current portlet. 
portlet-resourceurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet resource parameters to the URL. The example below shows how to specify the *javax.faces.resource* and *ln* portlet *resource parameters* in order to get a URL that targets a JSF *image* resource.
primary=Primary
rating=Rating
rendered=Rendered
required=Required
required-message=This is a required field
right-to-left=Right-To-Left
size=Size
small=Small
source-code=Source Code
sticky-multiple-selection=Sticky Multiple Selection
submit=Submit
submit-non-faces-postback=Submit Non-Faces Postback
success=Success
this-text-is-inside-a-span-html-tag=This text is inside a <span> HTML tag
this-text-is-inside-a-div-html-tag=This text is inside a <div> HTML tag
to-param-page=To Param page
usage=Usage
valid-date-range=Valid Date Range
validating-an-email-address-using-validator-attribute=Validating an *email address* using the [vdldoc:alloy:inputTextarea:validator] attribute
validating-an-email-address-using-f-validateregex=Validating an *email address* using an [vdldoc:f:validateRegex] child tag
validation=Validation
validator-message=Invalid E-Mail Address
value-attribute=Value Attribute
value-of-foo-param=Value of foo Param
valuechangelistener-execution-when-immediate-is-false=ValueChangeListener execution when [vdldoc:alloy:selectOneRadio:immediate] is `false` (the default)
valuechangelistener-execution-when-immediate-is-true=ValueChangeListener execution when [vdldoc:alloy:selectOneRadio:immediate] is `true`
various-styles=Various Styles
vdl-documentation=VDL Documentation
vertical-layout=Vertical Layout
warning=Warning
when-was-the-us-declaration-of-independence-signed=When was the US Declaration of Independence signed?
