aui-aceeditor=[javadoc:com.liferay.faces.alloy.component.aceeditor.AceEditor] is a [javadoc:javax.faces.component.UIInput] component that renders a field for editing source code text.
aui-aceeditor-general=The component supports *color-coded text* for various programming languages via the [vdldoc:aui:aceEditor:mode] attribute.
aui-datepicker=[javadoc:com.liferay.faces.alloy.component.datepicker.DatePicker] is a [javadoc:javax.faces.component.UIPanel] component that renders a popup a calendar with selectable dates.
aui-datepicker-date-pattern=A *custom pattern* can be specified via the [vdldoc:aui:datePicker:datePattern] attribute. The syntax of the date pattern follows the format specified by [javadoc:java.text.SimpleDateFormat].
aui-datepicker-general=The component can be attached to an [vdldoc:h:inputText] or [vdldoc:h:inputTextarea] via the [vdldoc:aui:datePicker:for] attribute.
aui-datepicker-instant-ajax=The component supports *instant Ajax* by simply adding [vdldoc:f:ajax] as a child of the input tag.
aui-datepicker-localization=A *custom locale* can be specified via the [vdldoc:aui:datePicker:locale] attribute.
aui-datepicker-localization-example-1=Hard coded Brazilian Portuguese locale
aui-datepicker-localization-example-2=Japanese [javadoc:java.util.Locale] obtained from a bean via EL
aui-datepicker-min-max-date=*Minimum and maximum dates* can be specified via the [vdldoc:aui:datePicker:minDate] and [vdldoc:aui:datePicker:maxDate] attributes.
aui-datepicker-multiple-panes=The amount of month *panes* that are displayed can be specified via the [vdldoc:aui:datePicker:panes] attribute (maximum of 3).
aui-datepicker-multiple-selection=The *date selection mode* can be specified via the [vdldoc:aui:datePicker:selectionMode] attribute. Valid values include "single" (the default), "multiple," or "multiple-sticky." The character(s) separating the selected dates can be specified via the [vdldoc:aui:datePicker:dateSeparator] attribute.
aui-datepicker-multiple-selection-example-1=Hold down shift or control to select multiple dates
aui-datepicker-multiple-selection-example-2=Pop up the datePicker multiple times to select multiple dates
aui-input-date-benefits-description=since it combines date selection and text input in a single component.
aui-starrating=[javadoc:com.liferay.faces.alloy.component.starrating.StarRating] is a [javadoc:javax.faces.component.UIInput] component that renders a set of stars. The user can click on a star to select a rating and click on the same star a second time to de-select a rating. Since it extends [javadoc:javax.faces.component.html.HtmlSelectOneRadio], it accepts [vdldoc:f:selectItem] or [vdldoc:f:selectItems] as child tags.
aui-starrating-data-model=The component can display stars *dynamically* when the [vdldoc:f:selectItems:value] attribute of the child [vdldoc:f:selectItems] tag is bound via EL to a model bean property (which is wrapped implicitly by JSF with a [javadoc:javax.faces.model.DataModel]). The [vdldoc:f:selectItems:var] attribute of the child [vdldoc:f:selectItems] tag is used to introduce a variable name into the EL when iterating over the model.
aui-starrating-default-value=A *default value* can be specified using one of two ways:
aui-starrating-default-value-example-1=Initializing the default value in the model bean.
aui-starrating-default-value-example-2=Setting the [vdldoc:aui:starRating:defaultSelected] attribute.
aui-starrating-general=There are two basic ways to *bind* the [vdldoc:aui:starRating:value] attribute this component to a model bean property:
aui-starrating-general-example-1=String value (no converter required)
aui-starrating-general-example-2=Object value (requires a converter)
aui-starrating-instant-ajax=The component supports *instant Ajax* by simply adding [vdldoc:f:ajax] as a child tag.
aui-tabview=[javadoc:com.liferay.faces.alloy.component.TabView] is a [javadoc:javax.faces.component.UIData] (iterator) component that renders tabs either statically or dynamically.
aui-tabview-general=Tabs can be specified *statically* with [vdldoc:aui:tab] child tags.
aui-tabview-data-model=Since it extends [javadoc:javax.faces.component.UIData], it can render tabs *dynamically* when the [vdldoc:aui:tabView:value] attribute is bound via EL to a model bean property (which is wrapped implicitly by JSF with a [javadoc:javax.faces.model.DataModel]). The [vdldoc:aui:tabView:var] attribute can be used to introduce a variable name into the EL when iterating over the model.
aui-thumbrating=[javadoc:com.liferay.faces.alloy.component.ThumbRating] is a [javadoc:javax.faces.component.UIInput] component that renders a pair of thumb icons that a user can select to indicate their favor. Since it extends [javadoc:javax.faces.component.html.HtmlSelectOneRadio], it accepts [vdldoc:f:selectItem] or [vdldoc:f:selectItems] as children.
aui-thumbrating-general=The [vdldoc:aui:thumbRating:value] of the component must be of type [javadoc:java.lang.Boolean].
aui-thumbrating-instant-ajax=The component supports *instant Ajax* by simply adding [vdldoc:f:ajax] as a child tag.
component=Component
data-model=Data Model
date-pattern=Date Pattern
description=Description
dislike=Dislike
example-1=Example #1
example-2=Example #2
favorite=Favorite
hyperlink-targeting-the-showcase-portlet=Hyperlink targeting the Showcase portlet
general=General
instant-ajax=Instant Ajax
like=Like
locale-from-el=locale from EL
localization=Localization
min-max-date=Min/Max Date
model-value=Model Value
multiple-panes=Multiple Panes
multiple-selection=Multiple Selection
note=Note
please-consider-using=Please consider using
portlet-namespace=[javadoc:com.liferay.faces.bridge.component.PortletNamespace] is a [javadoc:javax.faces.component.UIOutput] component that provides the ability to get the portlet namespace.
portlet-namespace-general=There are two basic ways to get the portlet namespace:
portlet-namespace-general-example-1=Introducing a var into the EL
portlet-namespace-general-example-2=Output directly to the response
portlet-renderurl=[javadoc:com.liferay.faces.bridge.component.PortletRenderURL] is a [javadoc:javax.faces.component.UIOutput] component that provides the ability to get a [javadoc:javax.portlet.PortletURL] that invokes the RENDER_PHASE of the portlet lifecycle targeting the current portlet.
portlet-renderurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet *render parameters* to the URL.
portlet-resourceurl=[javadoc:com.liferay.faces.bridge.component.PortletResourceURL] is a [javadoc:javax.faces.component.UIOutput] component that provides the ability to get a [javadoc:javax.portlet.ResourceURL] that invokes the RESOURCE_PHASE of the portlet lifecycle targeting the current portlet. 
portlet-resourceurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet resource parameters to the URL. The example below shows how to specify the *javax.faces.resource* and *ln* portlet *resource parameters* in order to get a URL that targets a JSF *image* resource.
rendered=Rendered
source-code=Source Code
sticky-multiple-selection=Sticky Multiple Selection
submit=Submit
usage=Usage
valid-date-range=Valid Date Range
vdl-documentation=VDL Documentation
