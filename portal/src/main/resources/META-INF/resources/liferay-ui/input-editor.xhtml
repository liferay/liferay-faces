<?xml version="1.0" encoding="UTF-8"?>
<ui:component xmlns="http://www.w3.org/1999/xhtml"
	xmlns:aui="http://liferay.com/faces/aui" xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:cc="http://java.sun.com/jsf/composite"
	xmlns:liferay-ui="http://liferay.com/faces/ui"
	xmlns:liferay-ui-internal="http://liferay.com/faces/ui-internal"
	xmlns:liferayutil="http://liferay.com/faces/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.w3.org/1999/xhtml http://www.w3.org/2002/08/xhtml/xhtml1-transitional.xsd">

	<cc:interface>
		<cc:attribute name="disabled" default="false" required="false" />
		<cc:attribute name="disabledRows" default="5" required="false" />
		<cc:attribute name="editorImpl" required="false" />
		<cc:attribute name="height" default="450" required="false" />
		<cc:attribute name="inlineMessage" default="false" required="false" />
		<cc:attribute name="label" required="false" />
		<cc:attribute name="maxLength" required="false" />
		<cc:attribute name="maxLengthMessage" required="false" />
		<cc:attribute name="onblur" required="false" />
		<cc:attribute name="onchange" required="false" />
		<cc:attribute name="pathThemeCss" required="false" />
		<cc:attribute name="plid" required="false" />
		<cc:attribute name="required" default="false" required="false" />
		<cc:attribute name="style" default="border: none;" required="false" />
		<cc:attribute name="toolbarSet" default="liferay" required="false" />
		<cc:attribute name="width" default="640" required="false" />
		<cc:attribute name="value" required="true" />
		<cc:clientBehavior name="blur" event="blur" targets="inputText"/>
		<cc:clientBehavior name="change" event="change" targets="inputText"/>
		<cc:editableValueHolder name="inputText" targets="inputText" />
	</cc:interface>

	<cc:implementation>

		<ui:remove>
			<!-- Unfortunately can't have EL expressions in the default attribute, so have to do it down here in the cc:implementation. -->
		</ui:remove>
		<c:set var="doAsUserId" value="#{liferay.themeDisplay.doAsUserId}" />
		<c:choose>
			<c:when test="#{empty cc.attrs.editorImpl}">
				<c:set var="editorImpl" value="editor.wysiwyg.default" />
			</c:when>
			<c:otherwise>
				<c:set var="editorImpl" value="#{cc.attrs.editorImpl}" />
			</c:otherwise>
		</c:choose>
		<c:set var="editorValue" value="#{liferayutil:getEditorValue(editorImpl)}" />
		<c:set var="editorName" value="#{aui:escapeClientId(cc.clientId)}#{aui:escapeClientId(':inputText')}" />
		<c:choose>
			<c:when test="#{empty cc.attrs.maxLength}">
				<c:set var="maxLength" value="-1" />
			</c:when>
			<c:otherwise>
				<c:set var="maxLength" value="#{cc.attrs.maxLength}" />
			</c:otherwise>
		</c:choose>
		<c:choose>
			<c:when test="#{empty cc.attrs.maxLengthMessage}">
				<c:set var="maxLengthMessage" value="Max Characters: #{cc.attrs.maxLength}, Remaining: " />
			</c:when>
			<c:otherwise>
				<c:set var="maxLengthMessage" value="#{cc.attrs.maxLengthMessage}" />
			</c:otherwise>
		</c:choose>
		<c:set var="responseNamespace" value="#{facesContext.externalContext.response.namespace}" />
		<c:set var="clientIdPrefix" value="#{liferayutil:stringReplace(cc.clientId, ':', '_')}" />
		<c:set var="prefixedInitMethod" value="#{clientIdPrefix}initRichText" />
		<c:set var="prefixedOnBlurMethod" value="#{clientIdPrefix}richTextBlurred" />
		<c:set var="prefixedOnChangeMethod" value="#{clientIdPrefix}richTextChanged" />
		<c:set var="prefixedCountCharsMethod" value="#{clientIdPrefix}countTotalAlphaNumChars" />
		<c:choose>
			<c:when test="#{empty cc.attrs.pathThemeCss}">
				<c:set var="pathThemeCss" value="#{liferayutil:escapeURL(liferay.themeDisplay.pathThemeCss)}" />
			</c:when>
			<c:otherwise>
				<c:set var="pathThemeCss" value="#{cc.attrs.pathThemeCss}" />
			</c:otherwise>
		</c:choose>
		<c:choose>
			<c:when test="#{empty cc.attrs.plid}">
				<c:set var="plid" value="#{liferay.themeDisplay.plid}" />
			</c:when>
			<c:otherwise>
				<c:set var="plid" value="#{cc.attrs.plid}" />
			</c:otherwise>
		</c:choose>

		<c:if test="#{cc.attrs.inlineMessage}">
			<h:message for="inputText" errorClass="portlet-msg-error" fatalClass="portlet-msg-error" infoClass="portlet-msg-info"
				warnClass="portlet-msg-warn" />
		</c:if>
		<c:choose>
			<c:when test="#{cc.rendered}">
				<c:choose>
					<c:when test="#{cc.attrs.disabled}">
						<h:inputTextarea id="inputText" disabled="true" rows="#{cc.attrs.disabledRows}" value="#{cc.attrs.value}"
							width="#{cc.attrs.width}" />
					</c:when>
					<c:otherwise>
						<script>CKEDITOR_BASEPATH = '/html/js/editor/ckeditor/';
function #{responseNamespace}#{prefixedCountCharsMethod}(text) {
var textLength = 0;
if (typeof text == "string") {
var tagMatcherRegExp = /(&lt;([^&gt;]+)&gt;)/ig;
var whitespaceMatcherRegExp =  /^[^A-Za-z0-9]+/gi;
var nbspMatcherRegExp = /[&amp;]nbsp[;]+/gi;
var alphaNumChars = text.replace(tagMatcherRegExp, "").replace(whitespaceMatcherRegExp, " ").replace(nbspMatcherRegExp, " ").trim();
if (typeof alphaNumChars == "string") {
	textLength = alphaNumChars.length;
}
}
return textLength;
}
function #{responseNamespace}#{prefixedInitMethod}() {
var hiddenField = document.getElementById('#{cc.clientId}:inputText');
var maxLength = #{maxLength};
if (maxLength > 0) {
var totalAlphaNumChars = #{responseNamespace}#{prefixedCountCharsMethod}(hiddenField.value);
var remaining = (maxLength - totalAlphaNumChars);
var messageSpan = document.getElementById('#{cc.clientId}:mlm');
messageSpan.firstChild.nodeValue = '#{maxLengthMessage} ' + remaining;
}
return hiddenField.value;
}
</script>
<ui:remove>
<!-- Hack: Sometimes the prefixedOnChangeMethod is called with an empty value, which overwrites the -->
<!-- initial (non-empty) composite component value. Detecting the presence of the 'firstTime' hidden -->
<!-- field provides a way of avoiding this condition. -->
</ui:remove>
<script>
function #{responseNamespace}#{prefixedOnChangeMethod}(text) {
var hiddenField = document.getElementById('#{cc.clientId}:inputText');
var firstTimeHiddenField = document.getElementById('#{cc.clientId}:firstTime');
if (firstTimeHiddenField) {
firstTimeHiddenField.parentNode.removeChild(firstTimeHiddenField);
if ((text.length == 0) &amp;&amp; (hiddenField.value.length &gt; 0)) {
return;
}
}
hiddenField.value = text;
var maxLength = #{maxLength};
if (maxLength > 0) {
var totalAlphaNumChars = #{responseNamespace}#{prefixedCountCharsMethod}(text);
var remaining = (maxLength - totalAlphaNumChars);
var messageSpan = document.getElementById('#{cc.clientId}:mlm');
messageSpan.firstChild.nodeValue = '#{maxLengthMessage} ' + remaining;
var messageDiv = document.getElementById('#{cc.clientId}:mld');
if (remaining > 0) {
messageDiv.className = 'portlet-msg-info';
}
else {
messageDiv.className = 'portlet-msg-error';
}
}
hiddenField.onchange();
}</script>
<script>
function #{responseNamespace}#{prefixedOnBlurMethod}() {
var hiddenField = document.getElementById('#{cc.clientId}:inputText');
hiddenField.onblur();
}
</script>
						<c:if test="#{!empty cc.attrs.maxLength}">
							<div id="#{cc.clientId}:mld" class="portlet-msg-info">
								<h:outputText id="mlm" value="#{maxLengthMessage} #{cc.attrs.maxLength}" />
							</div>
						</c:if>
						<c:choose>
							<c:when test="#{editorValue == 'bbcode'}">
								<ui:remove>
									<!-- Originally we tried the following in order to do this automatically: -->
									<!-- 	<h:outputStylesheet library="liferayportal" name="/html/portlet/message_boards/css/main.css" target="body" /> -->
									<!-- 	<h:outputScript library="liferayportal" name="/html/portlet/message_boards/js/main.js" target="head" /> -->
									<!-- And it worked in FireFox and IE9 but it caused JavaScript errors in Chrome. So if developers want -->
									<!-- to use the bbcode feature (which is actually a message_boards feature anyway), then the following must -->
									<!-- be added to the WEB-INF/liferay-portlet.xml descriptor: -->
									<!--	<header-portlet-css>/html/portlet/message_boards/css/main.css</header-portlet-css> -->
									<!-- 	<footer-portal-javascript>/html/portlet/message_boards/js/main.js</footer-portal-javascript> -->
								</ui:remove>
								<h:panelGroup layout="block" styleClass="portlet-message-boards">
									<h:panelGroup layout="block" styleClass="lfr-textarea message-edit">
										<h:inputTextarea id="inputText" cols="100" label="#{cc.attrs.label}" onchange="#{cc.attrs.onchange}"
											required="#{cc.attrs.required}" value="#{cc.attrs.value}">
											<cc:insertChildren />
										</h:inputTextarea>
									</h:panelGroup>
								</h:panelGroup>
								<aui:script position="bottom" use="liferay-bbcode-editor">
window['#{editorName}'] = new Liferay.Editor.bbCode(
{textarea: '##{editorName}'}
);
window['#{editorName}'].setHTML(#{responseNamespace}#{prefixedInitMethod}());
								</aui:script>
							</c:when>
							<c:otherwise>
								<h:inputHidden id="firstTime" type="hidden" />
								<h:inputTextarea id="inputText" cols="100" label="#{cc.attrs.label}" onblur="#{cc.attrs.onblur}"
									onchange="#{cc.attrs.onchange}"	required="#{cc.attrs.required}" value="#{cc.attrs.value}"
									style="display: none;">
									<cc:insertChildren />
								</h:inputTextarea>
								<c:choose>
									<c:when test="#{liferay.inlineInputEditor}">
										<liferay-ui-internal:input-editor
											editorImpl="#{editorImpl}"
											height="#{cc.attrs.height}"
											initMethod="#{prefixedInitMethod}"
											name="#{cc.clientId}"
											onBlurMethod="#{prefixedOnBlurMethod}"
											onChangeMethod="#{prefixedOnChangeMethod}"
											toolbarSet="#{cc.attrs.toolbarSet}"
											width="#{cc.attrs.width}" />
									</c:when>
									<c:otherwise>
										<iframe
											id="#{cc.clientId}content"
											class="#{cc.attrs.styleClass}"
											name="#{cc.clientId}content"
											height="#{cc.attrs.height}"
											width="#{cc.attrs.width}"
											src="/html/js/editor/editor.jsp?p_l_id=#{plid}&amp;p_main_path=%2Fc&amp;doAsUserId=#{doAsUserId}&amp;editorImpl=#{editorImpl}&amp;toolbarSet=#{cc.attrs.toolbarSet}&amp;initMethod=#{responseNamespace}#{prefixedInitMethod}&amp;onChangeMethod=#{responseNamespace}#{prefixedOnChangeMethod}&amp;cssPath=#{pathThemeCss}&amp;cssClasses=#{cssClasses}"
											style="border: none; margin: 0px;" />
									</c:otherwise>
								</c:choose>
							</c:otherwise>
						</c:choose>
					</c:otherwise>
				</c:choose>
			</c:when>
			<c:otherwise>
				<h:panelGroup id="#{cc.id}" rendered="false" />
			</c:otherwise>
		</c:choose>
	</cc:implementation>

</ui:component>
