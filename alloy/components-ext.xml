<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components>
<components namespace="alloy" namespaceURI="http://liferay.com/faces/alloy">
	<description>
		<![CDATA[The Liferay Faces Alloy facelet component tags with the <code>alloy:</code> tag name prefix.]]>
	</description>
	<extension>
		<function>
			<description><![CDATA[Returns an escaped representation of the specified client ID.]]></description>
			<function-name>escapeClientId</function-name>
			<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
			<function-signature>java.lang.String escapeClientId(java.lang.String)</function-signature>
		</function>
		<function>
			<description><![CDATA[Returns the client ID associated with the specified expression.]]></description>
			<function-name>findClientId</function-name>
			<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
			<function-signature>java.lang.String findClientId(java.lang.String)</function-signature>
		</function>
	</extension>
	<!-- generateTaglibXML="false" tags for common attributes -->
	<!-- 1. Interfaces -->
	<component name="ClientComponent" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[The key name that can be used to reference the component on the client.]]>
				</description>
				<name>clientKey</name>
				<type>java.lang.String</type>
				<override>true</override>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLTable" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the background color for the <code>&lt;table&gt;</code> element.]]>
				</description>
				<name>bgcolor</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Comma-delimited list of of row indexes. Each row index in the list will cause a previous <code>&lt;tbody&gt;</code> element to be closed, and a new <code>&lt;tbody&gt;</code> element to be opened.]]>
				</description>
				<name>bodyrows</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The width of the table border (measured in pixels).]]>
				</description>
				<name>border</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;caption&gt;</code> element.]]>
				</description>
				<name>captionClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the css style of the caption element.]]>
				</description>
				<name>captionStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the cell padding for the <code>&lt;table&gt;</code> element.]]>
				</description>
				<name>cellpadding</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the cell spacing for the <code>&lt;table&gt;</code> element.]]>
				</description>
				<name>cellspacing</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[List of CSS class names (separated by commas) that are to be rendered within the class attribute of the table's <code>&lt;td&gt;</code> elements.]]>
				</description>
				<name>columnClasses</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;tfoot&gt;</code> element.]]>
				</description>
				<name>footerClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies which side(s) of the surrounding frame are visible. Value values: none, above, below, hsides, vsides, lhs, rhs, box, border.]]>
				</description>
				<name>frame</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;thead&gt;</code> element.]]>
				</description>
				<name>headerClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[List of CSS class names (separated by commas) that are to be rendered within the class attribute of the table's <code>&lt;tr&gt;</code> elements.]]>
				</description>
				<name>rowClasses</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the rules for the <code>&lt;table&gt;</code> element. Valid values: none, groups, rows, cols, all.]]>
				</description>
				<name>rules</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the summary for the <code>&lt;table&gt;</code> element.]]>
				</description>
				<name>summary</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the width for the <code>&lt;table&gt;</code> element.]]>
				</description>
				<name>width</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Styleable" generateJava="false" generateTaglibXML="false">
		<!-- This component does not have <generateJava>false</generateJava> on its attributes for 2 reasons -->
		<!-- 1. style and styleClass are not inherited for all components. -->
		<!-- 2. If either getStyleClass() or setStyleClass() are overridden, the other method must be overridden as -->
		<!-- as well, so that they will have the same key in the stateHelper. Since getStyleClass() is currently -->
		<!-- overridden in all components, setStyleClass() must also be overridden. -->
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the css style of the element.]]>
				</description>
				<name>style</name>
				<type>java.lang.String</type>
				<override>true</override>
			</attribute>
			<attribute>
				<description>
					<![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]>
				</description>
				<name>styleClass</name>
				<type>java.lang.String</type>
				<override>true</override>
			</attribute>
		</attributes>
	</component>
	<!-- /Interfaces -->
	<!-- 2. JSF Custom Component Heirarchy -->
	<component name="UICommand" extendsTags="HTMLAccessibilityEvents UIComponentBase" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return an <code>Object</code>, and take no arguments. The <code>toString()</code> method of the returned object is used to determine where to navigate (if at all) after the action has been performed.]]>
				</description>
				<name>action</name>
				<method-signature>java.lang.Object action()</method-signature>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return <code>void</code>, and take either no arguments or one <code>ActionEvent</code> argument.]]>
				</description>
				<name>actionListener</name>
				<method-signature>
					void actionListener(javax.faces.event.ActionEvent)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]>
				</description>
				<name>immediate</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="UIComponentBase" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]>
				</description>
				<name>binding</name>
				<type>javax.faces.component.UIComponent</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A unique identifier for this component.]]>
				</description>
				<name>id</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]>
				</description>
				<name>rendered</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="UIInput" extendsTags="UIOutput" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]>
				</description>
				<name>converterMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]>
				</description>
				<name>immediate</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]>
				</description>
				<name>required</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]>
				</description>
				<name>requiredMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]>
				</description>
				<name>validator</name>
				<method-signature>
					void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]>
				</description>
				<name>validatorMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]>
				</description>
				<name>valueChangeListener</name>
				<method-signature>
					void valueChange(javax.faces.event.ValueChangeEvent)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="UIOutcomeTarget" extendsTags="HTMLAccessibilityEvents" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, view parameters (specified via <code>f:viewParam</code> tags) will be included on the navigation URL]]>
				</description>
				<name>includeViewParams</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A string which potentially matches the value of <code>from-outcome</code> key in a navigation-case.]]>
				</description>
				<name>outcome</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A fragment to be appended to the navigation URL.]]>
				</description>
				<name>fragment</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the client window param will not be inlcuded on the navigation URL. <b>Note:</b> the <code>ClientWindow</code> feature is disabled by default, so this attribute will have no effect unless <code>ClientWindow</code> is enabled.]]>
				</description>
				<name>disableClientWindow</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="UIOutput" extendsTags="UIComponentBase" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[The class name of the converter instance that is to be used by this component.]]>
				</description>
				<name>converter</name>
				<type>javax.faces.convert.Converter</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<!-- /JSF Custom Component Heirarchy -->
	<!-- 3. HTML Component Heirarchy -->
	<component name="HTMLAccessibility" extendsTags="HTMLCommonEvents HTMLPassthrough" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]>
				</description>
				<name>accesskey</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]>
				</description>
				<name>tabindex</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLAccessibilityEvents" extendsTags="HTMLAccessibility" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component loses focus.]]>
				</description>
				<name>onblur</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component gets focus.]]>
				</description>
				<name>onfocus</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLCommonEvents" extendsTags="Styleable UIComponentBase" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
		<component name="HTMLInput" extendsTags="UIInput" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description><![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]></description>
				<name>label</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]>
				</description>
				<name>readonly</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLInputEvents" extendsTags="HTMLInput" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]>
				</description>
				<name>onchange</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when the user selects this component.]]>
				</description>
				<name>onselect</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="HTMLPassthrough" extendsTags="Styleable UIComponentBase" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]>
				</description>
				<name>dir</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the language code used in the element.]]>
				</description>
				<name>lang</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]>
				</description>
				<name>role</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the title of the element.]]>
				</description>
				<name>title</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<!-- /HTML Component Heirarchy -->
	<!-- 4. Common -->
	<component name="ButtonCommon" extendsTags="Styleable UIComponentBase" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether or not the component should automatically recieve focus on the initial page load.]]>
				</description>
				<name>autofocus</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]>
				</description>
				<name>alt</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the URL of an image.]]>
				</description>
				<name>image</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="InputTextCommon" extendsTags="HTMLAccessibilityEvents HTMLInputEvents Styleable"
		generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]>
				</description>
				<name>maxlength</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="MessageCommon" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]>
				</description>
				<name>errorClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]>
				</description>
				<name>errorStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]>
				</description>
				<name>fatalClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]>
				</description>
				<name>fatalStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]>
				</description>
				<name>infoClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]>
				</description>
				<name>infoStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
            		<![CDATA[When true, the value of FacesMessage.getDetail() is rendered. This is true by default.]]>
				</description>
				<name>showDetail</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
            		<![CDATA[When true, the value of FacesMessage.getSummary() is rendered. This is true by default.]]>
				</description>
				<name>showSummary</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
            		<![CDATA[When true, the value of FacesMessage.getDetail() rendered as a tooltip. This is false by default.]]>
				</description>
				<name>tooltip</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]>
				</description>
				<name>warnClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]>
				</description>
				<name>warnStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<!-- /Common -->
	<!-- generateTaglibXML="false" tags for common attributes -->
	<component name="Body" extendsTags="Styleable" generateJava="false" />
	<component name="Button" extendsTags="ButtonCommon UIOutcomeTarget"
		parentClass="javax.faces.component.html.HtmlOutcomeTargetButton">
		<description>
			<![CDATA[Button is a UIOutput component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is button. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlOutcomeTargetButton.html" target="_blank"><code>HtmlOutcomeTargetButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/button.html" target="_blank"><code>h:button</code></a>. The component does not need to be a child of h:form since the outcome attribute is designed to navigate via HTTP GET.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The type of the button: button (default), submit, or reset.]]>
				</description>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
			<!-- h:button attributes -->
			<attribute>
				<description>
					<![CDATA[When this flag is true, view parameters (specified via <code>f:viewParam</code> tags) will be included on the navigation URL]]>
				</description>
				<name>includeViewParams</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A string which potentially matches the value of <code>from-outcome</code> key in a navigation-case.]]>
				</description>
				<name>outcome</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A fragment to be appended to the navigation URL.]]>
				</description>
				<name>fragment</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the client window param will not be inlcuded on the navigation URL. <b>Note:</b> the <code>ClientWindow</code> feature is disabled by default, so this attribute will have no effect unless <code>ClientWindow</code> is enabled.]]>
				</description>
				<name>disableClientWindow</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<!-- /h:button attributes -->
		</attributes>
	</component>
	<component name="Column" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.html.HtmlColumn">
		<description>
			<![CDATA[Column is a UIColumn component that renders a div with CSS class name <code>span#</code> (for example: <code>span1</code> or <code>span5</code>).]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:dataTabe, this is the JavaBean property that is to be used for filtering.]]>
				</description>
				<name>filterBy</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:dataTable, this is the name of the CSS class that is to be rendered within the class attribute of the table's <code>&lt;td&gt;</code> element inside the <code>&lt;tfoot&gt;</code> element.]]>
				</description>
				<name>footerClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:dataTable, this is the name of the CSS class that is to be rendered within the class attribute of the table's <code>&lt;th&gt;</code> element inside the <code>&lt;thead&gt;</code> element.]]>
				</description>
				<name>headerClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:dataTable, this is the text for the column header. This attribute can be used as a convenience instead of specifying a child <code>&lt;f:facet name="header" /&gt;</code> tag.]]>
				</description>
				<name>headerText</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:row, this is the width that the column will be offset by as a unit from 1 to 12. This value is rendered as a CSS class as <code>offset#</code> (for example if offset="4", the CSS class rendered will be <code>offset4</code>). If both the offsetWidth and offset attributes are present, the offsetWidth attribute determines the value of the offset. Please consider using offsetWidth.]]>
				</description>
				<name>offset</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:row, this is the width that the column will be offset by as a percent. This value selects the offset via the formula <code>offset = (offsetWidth/100)*12 (rounded to the nearest whole number)</code>. If both the offsetWidth and offset attributes are present, the offsetWidth attribute determines the value of the offset.]]>
				</description>
				<name>offsetWidth</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:row and this flag is true, then the column is to be rendered as a <code>&lt;th&gt;</code> element with <code>scope=row</code>.]]>
				</description>
				<name>rowHeader</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:dataTabe, this is the JavaBean property that is to be used for sorting.]]>
				</description>
				<name>sortBy</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:row, this is the width of this column as a unit from 1 to 12. This value is rendered as a CSS class as <code>span#</code> (for example if span="4", the CSS class rendered will be <code>span4</code>). If both the width and span attributes are present, the width attribute determines the value of the span number. Please consider using width.]]>
				</description>
				<name>span</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When aui:column is a child of alloy:row, this is the width of the column as a percent. This value selects the span number via the formula <code>span = (width/100)*12 (rounded to the nearest whole number)</code>. If both the width and span attributes are present, the width attribute determines the value of the span number.]]>
				</description>
				<name>width</name>
				<type>java.lang.Integer</type>
			</attribute>
		</attributes>
	</component>
	<component name="CommandButton" extendsTags="ButtonCommon UICommand" generateJava="false"
		rendererParentClass="com.liferay.faces.alloy.component.button.ButtonRenderer">
		<description>
			<![CDATA[CommandButton is a UICommand component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is submit. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlCommandButton.html" target="_blank"><code>HtmlCommandButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/commandButton.html" target="_blank"><code>h:commandButton</code></a>. The component must be a child of h:form in order to trigger the action or actionListener.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The type of the button: button, submit (default), or reset.]]>
				</description>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
			<!-- h:commandButton attributes -->
			<attribute>
				<description>
					<![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]>
				</description>
				<name>onchange</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when the user selects this component.]]>
				</description>
				<name>onselect</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]>
				</description>
				<name>readonly</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<!-- /h:commandButton attributes -->
		</attributes>
	</component>
	<component name="DataTable" generateJava="false" extendsTags="HTMLCommonEvents HTMLPassthrough HTMLTable"
		parentClass="javax.faces.component.html.HtmlDataTable"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[DataTable is a UIData (iterator) component that renders a <code>&lt;table&gt;</code> element representing tabular data. Since it extends HtmlDataTable, it supports all the features of h:dataTable.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The first row number that is to be displayed, relative to zero.]]>
				</description>
				<name>first</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The total number of rows that are to be displayed. If not set, then all rows are displayed.]]>
				</description>
				<name>rows</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The name of the variable that is to be intorduced into the el representing the current iteration.]]>
				</description>
				<name>var</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Field" extendsTags="PanelGroup"
		parentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroup"
		rendererParentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroupRenderer">
		<description>
			<![CDATA[Field is a UIPanel component that renders a <div> element and a <label> element in order to wrap a field. Since it extends PanelGroup, it supports all the features of alloy:panelGroup.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The text value for the rendered &lt;label&gt; element.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies whether the HTML element rendered by this component will be a <code>div</code> (default) or a <code>span</code>. If the value of this attribute is <code>block</code>, the rendered element will be a <code>div</code>.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Fieldset" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.UIPanel">
		<description>
			<![CDATA[Fieldset is a UIPanel component that renders a &lt;fieldset&gt; element in order to group form elements.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The text value for the rendered &lt;legend&gt; element.]]>
				</description>
				<name>legend</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="Icon" extendsTags="Styleable UIComponentBase">
		<description>
			<![CDATA[Icon is a component that renders a span which contains an icon specified by the name attribute.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The icon which this component will render. A list of valid icons can be found at <a href="http://liferay.github.io/alloy-bootstrap/base-css.html#icons" target="_blank">Bootstrap Base CSS</a>. <b>Note:</b> icon names must be specified without the <code>icon-</code> prefix.]]>
				</description>
				<name>name</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="InputDate" extendsTags="InputText"
		parentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTimeBase"
		rendererParentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTimeRendererBase">
		<description>
			<![CDATA[InputDate is a UIInput component that renders a textbox and a popup a calendar with selectable dates. The component attepts to automatically convert the submitted value to a Date via a built in DateTimeConverter.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The format of the date that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>.]]>
				</description>
				<name>datePattern</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Used to determine the format fo the date unless the datePattern is specified. The locale of the pickDate.]]>
				</description>
				<name>locale</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The maximum date that can be selected by the user.]]>
				</description>
				<name>maximumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The minimum date that can be selected by the user.]]>
				</description>
				<name>minimumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The number of month panes shown in the popup calendar. Valid values are 1 (the default), 2, and 3.]]>
				</description>
				<name>panes</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<defaultValue>focus</defaultValue>
				<description>
					<![CDATA[Specifies which event will pop up the calendar. Valid values are <code>focus</code> (the default), <code>button</code>, and <code>both</code>.]]>
				</description>
				<type>java.lang.String</type>
				<name>showOn</name>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the stack order of the calendar popup. When running in Liferay Portal, the value of Liferay.zIndex.TOOLTIP is the default.]]>
				</description>
				<name>zIndex</name>
				<type>java.lang.Object</type>
			</attribute>
		</attributes>
	</component>
	<component name="InputSourceCode" extendsTags="ClientComponent Styleable UIInput" module="aui-ace-editor"
		parentClass="javax.faces.component.html.HtmlInputText"
		rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase" yui="true"
		yuiName="AceEditor">
		<description>
			<![CDATA[InputSourceCode is an input component that renders a field for editing source code text.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.Object</jsfReservedAttributeType>
			</attribute>
		</attributes>
	</component>
	<component name="InputText" extendsTags="InputTextCommon" generateJava="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]>
				</description>
				<name>alt</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>on</code> (default) and <code>off</code>.]]>
				</description>
				<name>autocomplete</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the visual length of the element.]]>
				</description>
				<name>size</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="InputTextarea" extendsTags="InputTextCommon" generateJava="false"
		parentClass="javax.faces.component.html.HtmlInputTextarea">
		<attributes>
			<attribute>
				<description>
					<![CDATA[__DESCRIPTION__]]>
				</description>
				<name>cols</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[__DESCRIPTION__]]>
				</description>
				<name>rows</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Message" extendsTags="HTMLPassthrough Styleable UIComponentBase MessageCommon"
		generateJava="true"	parentClass="javax.faces.component.html.HtmlMessage"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Message is a UIMessage component that renders a <code>&lt;span&gt;</code> element containing the text of a single FacesMessage for an associated component. Since it extends HtmlMessage, it supports all the features of h:message.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The id of the component for which to render an associated message.]]>
				</description>
				<name>for</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Messages" extendsTags="HTMLPassthrough Styleable UIComponentBase MessageCommon"
		generateJava="true"	parentClass="javax.faces.component.html.HtmlMessages"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Messages is a UIMessages component that the text of one or more FacesMessage instances inside a <code>&lt;ul&gt;</code> element or <code>&lt;table&gt;</code> element for an associated component, according to the layout attribute. Since it extends HtmlMessages, it supports all the features of h:messages.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The id of the component for which to render associated message(s). This attribute takes precedence over the globalOnly attribute.]]>
				</description>
				<name>for</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
            		<![CDATA[When true, only the global FacesMessages (those that are not associated with a specific component) are displayed. This is false by default.]]>
				</description>
				<name>globalOnly</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When 'table', an HTML table is rendered and each message appears in a separate table row. When 'list', an HTML unordered list is rendered and each message appears in a separate list item. The default value is 'list'.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="OutputRemainingChars" extendsTags="ClientComponent OutputText" module="aui-char-counter"
		parentClass="com.liferay.faces.alloy.component.outputtext.OutputText" 
		rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase" yui="true"
		yuiName="CharCounter">
		<description>
			<![CDATA[CharCounter is an OutputText component that displays the number of allowed characters remaining for a given text input, and limits the number of characters allowed in the input.  Renders as HtmlOutputText renders, so this tag will optionally render a span when i18n or style attributes used.]]>
		</description>
		<attributes>
			<!-- Attributes used to help the component follow normal JSF usage patterns -->
			<attribute>
				<description>
					<![CDATA[The id of the text input node which is used to calculate the remaining characters. One of either "for" or "input" are required.]]>
				</description>
				<name>for</name>
				<type>java.lang.String</type>
			</attribute>
	      	<!-- Attributes that are generated for the Alloy component -->
	      	<attribute>
				<description>
					<![CDATA[Node or Selector to display the number of remaining characters calculated by the charCounter.]]>
				</description>
				<name>counter</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Input text node which will have it's number of characters limited by the charCounter. One of either "for" or "input" are required.]]>
				</description>
				<name>input</name>
				<type>java.lang.String</type>
			</attribute>
			<!-- Attributes that were invented here to implement Alloy methods -->
			<attribute>
				<description>
					<![CDATA[Node or Selector to display the number of remaining characters calculated by the charCounter.]]>
				</description>
				<name>onMaxlengthReached</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Node or Selector to display the number of remaining characters calculated by the charCounter.]]>
				</description>
				<name>onceMaxlengthReached</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="OutputText" extendsTags="HTMLPassthrough UIOutput" generateJava="false">
		<description>
			<![CDATA[OuputText is an <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlOutputText.html" target="_blank"><code>HtmlOutputText</code></a> component that delegates rendering to its JSF renderer.]]>
		</description>
		<attributes>
			<attribute>
            	<description>
            		<![CDATA[When false, markup will not be escaped. This is true by default.]]>
            	</description>
            	<name>escape</name>
            	<type>java.lang.String</type>
				<generateJava>false</generateJava>
        	</attribute>
		</attributes>
	</component>
	<component name="PanelGrid" generateJava="true" extendsTags="HTMLCommonEvents HTMLPassthrough HTMLTable"
		parentClass="javax.faces.component.html.HtmlPanelGrid"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[PanelGrid is a UIPanel component that renders a <code>&lt;table&gt;</code> element to layout its children in a tabular grid. Since it extends HtmlPanelGrid, it supports all the features of h:panelGrid.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The total number of columns that are to be displayed. When the number of child components exceeds this number, the previous <code>&lt;tr&gt;</code> element is closed and a new <code>&lt;tr&gt;</code> element is opened.]]>
				</description>
				<name>columns</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="PanelGroup" generateJava="false" extendsTags="HTMLCommonEvents"
		parentClass="javax.faces.component.html.HtmlPanelGroup"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[PanelGroup is a UIPanel component that renders a <code>&lt;span&gt;</code> or a <code>&lt;div&gt;</code> element for grouping purposes. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[Specifies whether the HTML element rendered by this component will be a <code>span</code> (default) or a <code>div</code>. If the value of this attribute is <code>block</code>, the rendered element will be a <code>div</code>.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="PickDate" extendsTags="ClientComponent Styleable UIComponentBase" module="aui-datepicker"
		yui="true" yuiName="DatePicker">
		<description>
			<![CDATA[PickDate is a UIComponent that renders a popup a calendar with selectable dates.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be shown initially. The default value is false.]]>
				</description>
				<name>autoShow</name>
				<type>java.lang.Boolean</type>
				<yuiName>autoHide</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The format of the date that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>.]]>
				</description>
				<name>datePattern</name>
				<type>java.lang.String</type>
				<yuiName>mask</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the character or string which seperates the dates when multiple selection is used.]]>
				</description>
				<name>dateSeparator</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The id of the component that the pickDate will be triggered by. If trigger is specified, this value is unused.]]>
				</description>
				<name>for</name>
				<required>true</required>
				<type>java.lang.String</type>
				<yuiName>trigger</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Used to determine the format fo the date unless the datePattern is specified. The locale of the pickDate.]]>
				</description>
				<name>locale</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The maximum date that can be selected by the user.]]>
				</description>
				<name>maximumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The minimum date that can be selected by the user.]]>
				</description>
				<name>minimumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The number of month panes shown in the popup calendar. Valid values are 1 (the default), 2, and 3.]]>
				</description>
				<name>panes</name>
				<type>java.lang.Integer</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the date selection style. Valid values include <code>single</code> (the default), <code>multiple,</code> or <code>multiple-sticky.</code>]]>
				</description>
				<name>selectionMode</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the stack order of the calendar popup. When running in Liferay Portal, the value of Liferay.zIndex.TOOLTIP is the default.]]>
				</description>
				<name>zIndex</name>
				<type>java.lang.Object</type>
				<yuiName>popover</yuiName>
			</attribute>
		</attributes>
	</component>
	<component name="Row" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.UIPanel">
		<description>
			<![CDATA[Row is a UIPanel component that renders a <div> and is designed to be used in conjunction with alloy:column child component tags.]]>
		</description>	
		<attributes>
			<attribute>
				<description><![CDATA[When this flag is true, the element will have the CSS class <code>row-fluid</code>. Otherwise, the element will have the CSS class <code>row</code>. The default value is true.]]></description>
				<name>fluid</name>
				<type>java.lang.Boolean</type>
			</attribute>
		</attributes>
	</component>
	<component name="SelectOneRadio" extendsTags="HTMLAccessibilityEvents HTMLInputEvents"
		generateJava="false" parentClass="javax.faces.component.html.HtmlSelectOneRadio">
		<description>
		   <![CDATA[SelectOneRadio is a UISelectOne component that renders radio buttons. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it supports all the features of h:selectOneRadio such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The width of the table border (measured in pixels).]]>
				</description>
				<name>border</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]>
				</description>
				<name>disabledClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]>
				</description>
				<name>enabledClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]>
				</description>
				<name>hideNoSelectionOption</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The direction in which the layout of the component should go.  The default value is 'lineDirection'.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="SelectStarRating" extendsTags="ClientComponent SelectOneRadio" module="aui-rating"
		parentClass="com.liferay.faces.alloy.component.selectoneradio.SelectOneRadio"
		rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase" yui="true"
		yuiName="Rating">
		<description>
			<![CDATA[StarRating is a UISelectOne component that renders a set of stars. The user can click on a star to select a rating and click on the same star a second time to de-select a rating. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it accepts f:selectItem or f:selectItems as child tags.]]>
		</description>
		<attributes>
			<!-- Attributes that are found both in JSF and AlloyUI -->
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.String</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the title of the element.]]>
				</description>
				<name>title</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.String</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.Object</jsfReservedAttributeType>
			</attribute>
			<!-- Attributes that are inherited from HtmlSelectOneRadio -->
		</attributes>
	</component>
	<component name="SelectThumbRating" extendsTags="SelectStarRating" generateJava="false" module="aui-rating"
		parentClass="com.liferay.faces.alloy.component.selectstarrating.SelectStarRating"
		rendererParentClass="com.liferay.faces.alloy.component.selectstarrating.SelectStarRatingRenderer" yui="true"
		yuiName="ThumbRating">
		<description>
			<![CDATA[SelectThumbRating is a UISelectOne component that renders a pair of thumb icons that a user can select to indicate their favor. The user can click on a thumb to select their favor and click on the same thumb a second time to de-select their favor. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it accepts f:selectItem or f:selectItems as children.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.Object</jsfReservedAttributeType>
			</attribute>
		</attributes>
	</component>
	<component name="Tab" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.UIColumn">
		<description>
			<![CDATA[Tab is a panel component that renders nested/child tags as content within itself.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[__DESCRIPTION__]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="TabView" extendsTags="ClientComponent Styleable UIComponentBase" module="aui-tabview"
		parentClass="javax.faces.component.UIData" yui="true">
		<description>
			<![CDATA[TabView is an iterator component that renders tabs either statically or dynamically.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The the height (in pixels) of the rendered <div>.]]>
				</description>
				<name>height</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this indicates whether or not the tabs will appear vertically. The default value is false.]]>
				</description>
				<name>stacked</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The name of the variable that is to be intorduced into the el representing the current iteration.]]>
				</description>
				<name>var</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The the height (in pixels) of the rendered <div>.]]>
				</description>
				<name>width</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
</components>
