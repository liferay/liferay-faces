<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components>
<components namespace="aui" extends="transformer.output.xml" namespaceURI="http://liferay.com/faces/aui">
	<description>
		<![CDATA[The Liferay Faces Alloy facelet component tags with the <code>aui:</code> tag name prefix.]]>
	</description>
	<extension>
		<function>
			<description><![CDATA[Returns an escaped representation of the specified client ID.]]></description>
			<function-name>escapeClientId</function-name>
			<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
			<function-signature>java.lang.String escapeClientId(java.lang.String)</function-signature>
		</function>
		<function>
			<description><![CDATA[Returns the client ID associated with the specified expression.]]></description>
			<function-name>findClientId</function-name>
			<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
			<function-signature>java.lang.String findClientId(java.lang.String)</function-signature>
		</function>
		<styleableAttributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the css style of the element.]]>
				</description>
				<name>style</name>
				<type>java.lang.String</type>
				<outputUnsafe>true</outputUnsafe>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The name of a CSS class that is to be rendered within the class attribute.]]>
				</description>
				<name>styleClass</name>
				<type>java.lang.String</type>
				<outputUnsafe>true</outputUnsafe>
			</attribute>
		</styleableAttributes>
		<clientComponentAttributes>
			<attribute>
				<description>
					<![CDATA[The key name that can be used to reference the component on the client.]]>
				</description>
				<name>clientKey</name>
				<type>java.lang.String</type>
				<outputUnsafe>true</outputUnsafe>
			</attribute>
		</clientComponentAttributes>
	</extension>
	<component name="AceEditor" parentClass="javax.faces.component.html.HtmlInputText"
		rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase">
		<description>
			<![CDATA[AceEditor is an input component that renders a field for editing source code text.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]>
				</description>
				<name>required</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Body" generateJava="false" />
	<component name="Button" parentClass="javax.faces.component.html.HtmlOutcomeTargetButton">
		<description>
			<![CDATA[Button is a UIOutput component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is button. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlOutcomeTargetButton.html" target="_blank"><code>HtmlOutcomeTargetButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/button.html" target="_blank"><code>h:button</code></a>. The component does not need to be a child of h:form since the outcome attribute is designed to navigate via HTTP GET.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether or not the component should automatically recieve focus on the initial page load.]]>
				</description>
				<name>autofocus</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The type of the button: button (default), submit, or reset.]]>
				</description>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
			<!-- h:button attributes -->
			<attribute>
				<description>
					<![CDATA[A list of tokens separated by spaces that specify the various WAI-ARIA roles that this component is used by.]]>
				</description>
				<name>role</name>
				<type>javal.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, view parameters (specified via <code>f:viewParam</code> tags) will be included on the navigation URL]]>
				</description>
				<name>includeViewParams</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A string which potentially matches the value of <code>from-outcome</code> key in a navigation-case.]]>
				</description>
				<name>outcome</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A hot key character that makes it possible for the user to change focus to this component]]>
				</description>
				<name>accesskey</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]>
				</description>
				<name>alt</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Designates the reading direction for the attribute. For example, right to left (RTL), or left to right (LTR).]]>
				</description>
				<name>dir</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A fragment to be appended to the navigation URL.]]>
				</description>
				<name>fragment</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A unique identifier for this component.]]>
				</description>
				<name>id</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the URL of an image.]]>
				</description>
				<name>image</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the language code used in this element.]]>
				</description>
				<name>lang</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component loses focus.]]>
				</description>
				<name>onblur</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component gets focus.]]>
				</description>
				<name>onfocus</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]>
				</description>
				<name>rendered</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An integer designating the position in the tabbing order for this component among others, if any.]]>
				</description>
				<name>tabindex</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the title of the element.]]>
				</description>
				<name>title</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]>
				</description>
				<name>binding</name>
				<type>javax.faces.component.UIComponent</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the client window param will not be inlcuded on the navigation URL. <b>Note:</b> the <code>ClientWindow</code> feature is disabled by default, so this attribute will have no effect unless <code>ClientWindow</code> is enabled.]]>
				</description>
				<name>disableClientWindow</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<!-- /h:button attributes -->
		</attributes>
	</component>
	<component name="CommandButton" generateJava="false" rendererParentClass="com.liferay.faces.alloy.component.button.ButtonRenderer">
		<description>
			<![CDATA[CommandButton is a UICommand component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is submit. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlCommandButton.html" target="_blank"><code>HtmlCommandButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/commandButton.html" target="_blank"><code>h:commandButton</code></a>. The component must be a child of h:form in order to trigger the action or actionListener.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether or not the component should automatically recieve focus on the initial page load.]]>
				</description>
				<name>autofocus</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The type of the button: button, submit (default), or reset.]]>
				</description>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
			<!-- h:commandButton attributes -->
			<attribute>
				<description>
					<![CDATA[A list of tokens separated by spaces that specify the various WAI-ARIA roles that this component is used by.]]>
				</description>
				<name>role</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return an <code>Object</code>, and take no arguments. The <code>toString()</code> method of the returned object is used to determine where to navigate (if at all) after the action has been performed.]]>
				</description>
				<name>action</name>
				<method-signature>java.lang.Object action()</method-signature>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return <code>void</code>, and take either no arguments or one <code>ActionEvent</code> argument.]]>
				</description>
				<name>actionListener</name>
				<method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A unique identifier for this component.]]>
				</description>
				<name>id</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]>
				</description>
				<name>immediate</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]>
				</description>
				<name>rendered</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A hot key character that makes it possible for the user to change focus to this component]]>
				</description>
				<name>accesskey</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]>
				</description>
				<name>alt</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Designates the reading direction for the attribute. For example, right to left (RTL), or left to right (LTR).]]>
				</description>
				<name>dir</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the URL of an image.]]>
				</description>
				<name>image</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the language code used in this element.]]>
				</description>
				<name>lang</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component loses focus.]]>
				</description>
				<name>onblur</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]>
				</description>
				<name>onchange</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component gets focus.]]>
				</description>
				<name>onfocus</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when the user selects this component.]]>
				</description>
				<name>onselect</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]>
				</description>
				<name>readonly</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An integer designating the position in the tabbing order for this component among others, if any.]]>
				</description>
				<name>tabindex</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the title of the element.]]>
				</description>
				<name>title</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]>
				</description>
				<name>binding</name>
				<type>javax.faces.component.UIComponent</type>
				<generateJava>false</generateJava>
			</attribute>
			<!-- /h:commandButton attributes -->
		</attributes>
	</component>
	<component name="DatePicker">
		<description>
			<![CDATA[Pops up a calendar with selectable dates when its trigger is clicked.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]>
				</description>
				<name>binding</name>
				<type>javax.faces.component.UIComponent</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The format of the date that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>.]]>
				</description>
				<name>datePattern</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The id of the component that the datePicker will be triggered by. If trigger is specified, this value is unused.]]>
				</description>
				<name>for</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Used to determine the format fo the date unless the datePattern is specified. The locale of the datePicker.]]>
				</description>
				<name>locale</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
						<![CDATA[The maximum date that can be selected by the user.]]>
				</description>
				<name>maximumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The minimum date that can be selected by the user.]]>
				</description>
				<name>minimumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the date selection style. Valid values include <code>single</code> (the default), <code>multiple,</code> or <code>multiple-sticky.</code>]]>
				</description>
				<name>selectionMode</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The fully-qualified id of the element that triggers the calendar popup. Please consider using the <code>for</code> attribute instead.]]>
				</description>
				<name>trigger</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the stack order of the calendar popup. When running in Liferay Portal, the value of Liferay.zIndex.TOOLTIP is the default.]]>
				</description>
				<name>zIndex</name>
				<type>java.lang.Object</type>
			</attribute>
		</attributes>
	</component>
	<component name="Icon">
		<description>
			<![CDATA[Icon is a component that renders a span which contains an icon specified by the name attribute.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[A unique identifier for this component.]]>
				</description>
				<name>id</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The icon which this component will render. A list of valid icons can be found at <a href="http://liferay.github.io/alloy-bootstrap/base-css.html#icons" target="_blank">Bootstrap Base CSS</a>. <b>Note:</b> icon names must be specified without the <code>icon-</code> prefix.]]>
				</description>
				<name>name</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]>
				</description>
				<name>rendered</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="InputText" generateJava="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[A hot key character that makes it possible for the user to change focus to this component]]>
				</description>
				<name>accesskey</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]>
				</description>
				<name>alt</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>on</code> (default) and <code>off</code>.]]>
				</description>
				<name>autocomplete</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]>
				</description>
				<name>binding</name>
				<type>javax.faces.component.UIComponent</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The class name of the converter instance that is to be used by this component.]]>
				</description>
				<name>converter</name>
				<type>javax.faces.convert.Converter</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]>
				</description>
				<name>converterMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Designates the reading direction for the attribute. For example, right to left (RTL), or left to right (LTR).]]>
				</description>
				<name>dir</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A unique identifier for this component.]]>
				</description>
				<name>id</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]>
				</description>
				<name>immediate</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the language code used in this element.]]>
				</description>
				<name>lang</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the maximum length of characters allowd in this element.]]>
				</description>
				<name>maxlength</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component loses focus.]]>
				</description>
				<name>onblur</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]>
				</description>
				<name>onchange</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component gets focus.]]>
				</description>
				<name>onfocus</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when the user selects this component.]]>
				</description>
				<name>onselect</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]>
				</description>
				<name>readonly</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]>
				</description>
				<name>rendered</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]>
				</description>
				<name>required</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]>
				</description>
				<name>requiredMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A list of tokens separated by spaces that specify the various WAI-ARIA roles that this component is used by.]]>
				</description>
				<name>role</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the visual length of this element.]]>
				</description>
				<name>size</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An integer designating the position in the tabbing order for this component among others, if any.]]>
				</description>
				<name>tabindex</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the title of the element.]]>
				</description>
				<name>title</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]>
				</description>
				<name>validator</name>
				<method-signature>
					void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
					java.lang.Object)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]>
				</description>
				<name>validatorMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]>
				</description>
				<name>valueChangeListener</name>
				<method-signature>
					void valueChange(javax.faces.event.ValueChangeEvent)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="InputDate" extends="InputText" parentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTimeBase"
		rendererParentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTimeRendererBase">
		<description>
			<![CDATA[InputDate is a UIInput component that renders a textbox and a popup a calendar with selectable dates. The component attepts to automatically convert the submitted value to a Date via a built in DateTimeConverter.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The format of the date that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>.]]>
				</description>
				<name>datePattern</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Used to determine the format fo the date unless the datePattern is specified. The locale of the datePicker.]]>
				</description>
				<name>locale</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The maximum date that can be selected by the user.]]>
				</description>
				<name>maximumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The minimum date that can be selected by the user.]]>
				</description>
				<name>minimumDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<defaultValue>1</defaultValue>
				<description>
					<![CDATA[The number of month panes shown in the popup calendar. Valid values are 1 (the default), 2, and 3.]]>
				</description>
				<name>panes</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<defaultValue>focus</defaultValue>
				<description>
					<![CDATA[Specifies which event will pop up the calendar. Valid values are <code>focus</code> (the default), <code>button</code>, and <code>both</code>.]]>
				</description>
				<type>java.lang.String</type>
				<name>showOn</name>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the stack order of the calendar popup. When running in Liferay Portal, the value of Liferay.zIndex.TOOLTIP is the default.]]>
				</description>
				<name>zIndex</name>
				<type>java.lang.Object</type>
			</attribute>
		</attributes>
	</component>
	<component name="InputTextarea" generateJava="false" parentClass="javax.faces.component.html.HtmlInputTextarea" />
	<component name="Tab" parentClass="javax.faces.component.UIColumn">
		<description>
			<![CDATA[Tab is a panel component that renders nested/child tags as content within itself.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[__DESCRIPTION__]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="TabView" parentClass="javax.faces.component.UIData">
		<description>
			<![CDATA[TabView is an iterator component that renders tabs either statically or dynamically.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The name of the variable that is to be intorduced into the el representing the current iteration.]]>
				</description>
				<name>var</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Rating" preferredName="StarRating" parentClass="javax.faces.component.html.HtmlSelectOneRadio"
		rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase">
		<description>
			<![CDATA[StarRating is an input component that renders a set of stars.]]>
		</description>
		<attributes>
			<!-- Attributes that are found both in JSF and AlloyUI -->
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>java.lang.Boolean</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>boolean</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.String</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the title of the element.]]>
				</description>
				<name>title</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.String</jsfReservedAttributeType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.String</type>
				<jsfReservedAttribute>true</jsfReservedAttribute>
				<jsfReservedAttributeType>java.lang.Object</jsfReservedAttributeType>
			</attribute>
			<!-- Attributes that default to jsfReservedAttribute=true -->
			<attribute>
				<description>
					<![CDATA[A unique identifier for this component.]]>
				</description>
				<name>id</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]>
				</description>
				<name>rendered</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<!-- Attributes that are inherited from HtmlSelectOneRadio -->
			<attribute>
				<description>
					<![CDATA[The class name of the converter instance that is to be used by this component.]]>
				</description>
				<name>converter</name>
				<type>javax.faces.convert.Converter</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]>
				</description>
				<name>converterMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]>
				</description>
				<name>immediate</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]>
				</description>
				<name>required</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]>
				</description>
				<name>requiredMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]>
				</description>
				<name>validator</name>
				<method-signature>
					void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
					java.lang.Object)
				</method-signature>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]>
				</description>
				<name>validatorMessage</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]>
				</description>
				<name>valueChangeListener</name>
				<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A hot key character that makes it possible for the user to change focus to this component]]>
				</description>
				<name>accesskey</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[__DESCRIPTION__]]>
				</description>
				<name>border</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Designates the reading direction for the attribute. For example, right to left (RTL), or left to right (LTR).]]>
				</description>
				<name>dir</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]>
				</description>
				<name>disabledClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]>
				</description>
				<name>enabledClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]>
				</description>
				<name>hideNoSelectionOption</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the language code used in this element.]]>
				</description>
				<name>lang</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component loses focus.]]>
				</description>
				<name>onblur</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]>
				</description>
				<name>onchange</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component gets focus.]]>
				</description>
				<name>onfocus</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when the user selects this component.]]>
				</description>
				<name>onselect</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]>
				</description>
				<name>readonly</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An integer designating the position in the tabbing order for this component among others, if any.]]>
				</description>
				<name>tabindex</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]>
				</description>
				<name>binding</name>
				<type>javax.faces.component.UIComponent</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A list of tokens separated by spaces that specify the various WAI-ARIA roles that this component is used by.]]>
				</description>
				<name>role</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="ThumbRating" extends="StarRating" generateJava="false"
		parentClass="com.liferay.faces.alloy.component.rating.Rating"
		rendererParentClass="com.liferay.faces.alloy.component.rating.RatingRenderer" />

</components>
