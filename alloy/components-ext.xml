<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components>
<components extends="../util/common-components.xml">
	<description>
		<![CDATA[The Liferay Faces Alloy facelet component tags with the <code>alloy:</code> tag name prefix.]]>
	</description>
	<extension>
		<function>
			<description><![CDATA[Returns an escaped representation of the specified client ID.]]></description>
			<function-name>escapeClientId</function-name>
			<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
			<function-signature>java.lang.String escapeClientId(java.lang.String)</function-signature>
		</function>
		<function>
			<description><![CDATA[Returns the client ID associated with the specified expression.]]></description>
			<function-name>findClientId</function-name>
			<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
			<function-signature>java.lang.String findClientId(java.lang.String)</function-signature>
		</function>
	</extension>
	<!-- generateTaglibXML="false" tags for common attributes -->
	<!-- Common -->
	<component name="AnchorLinkCommon" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[The character encoding of the resource linked to by this component.]]>
				</description>
				<name>charset</name>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The position and shape of the component's area on the page. Used in image maps.]]>
				</description>
				<name>coords</name>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The language code of the resource linked to by this component.]]>
				</description>
				<name>hreflang</name>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The relationship between the current document and the one linked to by this component. This is a space-separated list of link types. Used by bots, not browsers.]]>
				</description>
				<name>rel</name>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The reverse of the rel attribute. The relationship between the document linked to by this component and the current document. ]]>
				</description>
				<name>rev</name>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Used by some browsers with the coords to specify the size, shape, and placement of the link.]]>
				</description>
				<name>shape</name>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies which window, tab, or frame to open the link in.]]>
				</description>
				<name>target</name>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the content type of resource located by the URL in the rendered href attribute.]]>
				</description>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="ButtonCommon" extendsTags="AltInherited StyleableInherited UIComponentBase" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether or not the component should automatically recieve focus on the initial page load.]]>
				</description>
				<name>autofocus</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]>
				</description>
				<name>disabled</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the URL of an image.]]>
				</description>
				<name>image</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="InputCommon" extendsTags="HTMLAccessibilityEvents HTMLInputEvents StyleableInherited"
		generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]>
				</description>
				<name>maxlength</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="MessageCommon" extendsTags="HTMLPassthrough StyleableInherited UIComponentBase"
		generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]>
				</description>
				<name>errorClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]>
				</description>
				<name>errorStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]>
				</description>
				<name>fatalClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]>
				</description>
				<name>fatalStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]>
				</description>
				<name>infoClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]>
				</description>
				<name>infoStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, the value of FacesMessage.getDetail() is rendered. This is true by default.]]>
				</description>
				<name>showDetail</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, the value of FacesMessage.getSummary() is rendered. This is true by default.]]>
				</description>
				<name>showSummary</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, the value of FacesMessage.getDetail() rendered as a tooltip. This is false by default.]]>
				</description>
				<name>tooltip</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]>
				</description>
				<name>warnClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]>
				</description>
				<name>warnStyle</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="OutputScriptStylesheetCommon" extendsTags="UIOutput" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<description><![CDATA[The name of the library which contains the resource.]]></description>
				<name>library</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description><![CDATA[The name of the resource file to be included on the page.]]></description>
				<name>name</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="OverlayCommon" extendsTags="ClientComponent" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When true, the component is visible initially. The default is false.]]>
				</description>
				<name>autoShow</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The text to place in the header of the component.]]>
				</description>
				<name>headerText</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<defaultValue>Integer.MIN_VALUE</defaultValue>
				<description>
					<![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]>
				</description>
				<name>zIndex</name>
				<type>java.lang.Integer</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="DialogPopoverCommon" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<defaultValue>true</defaultValue>
				<description>
					<![CDATA[When true, an "x" is placed in the upper right corner that the user can click on to hide/dismiss the overlay window. The default is true.]]>
				</description>
				<name>hideIconRendered</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The height of the dialog/popover.]]>
				</description>
				<name>height</name>
				<type>String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The width of the dialog/popover.]]>
				</description>
				<name>width</name>
				<type>String</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="InputDateTimeCommon"
		extendsTags="AltInherited DisabledInherited FacesMessageLabelInherited InputCommon ResponsiveCommon SizeInherited"
		generateJava="false" generateTaglibXML="false">
		<!-- This component exists so that InputDate and InputTime can extend it. It includes all the attributes of -->
		<!-- InputDateTime with <generateJava>false</generateJava>. If InputDate and InputTime extended -->
		<!-- InputDateTime directly, <generateJava> would be true, so getters and setters would be generated -->
		<!-- incorrectly. -->
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will hide when an item is selected. The default value is true.]]>
				</description>
				<name>autoHide</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The key name that can be used to reference the component on the client.]]>
				</description>
				<name>clientKey</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The locale of the component which can be of type <code>java.lang.String</code> or <code>java.util.Locale</code>.]]>
				</description>
				<name>locale</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies which event will pop up the picker. Valid values are <code>focus</code> (the default), <code>button</code>, and <code>both</code>.]]>
				</description>
				<type>java.lang.String</type>
				<name>showOn</name>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The time zone for the built-in DateTimeConverter.]]>
				</description>
				<type>java.lang.Object</type>
				<name>timeZone</name>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]>
				</description>
				<name>zIndex</name>
				<type>java.lang.Integer</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="OutputTooltipPopoverCommon" extendsTags="OverlayCommon" generateJava="false"
		generateTaglibXML="false">
		<attributes>
			<attribute>
				<defaultValue>com.liferay.faces.util.lang.StringPool.RIGHT</defaultValue>
				<description>
					<![CDATA[Indicates the side of the associated component where the tooltip should appear ("right", "left", "top", "bottom"). Default is "right".]]>
				</description>
				<name>position</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="ResponsiveCommon" generateJava="false" generateTaglibXML="false">
		<attributes>
			<attribute>
				<defaultValue>true</defaultValue>
				<description>
					<![CDATA[When true, the component will render different markup depending on the device browsing the page.]]>
				</description>
				<name>responsive</name>
				<type>boolean</type>
			</attribute>
		</attributes>
	</component>
	<!-- /Common -->
	<!-- /generateTaglibXML="false" tags for common attributes -->
	<component name="Accordion" extendsTags="ClientComponent UIData Styleable UIComponentBase" handlerClass="com.liferay.faces.alloy.component.accordion.AccordionHandler"
		module="aui-toggler" parentClass="javax.faces.component.UIData" yui="true" yuiName="TogglerDelegate">
		<description>
			<![CDATA[Accordion is a UIData (iterator) component that renders child tabs either statically or dynamically.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When true, expanding an item will not collapse the others, allowing multiple items to be visible at the same time. The default value is false.]]>
				</description>
				<name>multiple</name>
				<type>boolean</type>
				<yui>false</yui>
				<yuiName>closeAllOnExpand</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Integer representing the zero-based index representing the selected tab.]]>
				</description>
				<name>selectedIndex</name>
				<type>java.lang.Integer</type>
				<yui>false</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when a tab is clicked. The method must be <code>public</code>, return <code>void</code>, and take a <code>TabCollapseEvent</code> argument.]]>
				</description>
				<name>tabCollapseListener</name>
				<method-signature>
					void tabCollapseListener(com.liferay.faces.alloy.component.tab.TabCollapseEvent)
				</method-signature>
				<type>javax.el.MethodExpression</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when a tab is clicked. The method must be <code>public</code>, return <code>void</code>, and take a <code>TabExpandEvent</code> argument.]]>
				</description>
				<name>tabExpandListener</name>
				<method-signature>
					void tabExpandListener(com.liferay.faces.alloy.component.tab.TabExpandEvent)
				</method-signature>
				<type>javax.el.MethodExpression</type>
			</attribute>
		</attributes>
	</component>
	<component name="AutoComplete"
		extendsTags="ClientComponent InputText"
		handlerClass="com.liferay.faces.alloy.component.autocomplete.AutoCompleteHandler"
		parentClass="com.liferay.faces.alloy.component.inputtext.InputText"
		rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase" yui="true"
		module="autocomplete">
		<description>
			<![CDATA[AutoComplete is a UIInput component that renders an <code>&lt;input&gt;</code> element and a popup list. Suggestions (list items) can be added by specifying f:selectItem or f:selectItems tags as children. Since it extends HtmlInputText, it supports all the features of h:inputText.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>true</defaultValue>
				<description>
					<![CDATA[When true, the first item in the list will be activated so that users can press TAB or ENTER to select it. Default is <code>true</code>.]]>
				</description>
				<name>activateFirstItem</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, if the active option of the autoComplete is not in view, the view will be scrolled to ensure that the active option is displayed to the user.]]>
				</description>
				<name>autoScroll</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
				<yuiName>scrollIntoView</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>off</code> (default) and <code>on</code>.]]>
				</description>
				<generateJava>false</generateJava>
				<name>autocomplete</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, the autoComplete list will wrap around allowing users to use keyboard navigation to move from the top of the list to the bottom and vice versa. Defaults to <code>true</code>.]]>
				</description>
				<name>circular</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A callback which filters the client-side results. The callback must be a function which takes <code>query</code> and <code>source</code> arguments and returns an array of <code>String</code>s as a result. The <code>source</code> argument recieved by this callback is an <code>Array</code> of <code>Object</code>s which contain three properties: <code>display</code>, <code>raw</code>, and <code>text</code>. <strong>Note:</strong> This attribute will be ignored if the <code>serverCustomFilter</code> or <code>serverFilterType</code> attributes are used.]]>
				</description>
				<name>clientCustomFilter</name>
				<type>java.lang.String</type>
				<yui>true</yui>
				<yuiName>resultFilters</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the type of filter that will be used for the autoComplete results. Valid values include:
						<ul>
							<li>charMatch</li>
							<li>charMatchCase</li>
							<li>phraseMatch</li>
							<li>phraseMatchCase</li>
							<li>startsWith</li>
							<li>startsWithCase</li>
							<li>subWordMatch</li>
							<li>subWordMatchCase</li>
							<li>wordMatch</li>
							<li>wordMatchCase</li>
						</ul>
					<strong>Note:</strong> This attribute will be ignored if the <code>serverCustomFilter</code>, <code>serverFilterType</code>, or <code>clientCustomFilter</code> attributes are used.]]>
				</description>
				<name>clientFilterType</name>
				<type>java.lang.String</type>
				<yui>true</yui>
				<!-- <yuiName>resultFilters</yuiName> -->
				<!-- This attribute actually maps to the resultFilters attribute. However, since -->
				<!-- clientCustomFilter also maps to resultFilters, we cannot specify resultFilters here. -->
				<!-- Two attributes cannot map to the same yui attribute (unless their java types are different -->
				<!-- because the generator will create the same exact method twice and cause a compile failure. -->
			</attribute>
			<attribute>
				<description>
					<![CDATA[The delay in milliseconds before a request for filtering occurs. After the <code>autoComplete</code> receives input, it waits the specified number of milliseconds before sending a request for filtering it's source. If input occurs before the specified number of milliseconds has elapsed, the timer is reset.]]>
				</description>
				<name>delay</name>
				<type>java.lang.Integer</type>
				<yui>true</yui>
				<yuiName>queryDelay</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The string which delimits the part of the text that will have completion. For example, if <code>delimiter=" "</code>, then only the text after the final space will have completion. <strong>Note:<strong> if <code>listItemRequired="true"</code>, this attribute is ignored.]]>
				</description>
				<name>delimiter</name>
				<type>java.lang.String</type>
				<yui>true</yui>
				<yuiName>queryDelimiter</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The the height (in pixels) of the rendered autoComplete list.]]>
				</description>
				<name>height</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the type of highlighter that will be used for the autoComplete results. Valid values include:
						<ul>
							<li>charMatch</li>
							<li>charMatchCase</li>
							<li>phraseMatch</li>
							<li>phraseMatchCase</li>
							<li>startsWith</li>
							<li>startsWithCase</li>
							<li>subWordMatch</li>
							<li>subWordMatchCase</li>
							<li>wordMatch</li>
							<li>wordMatchCase</li>
						</ul>
					]]>
				</description>
				<name>highlighterType</name>
				<type>java.lang.String</type>
				<yui>true</yui>
				<yuiName>resultHighlighter</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when an autoComplete item is selected. The method must be <code>public</code>, return <code>void</code>, and take an <code>com.liferay.faces.alloy.component.autocomplete.ItemSelectEvent</code> argument.]]>
				</description>
				<name>itemSelectListener</name>
				<method-signature>
					void itemSelectListener(com.liferay.faces.alloy.component.autocomplete.ItemSelectEvent)
				</method-signature>
				<type>javax.el.MethodExpression</type>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When true, the component will perform server-side validation to ensure that the value entered is on the list of completion items. Default is <code>false</code>.]]>
				</description>
				<name>listItemRequired</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The maximum amount of autoComplete results.]]>
				</description>
				<name>maxItems</name>
				<type>java.lang.Integer</type>
				<yui>true</yui>
				<yuiName>maxResults</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The minimum length of input required to trigger a query.]]>
				</description>
				<name>minChars</name>
				<type>java.lang.Integer</type>
				<yui>true</yui>
				<yuiName>minQueryLength</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when a query occurs. The method must be <code>public</code>, return a <code>java.util.List&lt;java.lang.String&gt;</code>, and takes a <code>java.lang.String</code> and a <code>java.util.List&lt;java.lang.String&gt;</code> as a arguments. The <code>String</code> passed to the method is the current query. The <code>List&lt;String&gt;</code> is an immutable list of unfiltered results. The method must return a <code>List&lt;String&gt;</code> which contains the filtered results.]]>
				</description>
				<method-signature>
					java.util.List filterResults(java.lang.String, java.util.List)
				</method-signature>
				<name>serverCustomFilter</name>
				<type>javax.el.MethodExpression</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the type of filter that will be used for the autoComplete results. Valid values include:
						<ul>
							<li>charMatch</li>
							<li>charMatchCase</li>
							<li>phraseMatch</li>
							<li>phraseMatchCase</li>
							<li>startsWith</li>
							<li>startsWithCase</li>
							<li>subWordMatch</li>
							<li>subWordMatchCase</li>
							<li>wordMatch</li>
							<li>wordMatchCase</li>
						</ul>
					<strong>Note:</strong> This attribute will be ignored if the <code>serverCustomFilter</code> attribute is used.]]>
				</description>
				<name>serverFilterType</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<defaultValue>true</defaultValue>
				<description>
					<![CDATA[When <code>true</code>, pressing TAB selects the active autoComplete option. Defaults to <code>true</code>.]]>
				</description>
				<name>tabSelect</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The the width (in pixels) of the rendered autoComplete list.]]>
				</description>
				<name>width</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="Body" extendsTags="StyleableInherited" parentClass="javax.faces.component.html.HtmlBody"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Body is a UIOutput that renders a <body> element for webapps and a <div> for portlets. Since it extends HtmlBody, it supports all the features of h:body.]]>
		</description>
	</component>
	<component name="Button" extendsTags="ButtonCommon UIOutcomeTarget" parentClass="javax.faces.component.html.HtmlOutcomeTargetButton"
		rendererParentClass="com.liferay.faces.alloy.component.button.ButtonRendererCompat">
		<description>
			<![CDATA[Button is a UIOutput component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is button. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlOutcomeTargetButton.html" target="_blank"><code>HtmlOutcomeTargetButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/button.html" target="_blank"><code>h:button</code></a>. The component does not need to be a child of h:form since the outcome attribute is designed to navigate via HTTP GET.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The type of the button: button (default), submit, or reset.]]>
				</description>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="Column" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.html.HtmlColumn">
		<description>
			<![CDATA[Column is a UIColumn component that renders a div with CSS class name <code>span#</code> (for example: <code>span1</code> or <code>span5</code>).]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:dataTabe, this is the JavaBean property that is to be used for filtering.]]>
				</description>
				<name>filterBy</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:dataTable, this is the name of the CSS class that is to be rendered within the class attribute of the table's <code>&lt;td&gt;</code> element inside the <code>&lt;tfoot&gt;</code> element.]]>
				</description>
				<name>footerClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:dataTable, this is the name of the CSS class that is to be rendered within the class attribute of the table's <code>&lt;th&gt;</code> element inside the <code>&lt;thead&gt;</code> element.]]>
				</description>
				<name>headerClass</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:dataTable, this is the text for the column header. This attribute can be used as a convenience instead of specifying a child <code>&lt;f:facet name="header" /&gt;</code> tag.]]>
				</description>
				<name>headerText</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:row, this is the width that the column will be offset by as a unit from 1 to 12. This value is rendered as a CSS class as <code>offset#</code> (for example if offset="4", the CSS class rendered will be <code>offset4</code>). If both the offsetWidth and offset attributes are present, the offsetWidth attribute determines the value of the offset. Please consider using offsetWidth.]]>
				</description>
				<name>offset</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:row, this is the width that the column will be offset by as a percent. This value selects the offset via the formula <code>offset = (offsetWidth/100)*12 (rounded to the nearest whole number)</code>. If both the offsetWidth and offset attributes are present, the offsetWidth attribute determines the value of the offset.]]>
				</description>
				<name>offsetWidth</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:row and this flag is true, then the column is to be rendered as a <code>&lt;th&gt;</code> element with <code>scope=row</code>.]]>
				</description>
				<name>rowHeader</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:dataTabe, this is the JavaBean property that is to be used for sorting.]]>
				</description>
				<name>sortBy</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:row, this is the width of this column as a unit from 1 to 12. This value is rendered as a CSS class as <code>span#</code> (for example if span="4", the CSS class rendered will be <code>span4</code>). If both the width and span attributes are present, the width attribute determines the value of the span number. Please consider using width.]]>
				</description>
				<name>span</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:column is a child of alloy:row, this is the width of the column as a percent. This value selects the span number via the formula <code>span = (width/100)*12 (rounded to the nearest whole number)</code>. If both the width and span attributes are present, the width attribute determines the value of the span number.]]>
				</description>
				<name>width</name>
				<type>java.lang.Integer</type>
			</attribute>
		</attributes>
	</component>
	<component name="CommandButton" extendsTags="ButtonCommon FacesMessageLabelInherited UICommand" parentClass="javax.faces.component.html.HtmlCommandButton"
		rendererParentClass="com.liferay.faces.alloy.component.button.ButtonRenderer">
		<description>
			<![CDATA[CommandButton is a UICommand component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is submit. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlCommandButton.html" target="_blank"><code>HtmlCommandButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/commandButton.html" target="_blank"><code>h:commandButton</code></a>. The component must be a child of h:form in order to trigger the action or actionListener.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The type of the button: button, submit (default), or reset.]]>
				</description>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
			<!-- h:commandButton attributes -->
			<attribute>
				<description>
					<![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]>
				</description>
				<name>onchange</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when the user selects this component.]]>
				</description>
				<name>onselect</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]>
				</description>
				<name>readonly</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<!-- /h:commandButton attributes -->
		</attributes>
	</component>
	<component name="CommandLink" extendsTags="AnchorLinkCommon DisabledInherited UICommand ValueInherited"
		parentClass="javax.faces.component.html.HtmlCommandLink" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[CommandLink is a UICommand component that renders an HTML <code>&lt;a&gt;</code> element. Since it extends HtmlCommandLink, it supports all the features of h:commandLink. The component must be a child of h:form in order to trigger the action or actionListener.]]>
		</description>
	</component>
	<component name="DataItem" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.UIColumn">
		<description>
			<![CDATA[DataItem is a UIColumn component component that is designed to be used as a child of DataList and renders its children inside a <code>&lt;li&gt;</code> or <code>&lt;dt&gt;</code> element.]]>
		</description>
	</component>
	<component name="DataList" extendsTags="Styleable UIData UIComponentBase"
		parentClass="javax.faces.component.UIData" >
		<description>
			<![CDATA[DataList is a UIData (iterator) component that renders <code>&lt;ul&gt;</code> (unordered), <code>&lt;ol&gt;</code> (ordered), or <code>&lt;dl&gt;</code> (description) lists.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>"unordered"</defaultValue>
				<description>
					<![CDATA[The type of the list to render. Valid values are "unordered", "ordered" and "description". The default is "unordered".]]>
				</description>
				<name>type</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="DataTable" extendsTags="ClientComponent UIData HTMLCommonEvents HTMLPassthrough HTMLTable"
		module="aui-datatable" parentClass="javax.faces.component.html.HtmlDataTable" rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase"
		yui="true">
		<description>
			<![CDATA[DataTable is a UIData (iterator) component that renders a <code>&lt;table&gt;</code> element representing tabular data. Since it extends HtmlDataTable, it supports all the features of h:dataTable.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The first row number that is to be displayed, relative to zero.]]>
				</description>
				<name>first</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The total number of rows that are to be displayed. If not set, then all rows are displayed.]]>
				</description>
				<name>rows</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Dialog" extendsTags="HTMLCommonEvents DialogPopoverCommon OverlayCommon" module="aui-modal"
		parentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroupBlockLayout" rendererParentClass="com.liferay.faces.alloy.component.overlay.OverlayRendererBase"
		yui="true" yuiName="Modal">
		<description>
			<![CDATA[Dialog is a UIPanel component that that renders a <code>&lt;div&gt;</code> element that is initially styled with display:none so that it can be popped-up as an overlay by calling the JavaScript API. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When true, the overlay window is automatically hidden when the user clicks outside of it. The default is false.]]>
				</description>
				<name>dismissible</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When true the user must interact with the child dialog window before continuing to interact with the parent. The default is true.]]>
				</description>
				<name>modal</name>
				<type>boolean</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="Field" extendsTags="PanelGroup" parentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroupBlockLayout"
		rendererParentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroupRenderer">
		<description>
			<![CDATA[Field is a UIPanel component that renders a <code>&lt;div&gt;</code> element and a <label> element in order to wrap a field. Since it extends PanelGroup, it supports all the features of alloy:panelGroup.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The text value for the rendered &lt;label&gt; element.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies whether the HTML element rendered by this component will be a <code>div</code> (default) or a <code>span</code>. If the value of this attribute is <code>block</code>, the rendered element will be a <code>div</code>.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Fieldset" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.UIPanel">
		<description>
			<![CDATA[Fieldset is a UIPanel component that renders a &lt;fieldset&gt; element in order to group form elements.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]>
				</description>
				<name>disabled</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The text value for the rendered &lt;legend&gt; element.]]>
				</description>
				<name>legend</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when this component is clicked.]]>
				</description>
				<name>onclick</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a double click event occurs.]]>
				</description>
				<name>ondblclick</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keydown event occurs.]]>
				</description>
				<name>onkeydown</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keypress event occurs.]]>
				</description>
				<name>onkeypress</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a keyup event occurs.]]>
				</description>
				<name>onkeyup</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousedown event occurs.]]>
				</description>
				<name>onmousedown</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mousemove event occurs.]]>
				</description>
				<name>onmousemove</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseout event occurs.]]>
				</description>
				<name>onmouseout</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseover event occurs.]]>
				</description>
				<name>onmouseover</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Javascript to execute when a mouseup event occurs.]]>
				</description>
				<name>onmouseup</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="Form" extendsTags="HTMLCommonEvents HTMLPassthrough" parentClass="javax.faces.component.html.HtmlForm"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Form is an <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlForm.html" target="_blank"><code>HtmlForm</code></a> component that delegates rendering to its JSF renderer.]]>
		</description>
		<attributes>
			<attribute>
				<description>
		<![CDATA[HTML4 legacy passthrough attribute that has been made obsolete in HTML5 and is not supported by most browsers. The value can be a comma-delimited list of mime-types that the server accepts during file upload.]]>
				</description>
				<name>accept</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
		<![CDATA[HTML passthrough attribute (accept-charset) is a space-separated list of character encodings associated with form submission.]]>
				</description>
				<name>acceptcharset</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
		<![CDATA[HTML passthrough attribute that specifies how form-data should be encoded with form submission. Default is "application/x-www-form-urlencoded"]]>
				</description>
				<name>enctype</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, view parameters (specified via <code>f:viewParam</code> tags) will be included in the URL rendered in the action attribute.]]>
				</description>
				<name>includeViewParams</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
		<![CDATA[When true, the form will prepend its id to child components. This is true by default.]]>
				</description>
				<name>prependId</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
		<![CDATA[HTML passthrough attribute that specifies the name of a tab/window/iframe that displays the results of the form submission.]]>
				</description>
				<name>target</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Head" extendsTags="Styleable UIOutput" parentClass="javax.faces.component.html.HtmlHead"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description><![CDATA[Head is a UIOutput that renders a <head> element for webapps, but not for portlets. In the case of portlets, the presence of alloy:head informs the JSF portlet bridge that JSF resources with target="head" should be included in the <head> element rendered by the portal. Since it extends HtmlHead, it supports all the features of h:head.]]></description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]>
				</description>
				<name>dir</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the language code used in the element.]]>
				</description>
				<name>lang</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying the XML namespace used in the element.]]>
				</description>
				<name>xmlns</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Icon" extendsTags="Styleable UIComponentBase">
		<description>
			<![CDATA[Icon is a component that renders a span which contains an icon specified by the name attribute.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The icon which this component will render. A list of valid icons can be found at <a href="http://liferay.github.io/alloy-bootstrap/base-css.html#icons" target="_blank">Bootstrap Base CSS</a>. <b>Note:</b> icon names must be specified without the <code>icon-</code> prefix.]]>
				</description>
				<name>name</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The color of the icon which this component will render. The default is black. Another option is white.]]>
				</description>
				<name>color</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="Image" extendsTags="AltInherited HTMLPassthrough HTMLCommonEvents" parentClass="javax.faces.component.html.HtmlGraphicImage"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Image is a UIGraphic component that renders an img element. Since it extends HtmlGraphicImage, it supports all the features of h:graphicImage.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The height (in pixels) of the image.]]>
				</description>
				<name>height</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, the image is part of a server-side image with clickable areas.]]>
				</description>
				<name>ismap</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The library that contains the JSF image resource.]]>
				</description>
				<name>library</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A URL linking to a page that contains a description of the image.]]>
				</description>
				<name>longdesc</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The name of the JSF image resource.]]>
				</description>
				<name>name</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[An alias for the 'value' attribute.]]>
				</description>
				<name>url</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the name or id of the map associated with the clickable areas of the image.]]>
				</description>
				<name>usemap</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A context-relative path that can be used to retrieve the image.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The width (in pixels) of the image.]]>
				</description>
				<name>width</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="ImportConstants" generateJava="false"
		handlerClass="com.liferay.faces.alloy.taghandler.ImportConstants" handlerClassOnly="true">
		<description>
			<![CDATA[ImportConstants is a TagHandler which can obtain constants from java for use in EL.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The fully qualified name of the class, enum, or interface which the constants are being imported from.]]>
				</description>
				<name>classType</name>
				<required>true</required>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The name of the variable that is to be introduced into the EL representing the map of imported constants.]]>
				</description>
				<name>var</name>
				<required>true</required>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, the imported constants will be cached. Defaults to true.]]>
				</description>
				<name>cacheable</name>
				<type>boolean</type>
			</attribute>
		</attributes>
	</component>
	<component name="InputDate" extendsTags="InputDateTimeCommon"
		handlerClass="com.liferay.faces.alloy.component.inputdate.InputDateHandler"
		parentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTime"
		rendererParentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTimeRenderer"
		module="aui-datepicker" yui="true" yuiName="DatePicker">
		<description>
			<![CDATA[InputDate is a UIInput component that renders an <input type="text"> element and a calendar-popover with selectable dates. The component attempts to automatically convert the submitted value to a Date via a built-in DateTimeConverter.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The format of the date that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>.]]>
				</description>
				<name>datePattern</name>
				<type>java.lang.String</type>
				<yui>true</yui>
				<yuiName>mask</yuiName>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when an date is clicked. The method must be <code>public</code>, return <code>void</code>, and take an <code>com.liferay.faces.alloy.component.inputdate.InputDateEvent</code> argument.]]>
				</description>
				<name>dateSelectListener</name>
				<method-signature>
					void dateSelectListener(com.liferay.faces.alloy.component.inputdate.DateSelectEvent)
				</method-signature>
				<type>javax.el.MethodExpression</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The maximum date that can be selected by the user. This attribute can be of type <code>java.lang.String</code> or <code>java.util.Date</code>.]]>
				</description>
				<name>maxDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The minimum date that can be selected by the user. This attribute can be of type <code>java.lang.String</code> or <code>java.util.Date</code>.]]>
				</description>
				<name>minDate</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The number of month panes shown in the popup calendar. Valid values are 1 (the default), 2, and 3.]]>
				</description>
				<name>panes</name>
				<type>java.lang.Integer</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="InputDateTime" extendsTags="InputDateTimeCommon"
		generateTaglibXML="false" parentClass="com.liferay.faces.alloy.component.inputtext.InputText"
		rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase">
		<attributes>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will hide when an item is selected. The default value is true.]]>
				</description>
				<name>autoHide</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The key name that can be used to reference the component on the client.]]>
				</description>
				<name>clientKey</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The locale of the component which can be of type <code>java.lang.String</code> or <code>java.util.Locale</code>.]]>
				</description>
				<name>locale</name>
				<type>java.lang.Object</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies which event will pop up the picker. Valid values are <code>focus</code> (the default), <code>button</code>, and <code>both</code>.]]>
				</description>
				<name>showOn</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The time zone of the component (defaults to "Greenwich").]]>
				</description>
				<name>timeZone</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]>
				</description>
				<name>zIndex</name>
				<type>java.lang.Integer</type>
			</attribute>
		</attributes>
	</component>
	<component name="InputFile" extendsTags="ClientComponent InputText"
		handlerClass="com.liferay.faces.alloy.component.inputfile.internal.InputFileHandler" module="uploader"
		parentClass="javax.faces.component.html.HtmlInputFile" rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase"
		yui="true" yuiName="Uploader">
		<description>
			<![CDATA[InputFile is a UIInput component that renders an <code>&lt;input&gt;</code> element with type=file. Since it extends HtmlInputFile, it supports all the features of h:inputFile and also supports multi-file uploads, instant-Ajax, preview, upload progress, and validation.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, selected files are appended to the preview table. Otherwise, the preview table is cleared when new files are selected. The default value is false. NOTE: This feature is only available when showProgress=true.]]>
				</description>
				<name>appendNewFiles</name>
				<type>boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, files are uploaded automatically as soon as they are selected. The default value is false.]]>
				</description>
				<name>auto</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when a file is uploaded. The method must be <code>public</code>, return <code>void</code>, and take a <code>FileUploadEvent</code> argument.]]>
				</description>
				<name>fileUploadListener</name>
				<method-signature>
					void fileUploadListener(com.liferay.faces.util.component.inputfile.FileUploadEvent)
				</method-signature>
				<type>javax.el.MethodExpression</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The absolute path that uploaded file should be copied to. If not specified, then the value of the &lt;location&gt; element specified in the Servlet 3.0 web.xml &lt;multipart-config&gt; of the FacesServlet &lt;servlet&gt; will be utilized. Otherwise, the value of the "com.liferay.faces.util.uploadedFilesDir" context-param is utilizied.]]>
				</description>
				<type>java.lang.String</type>
				<name>location</name>
			</attribute>
			<attribute>
				<description>
					<![CDATA[HTML passthrough attribute specifying whether or not multiple files can be uploaded. Valid values are blank (to upload a single file) or "multiple" (to upload multiple files).]]>
				</description>
				<type>java.lang.String</type>
				<name>multiple</name>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, a table showing a preview will be rendered when the user selects one or more files. The default value is false.]]>
				</description>
				<name>showPreview</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, a table showing file upload progress will be rendered when the user selects one of more files. The default value is false.]]>
				</description>
				<name>showProgress</name>
				<type>boolean</type>
			</attribute>
		</attributes>
	</component>
	<component name="InputHidden" extendsTags="UIInput" parentClass="javax.faces.component.html.HtmlInputHidden"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase" styleable="false">
		<description>
			<![CDATA[InputHidden is a UIInput component that renders an input element with type="hidden". Since it extends HtmlInputHidden, it supports all the features of h:inputHidden.]]>
		</description>
	</component>
	<component name="InputSecret"
		extendsTags="AltInherited AutocompleteInherited DisabledInherited FacesMessageLabelInherited InputCommon ResponsiveCommon SizeInherited"
		parentClass="javax.faces.component.html.HtmlInputSecret" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[InputSecret is a UIInput component that renders an <code>&lt;input&gt;</code> element with type="password". Since it extends HtmlInputSecret, it supports all the features of h:inputSecret.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When true, the value attribute is rendered to the response. The default is false for security purposes.]]>
				</description>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
				<name>redisplay</name>
				<type>boolean</type>
			</attribute>
		</attributes>
	</component>
	<component name="InputSourceCode" extendsTags="ClientComponent StyleableInherited UIInput" module="aui-ace-editor"
		parentClass="javax.faces.component.html.HtmlInputText" rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase"
		yui="true" yuiName="AceEditor">
		<description>
			<![CDATA[InputSourceCode is an input component that renders a field for editing source code text.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The the height (in pixels) of the rendered <code>&lt;div&gt;</code>.]]>
				</description>
				<name>height</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, the background-color of the line that is being edited by the user (the active line) will change to indicate a highlight.]]>
				</description>
				<name>highlightActiveLine</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The locale of the text that the editor is editing or displaying.]]>
				</description>
				<name>locale</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The name of the programming language that the editor is editing or displaying.]]>
				</description>
				<name>mode</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the component will be read-only, meaning that the user will be unable to edit the source code text. The default value is false.]]>
				</description>
				<name>readOnly</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, a vertical line will appear that indicates the print margin. The default value is true.]]>
				</description>
				<name>showPrintMargin</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The number of spaces that are to be displayed in place of each tab character.]]>
				</description>
				<name>tabSize</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the tab key will produce space characters rather than tab characters. The default value is false.]]>
				</description>
				<name>useSoftTabs</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When this flag is true, the line will break when it reaches the end of the line. The default value is true.]]>
				</description>
				<name>useWrapMode</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<inherited>true</inherited>
				<yui>true</yui>
				<yuiType>String</yuiType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The the width (in pixels) of the rendered <code>&lt;div&gt;</code>.]]>
				</description>
				<name>width</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="InputText"
		extendsTags="AltInherited AutocompleteInherited DisabledInherited FacesMessageLabelInherited InputCommon ResponsiveCommon SizeInherited"
		parentClass="javax.faces.component.html.HtmlInputText" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[InputText is a UIInput component that renders a field for editing single-line text. Since it extends HtmlInputText, it supports all the features of h:inputText.]]>
		</description>
	</component>
	<component name="InputTextarea" extendsTags="FacesMessageLabelInherited DisabledInherited InputCommon ResponsiveCommon" parentClass="javax.faces.component.html.HtmlInputTextarea"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[InputTextarea is a UIInput component that renders a field for editing multi-line text. Since it extends HtmlInputTextarea, it supports all the features of h:inputTextarea.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The visible width of the text area.]]>
				</description>
				<name>cols</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The number of lines in the text area.]]>
				</description>
				<name>rows</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="InputTime" extendsTags="InputDateTimeCommon"
		handlerClass="com.liferay.faces.alloy.component.inputtime.InputTimeHandler"
		parentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTime"
		rendererParentClass="com.liferay.faces.alloy.component.inputdatetime.InputDateTimeRenderer"
		module="aui-timepicker" yui="true" yuiName="TimePicker">
		<description>
			<![CDATA[InputTime is a UIInput component that renders an <input type="text"> element and a list-popover with selectable times. The component attempts to automatically convert the submitted value to a Date via a built-in DateTimeConverter.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>true</defaultValue>
				<description><![CDATA[When true, the first item in the list will be activated so that users can press TAB or ENTER to select it. Default is <code>true</code>.]]></description>
				<name>activateFirstItem</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<description><![CDATA[When true, the autoComplete list will wrap around allowing users to use keyboard navigation to move from the top of the list to the bottom and vice versa. Defaults to <code>true</code>.]]></description>
				<name>circular</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the type of filter that will be used for the pickTime's autocompletion. Valid values include:
						<ul>
							<li>charMatch</li>
							<li>charMatchCase</li>
							<li>phraseMatch</li>
							<li>phraseMatchCase</li>
							<li>startsWith</li>
							<li>startsWithCase</li>
							<li>subWordMatch</li>
							<li>subWordMatchCase</li>
							<li>wordMatch</li>
							<li>wordMatchCase</li>
						</ul>
					]]>
				</description>
				<name>filterType</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The the height (in pixels) of the rendered autoComplete list.]]>
				</description>
				<name>height</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Specifies the type of filter that will be used for the pickTime's autocomplete highlighter. Valid values include:
						<ul>
							<li>charMatch</li>
							<li>charMatchCase</li>
							<li>phraseMatch</li>
							<li>phraseMatchCase</li>
							<li>startsWith</li>
							<li>startsWithCase</li>
							<li>subWordMatch</li>
							<li>subWordMatchCase</li>
							<li>wordMatch</li>
							<li>wordMatchCase</li>
						</ul>
					]]>
				</description>
				<name>highlighterType</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when an date is clicked. The method must be <code>public</code>, return <code>void</code>, and take an <code>com.liferay.faces.alloy.component.inputtime.TimeSelectEvent</code> argument.]]>
				</description>
				<name>timeSelectListener</name>
				<method-signature>
					void timeSelectListener(com.liferay.faces.alloy.component.inputtime.TimeSelectEvent)
				</method-signature>
				<type>javax.el.MethodExpression</type>
			</attribute>
			<attribute>
				<description><![CDATA[The maximum amount of autoComplete results.]]></description>
				<name>maxResults</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<defaultValue>"23:59:59"</defaultValue>
				<description>
					<![CDATA[The maximum time that can be selected by the user. <code>maxTime</code> can be of type <code>java.lang.String</code> (of the pattern "HH:mm:ss") or <code>java.util.Date</code>.]]>
				</description>
				<name>maxTime</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<defaultValue>"00:00:00"</defaultValue>
				<description>
					<![CDATA[The minimum time that can be selected by the user. <code>minTime</code> can be of type <code>java.lang.String</code> (of the pattern "HH:mm:ss") or <code>java.util.Date</code>.]]>
				</description>
				<name>minTime</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description><![CDATA[The delay in milliseconds before a query occurs. After the <code>autoComplete</code> receives input, it waits the specified number of milliseconds before querying it's source. If input occurs before the specified number of milliseconds has elapsed, the timer is reset.]]></description>
				<name>queryDelay</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<defaultValue>true</defaultValue>
				<description>
					<![CDATA[When true, the component will render an HTML5 <code>&lt;input type="time" /&gt;</code> element on small/mobile displays in order to enable selection of a time with the mobile device's native UI. The default is true.]]>
				</description>
				<name>responsive</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description><![CDATA[When true, if the active option of the autoComplete is not in view, the view will be scrolled to make the active option is displayed to the user.]]></description>
				<name>scrollIntoView</name>
				<type>java.lang.Boolean</type>
			</attribute>
			<attribute>
				<defaultValue>3600</defaultValue>
				<description>
					<![CDATA[The step in seconds between each selectable timestamp. The default is 3,600 seconds (or 1 hour).]]>
				</description>
				<name>step</name>
				<type>java.lang.Integer</type>
			</attribute>
			<attribute>
				<defaultValue>"hh:mm a"</defaultValue>
				<description>
					<![CDATA[The format of the time that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>. The default is <code>hh:mm a</code>.]]>
				</description>
				<name>timePattern</name>
				<type>java.lang.String</type>
				<yui>true</yui>
				<yuiName>mask</yuiName>
			</attribute>
		</attributes>
	</component>
	<component name="Link"
		extendsTags="AnchorLinkCommon DisabledInherited ValueInherited StyleableInherited UIComponentBase UIOutcomeTarget"
		parentClass="javax.faces.component.html.HtmlOutcomeTargetLink" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Link is a UIOutcomeTarget component that renders an <code>&lt;a&gt;</code> element (hyperlink). Since it extends HtmlLink, it supports all the features of h:link.]]>
		</description>
	</component>
	<component name="Message" extendsTags="MessageCommon" parentClass="javax.faces.component.html.HtmlMessage"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Message is a UIMessage component that renders a <code>&lt;span&gt;</code> element containing the text of a single FacesMessage for an associated component. Since it extends HtmlMessage, it supports all the features of h:message.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The id of the component for which to render an associated message.]]>
				</description>
				<name>for</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Menu" generateJava="false" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.UIColumn">
		<description>
			<![CDATA[A menu is a UIColumn component that renders nested/child tags as content within itself.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The visible label for the menu. This is only used if a facet with name="label" is not present.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="Messages" extendsTags="MessageCommon" parentClass="javax.faces.component.html.HtmlMessages"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[Messages is a UIMessages component that the text of one or more FacesMessage instances inside a <code>&lt;ul&gt;</code> element or <code>&lt;table&gt;</code> element for an associated component, according to the layout attribute. Since it extends HtmlMessages, it supports all the features of h:messages.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The id of the component for which to render associated message(s). This attribute takes precedence over the globalOnly attribute.]]>
				</description>
				<name>for</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
		<![CDATA[When true, only the global FacesMessages (those that are not associated with a specific component) are displayed. This is false by default.]]>
				</description>
				<name>globalOnly</name>
				<type>boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When 'table', an HTML table is rendered and each message appears in a separate table row. When 'list', an HTML unordered list is rendered and each message appears in a separate list item. The default value is 'list'.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="OutputScript" extendsTags="OutputScriptStylesheetCommon"
		parentClass="javax.faces.component.UIOutput" styleable="false"
		rendererParentClass="com.liferay.faces.alloy.component.outputscriptstylesheet.internal.OutputScriptStylesheetRendererBase">
		<description>
			<![CDATA[OutputScript is a UIOutput component that renders a <code>&lt;script&gt;</code> element with <code>type="text/javascript"</code>.]]>
		</description>
		<attributes>
			<attribute>
				<description><![CDATA[The position on the page where the JavaScript should be rendered. Valid values include <code>body</code>, <code>form</code>, and <code>head</code>. The default value of this attribute is an empty (null) value which causes the <code>&lt;script&gt;</code> to be rendered inline (corresponding to its position in the view). Specifying <code>body</code> for the target attribute will cause the <code>&lt;script&gt;</code> to be rendered as close to the closing body tag as possible.]]></description>
				<name>target</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description><![CDATA[A comma-delimited list of YUI or AlloyUI modules to load for this script. <strong>Note:</strong> if this attribute is specified, a YUI sandbox will be created automatically for the <code>&lt;script&gt;</code>.]]></description>
				<name>use</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="OutputStylesheet" extendsTags="OutputScriptStylesheetCommon"
		parentClass="javax.faces.component.UIOutput" styleable="false"
		rendererParentClass="com.liferay.faces.alloy.component.outputscriptstylesheet.internal.OutputScriptStylesheetRendererBase">
		<description>
			<![CDATA[OutputStylesheet is a UIOutput component that renders a <code>&lt;style&gt;</code> element.]]>
		</description>
		<attributes>
			<attribute>
				<description><![CDATA[HTML passthrough attribute specifying the media type of the element.]]></description>
				<name>media</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="OutputFormat" extendsTags="HTMLPassthrough UIOutput EscapeInherited" parentClass="javax.faces.component.html.HtmlOutputFormat"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[OutputFormat is a UIOutput component that renders parameterized text. Since it extends HtmlOutputFormat, it supports all the features of h:outputFormat.]]>
		</description>
	</component>
	<component name="OutputLabel" extendsTags="HTMLAccessibilityEvents HTMLPassthrough UIOutput EscapeInherited"
		parentClass="javax.faces.component.html.HtmlOutputLabel" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[OutputLabel is a UIOutput component that renders its value attribute within a <label> element. Since it extends HtmlOutputLabel, it supports all the features of h:outputLabel.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The id of the target associated with this component.]]>
				</description>
				<name>for</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
				<inherited>true</inherited>
			</attribute>
		</attributes>
	</component>
	<component name="OutputLink" extendsTags="AnchorLinkCommon DisabledInherited HTMLAccessibilityEvents HTMLPassthrough UIOutput"
		parentClass="javax.faces.component.html.HtmlOutputLink" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[OutputLink is a UIOutput component that renders an <code>&lt;a&gt;</code> element (hyperlink). Since it extends HtmlOutputLink, it supports all the features of h:outputLink.]]>
		</description>
	</component>
	<component name="OutputRemainingChars" extendsTags="ClientComponent OutputText" module="aui-char-counter"
		parentClass="com.liferay.faces.alloy.component.outputtext.OutputText" rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase"
		yui="true" yuiName="CharCounter">
		<description>
			<![CDATA[OutputRemainingChars is a UIOutput component that displays the number of characters remaining for an associated alloy:inputText or alloy:inputTextarea.]]>
		</description>
		<attributes>
			<!-- Attributes used to help the component follow normal JSF usage patterns -->
			<attribute>
				<description>
					<![CDATA[The id of the component for which the remaining characters are to be calculated.]]>
				</description>
				<name>for</name>
				<required>true</required>
				<type>java.lang.String</type>
				<yui>true</yui>
				<yuiName>input</yuiName>
				<yuiType>ClientId</yuiType>
			</attribute>
			<!-- Attributes that need to be generated for the Alloy component -->
			<attribute>
				<description>
					<![CDATA[The maximum number of charachters to allow in the input.]]>
				</description>
				<name>maxLength</name>
				<type>java.lang.Integer</type>
				<yui>true</yui>
			</attribute>
			<!-- Attributes that were invented here to implement Alloy methods -->
			<attribute>
				<description>
					<![CDATA[Node or Selector to display the number of remaining characters calculated by the charCounter.]]>
				</description>
				<name>onMaxlengthReached</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Node or Selector to display the number of remaining characters calculated by the charCounter.]]>
				</description>
				<name>onceMaxlengthReached</name>
				<type>java.lang.String</type>
			</attribute>
			<!-- Attributes used to help the component follow normal JSF usage patterns -->
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<inherited>true</inherited>
			</attribute>
		</attributes>
	</component>
	<component name="OutputText" extendsTags="HTMLPassthrough UIOutput" parentClass="javax.faces.component.html.HtmlOutputText"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[OutputText is an <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlOutputText.html" target="_blank"><code>HtmlOutputText</code></a> component that delegates rendering to its JSF renderer.]]>
		</description>
		<attributes>
			<attribute>
				<description><![CDATA[When false, markup will not be escaped. This is true by default.]]></description>
				<name>escape</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="OutputTooltip" extendsTags="OutputText OutputTooltipPopoverCommon" module="aui-tooltip"
		parentClass="com.liferay.faces.alloy.component.outputtext.OutputText" rendererParentClass="com.liferay.faces.alloy.component.overlay.OverlayRendererBase"
		yui="true" yuiName="Tooltip">
		<description>
			<![CDATA[OutputTooltip is a UIOutput component that renders a <code>&lt;div&gt;</code> element which is displayed as an overlay that is initially styled with display:none so that it can be popped-up as an overlay. Since it extends HtmlOutputText, it supports all the features of h:outputText.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The id of the component that is associated with the tooltip.]]>
				</description>
				<name>for</name>
				<required>true</required>
				<type>java.lang.String</type>
				<yui>true</yui>
				<yuiName>trigger</yuiName>
				<yuiType>ClientId</yuiType>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A number between 0 and 1 describing how much the tooltip will obscure its background when visible.]]>
				</description>
				<name>opacity</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="PanelGrid" extendsTags="HTMLTable" parentClass="javax.faces.component.html.HtmlPanelGrid"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[PanelGrid is a UIPanel component that renders a <code>&lt;table&gt;</code> element to layout its children in a tabular grid. Since it extends HtmlPanelGrid, it supports all the features of h:panelGrid.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The total number of columns that are to be displayed. When the number of child components exceeds this number, the previous <code>&lt;tr&gt;</code> element is closed and a new <code>&lt;tr&gt;</code> element is opened.]]>
				</description>
				<name>columns</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Panel" extendsTags="PanelGroup" parentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroupBlockLayout"
		rendererParentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroupRenderer">
		<description>
			<![CDATA[Panel is a UIPanel component that renders a <div> element with three child <div> elements (one for header, body, and footer). Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The text to place in the footer of the component.]]>
				</description>
				<name>footerText</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The text to place in the header of the component.]]>
				</description>
				<name>headerText</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="PanelGroup" extendsTags="HTMLCommonEvents" parentClass="javax.faces.component.html.HtmlPanelGroup"
		rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[PanelGroup is a UIPanel component that renders a <code>&lt;span&gt;</code> or a <code>&lt;div&gt;</code> element for grouping purposes. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[Specifies whether the HTML element rendered by this component will be a <code>span</code> (default) or a <code>div</code>. If the value of this attribute is <code>block</code>, the rendered element will be a <code>div</code>.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="Popover" extendsTags="HTMLCommonEvents DialogPopoverCommon OutputTooltipPopoverCommon"
		module="aui-popover" parentClass="com.liferay.faces.alloy.component.panelgroup.PanelGroupBlockLayout"
		rendererParentClass="com.liferay.faces.alloy.component.overlay.OverlayRendererBase" yui="true">
		<description>
			<![CDATA[Popover is a UIPanel component that that renders a <code>&lt;div&gt;</code> element that is initially styled with display:none so that it can be popped-up as an overlay by calling the JavaScript API. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]>
		</description>
		<attributes>
			<attribute>
				<defaultValue>true</defaultValue>
				<description>
					<![CDATA[When true, the overlay window is automatically hidden when the user clicks outside of it. The default is true.]]>
				</description>
				<name>dismissible</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The id of the component that is associated with the popover.]]>
				</description>
				<name>for</name>
				<required>true</required>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="Row" extendsTags="Styleable UIComponentBase" parentClass="javax.faces.component.UIPanel">
		<description>
			<![CDATA[Row is a UIPanel component that renders a <code>&lt;div&gt;</code> and is designed to be used in conjunction with alloy:column child component tags.]]>
		</description>
		<attributes>
			<attribute>
				<description><![CDATA[When this flag is true, the element will have the CSS class <code>row-fluid</code>. Otherwise, the element will have the CSS class <code>row</code>. The default value is true.]]></description>
				<name>fluid</name>
				<type>java.lang.Boolean</type>
			</attribute>
		</attributes>
	</component>
	<component name="SelectBooleanCheckbox" extendsTags="DisabledInherited FacesMessageLabelInherited HTMLAccessibilityEvents HTMLInputEvents"
		parentClass="javax.faces.component.html.HtmlSelectBooleanCheckbox" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[SelectBooleanCheckbox is a UISelectOne component that renders a check box. Since it extends HtmlSelectBooleanCheckbox, it supports all the features of h:selectBooleanCheckbox such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
	</component>
	<component name="SelectManyCheckbox" extendsTags="UISelectMany DisabledInherited FacesMessageLabelInherited HTMLAccessibilityEvents HTMLInputEvents ResponsiveCommon"
		parentClass="javax.faces.component.html.HtmlSelectManyCheckbox" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[SelectManyCheckbox is a UISelectMany component that renders checkboxes and enables the user to select multiple values. Since it extends HtmlSelectManyCheckbox, it supports all the features of h:selectManyCheckbox such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The width of the table border (measured in pixels).]]>
				</description>
				<name>border</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The direction in which the layout of the component should go. The default value is 'lineDirection'.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A CSS class name to apply to the label of each selected item.]]>
				</description>
				<name>selectedClass</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A CSS class name to apply to the label of each unselected item.]]>
				</description>
				<name>unselectedClass</name>
				<type>java.lang.Boolean</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="SelectManyListbox" extendsTags="UISelectMany DisabledInherited FacesMessageLabelInherited HTMLAccessibilityEvents HTMLInputEvents ResponsiveCommon"
		parentClass="javax.faces.component.html.HtmlSelectManyListbox" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[SelectManyListbox is a UISelectMany component that renders a select element and enables the user to select multiple values. Since it extends HtmlSelectManyListbox, it supports all the features of h:selectManyListbox such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The number of items to show in the box. The default is to show all of the items.]]>
				</description>
				<name>size</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="SelectManyMenu" extendsTags="UISelectMany DisabledInherited FacesMessageLabelInherited HTMLAccessibilityEvents HTMLInputEvents ResponsiveCommon"
		parentClass="javax.faces.component.html.HtmlSelectManyMenu" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[SelectManyMenu is a UISelectMany component that renders a select element and enables the user to select multiple values. It has the same basic features of alloy:selectManyListbox except that there is no size attribute because JSF "select*menu" components always render size=1. Since it extends HtmlSelectManyMenu, it supports all the features of h:selectManyMenu such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
	</component>
	<component name="SelectOneListbox" extendsTags="UISelect DisabledInherited FacesMessageLabelInherited HTMLAccessibilityEvents HTMLInputEvents ResponsiveCommon"
		parentClass="javax.faces.component.html.HtmlSelectOneListbox" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[SelectOneListbox is a UISelectOne component that renders a `select` element (multi-item list) and enables the user to select one value. Since it extends HtmlSelectOneListbox, it supports all the features of h:selectOneListbox such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The number of items to show in the box. The default is to show all of the items.]]>
				</description>
				<name>size</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="SelectOneMenu" extendsTags="UISelect DisabledInherited FacesMessageLabelInherited HTMLAccessibilityEvents HTMLInputEvents ResponsiveCommon"
		parentClass="javax.faces.component.html.HtmlSelectOneMenu" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[SelectOneMenu is a UISelectOne component that renders a select element (drop down list) and enables the user to select one value. Since it extends HtmlSelectOneMenu, it supports all the features of h:selectOneMenu such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
	</component>
	<component name="SelectOneRadio" extendsTags="UISelect DisabledInherited FacesMessageLabelInherited HTMLAccessibilityEvents HTMLInputEvents"
		parentClass="javax.faces.component.html.HtmlSelectOneRadio" rendererParentClass="com.liferay.faces.util.render.DelegatingRendererBase">
		<description>
			<![CDATA[SelectOneRadio is a UISelectOne component that renders radio buttons. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it supports all the features of h:selectOneRadio such as accepting f:selectItem or f:selectItems as child tags.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The width of the table border (measured in pixels).]]>
				</description>
				<name>border</name>
				<type>int</type>
				<generateJava>false</generateJava>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The direction in which the layout of the component should be displayed. The default value is 'lineDirection'.]]>
				</description>
				<name>layout</name>
				<type>java.lang.String</type>
				<generateJava>false</generateJava>
			</attribute>
		</attributes>
	</component>
	<component name="SelectStarRating" extendsTags="SelectOneRadio ClientComponent" module="aui-rating"
		parentClass="com.liferay.faces.alloy.component.selectoneradio.SelectOneRadio" rendererParentClass="com.liferay.faces.alloy.renderkit.DelegatingAlloyRendererBase"
		yui="true" yuiName="Rating">
		<description>
			<![CDATA[StarRating is a UISelectOne component that renders a set of stars. The user can click on a star to select a rating and click on the same star a second time to de-select a rating. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it accepts f:selectItem or f:selectItems as child tags.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]>
				</description>
				<name>label</name>
				<type>java.lang.String</type>
				<inherited>true</inherited>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]>
				</description>
				<name>value</name>
				<type>java.lang.Object</type>
				<yui>true</yui>
				<inherited>true</inherited>
				<yuiType>String</yuiType>
			</attribute>
		</attributes>
	</component>
	<component name="SelectThumbRating" extendsTags="SelectStarRating" generateJava="false" module="aui-rating"
		parentClass="com.liferay.faces.alloy.component.selectstarrating.SelectStarRating" rendererParentClass="com.liferay.faces.alloy.component.selectstarrating.SelectStarRatingRenderer"
		yui="true" yuiName="ThumbRating">
		<description>
			<![CDATA[SelectThumbRating is a UISelectOne component that renders a pair of thumb icons that a user can select to indicate their favor. The user can click on a thumb to select their favor and click on the same thumb a second time to de-select their favor. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it accepts f:selectItem or f:selectItems as children.]]>
		</description>
	</component>
	<component name="Tab" extendsTags="Styleable UIComponentBase" handlerClass="com.liferay.faces.alloy.component.tab.TabHandler"
		parentClass="javax.faces.component.UIColumn">
		<description>
			<![CDATA[Tab is a panel component that renders nested/child tags as content within itself.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[When alloy:tab is a child of alloy:accordion, this is the name of the CSS class that is to be rendered within the class attribute of the content &lt;div&gt;]]>
				</description>
				<name>contentClass</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<defaultValue>false</defaultValue>
				<description>
					<![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]>
				</description>
				<name>disabled</name>
				<type>boolean</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When alloy:tab is a child of alloy:accordion, this is the name of the CSS class that is to be rendered within the class attribute of the header &lt;div&gt;]]>
				</description>
				<name>headerClass</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The text to place in the header of the component.]]>
				</description>
				<name>headerText</name>
				<type>java.lang.String</type>
			</attribute>
		</attributes>
	</component>
	<component name="TabView" extendsTags="ClientComponent UIData Styleable UIComponentBase" handlerClass="com.liferay.faces.alloy.component.tabview.TabViewHandler"
		module="aui-tabview" parentClass="javax.faces.component.UIData" yui="true">
		<description>
			<![CDATA[TabView is an iterator component that renders tabs either statically or dynamically.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[The the height (in pixels) of the rendered <code>&lt;div&gt;</code>.]]>
				</description>
				<name>height</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Integer representing the zero-based index representing the selected tab.]]>
				</description>
				<name>selectedIndex</name>
				<type>java.lang.Integer</type>
				<yui>false</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[When true, this indicates whether or not the tabs will appear vertically. The default value is false.]]>
				</description>
				<name>stacked</name>
				<type>java.lang.Boolean</type>
				<yui>true</yui>
			</attribute>
			<attribute>
				<description>
					<![CDATA[A method that is executed when a tab is clicked. The method must be <code>public</code>, return <code>void</code>, and take an <code>TabSelectEvent</code> argument.]]>
				</description>
				<name>tabSelectListener</name>
				<method-signature>
					void tabSelectListener(com.liferay.faces.alloy.component.tab.TabSelectEvent)
				</method-signature>
				<type>javax.el.MethodExpression</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[The the height (in pixels) of the rendered <code>&lt;div&gt;</code>.]]>
				</description>
				<name>width</name>
				<type>java.lang.String</type>
				<yui>true</yui>
			</attribute>
		</attributes>
	</component>
	<component name="ValidateFile" generateJava="false" validatorId="com.liferay.faces.alloy.component.inputfile.InputFileValidator">
		<description>
			<![CDATA[Validator that is meant to be used in conjunction with the <code>alloy:inputFile</code> component.]]>
		</description>
		<attributes>
			<attribute>
				<description>
					<![CDATA[Comma-delimited list of uploaded file MIME types that are valid. If not specified, then all MIME types are assumed to be valid.]]>
				</description>
				<name>contentTypes</name>
				<type>java.lang.String</type>
			</attribute>
			<attribute>
				<description>
					<![CDATA[Maximum length (in bytes) permitted for each individual uploaded file. If not specified, then files of any length are assumed to be valid.]]>
				</description>
				<name>maxFileSize</name>
				<type>java.lang.Long</type>
			</attribute>
		</attributes>
	</component>

</components>
