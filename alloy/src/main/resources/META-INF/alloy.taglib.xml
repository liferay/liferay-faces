<?xml version='1.0' encoding='UTF-8'?>
<facelet-taglib xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:vdldoc="http://vdldoc.omnifaces.org"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facelettaglibrary_2_2.xsd http://vdldoc.omnifaces.org https://raw.githubusercontent.com/omnifaces/vdldoc/master/src/main/resources/org/omnifaces/vdldoc/resources/vdldoc.taglib.xml.xsd"
	version="2.2">
	<description><![CDATA[The Liferay Faces Alloy facelet component tags with the <code>alloy:</code> tag name prefix.]]></description>
	<namespace>http://liferay.com/faces/alloy</namespace>
	<function>
		<description><![CDATA[Returns an escaped representation of the specified client ID.]]></description>
		<function-name>escapeClientId</function-name>
		<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
		<function-signature>java.lang.String escapeClientId(java.lang.String)</function-signature>
	</function>
	<function>
		<description><![CDATA[Returns the client ID associated with the specified expression.]]></description>
		<function-name>findClientId</function-name>
		<function-class>com.liferay.faces.util.component.ComponentUtil</function-class>
		<function-signature>java.lang.String findClientId(java.lang.String)</function-signature>
	</function>
	<tag>
		<description><![CDATA[Accordion is a UIData (iterator) component that renders child tabs either statically or dynamically.]]></description>
		<tag-name>accordion</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.accordion.Accordion</component-type>
			<renderer-type>com.liferay.faces.alloy.component.accordion.AccordionRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, expanding an item will not collapse the others, allowing multiple items to be visible at the same time. The default value is false.]]></description>
			<name>multiple</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Integer representing the zero-based index representing the selected tab.]]></description>
			<name>selectedIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property. The value can be any of the following types:<ul><li>Any concrete subclass of <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/DataModel.html" target="_blank"><code>DataModel</code></a></li><li>Array (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ArrayDataModel.html" target="_blank"><code>ArrayDataModel</code></a>)</li><li>java.util.Collection (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/CollectionDataModel.html" target="_blank"><code>CollectionDataModel</code></a>)</li><li>java.util.List (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ListDataModel.html" target="_blank"><code>ListDataModel</code></a>)</li><li>java.sql.ResultSet (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ResultSetDataModel.html" target="_blank"><code>ResultSetDataModel</code></a>)</li></ul>]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the variable that is to be introduced into the EL representing the current iteration.]]></description>
			<name>var</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Audio is a UIComponent that renders a <code>&lt;div&gt;</code> that contains an HTML5 <code>&lt;audio&gt;</code> element. It also supports graceful degradation for older browsers.]]></description>
		<tag-name>audio</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.audio.Audio</component-type>
			<renderer-type>com.liferay.faces.alloy.component.audio.AudioRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether the media will begin playing automatically. Defaults to false.]]></description>
			<name>autoplay</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The content type of the media. This attribute is required when the <code>value</code> attribute is used to specify the media URL. Otherwise, the contentType defaults to to the content type determined by the JSF runtime for the resource.]]></description>
			<name>contentType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether controls should be rendered for the media. Defaults to false.]]></description>
			<name>controls</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true the component will gracefully degrade to the Adobe&reg; Flash&reg; player for older browsers. Defaults to true. Defaults to true.]]></description>
			<name>degrade</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A context-relative path, resource URL, or FacesResource that can be used to retrieve the Adobe&reg; Flash&reg; player. Defaults to the player that comes bundled with AlloyUI. <strong>Note:</strong> The AlloyUI player does not support <code>.ogv</code> or <code>.webm</code> formats.]]></description>
			<name>flashPlayer</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The version of Adobe&reg; Flash&reg; required to play this media. Defaults to <code>"9,0,0,0"</code>.]]></description>
			<name>flashPlayerVersion</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the library which contains the resource.]]></description>
			<name>library</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether the media will restart after it has completed playing. Defaults to false.]]></description>
			<name>loop</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether the media will be muted initially. Defaults to false.]]></description>
			<name>muted</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the resource file to be included on the page.]]></description>
			<name>name</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a abort event occurs.]]></description>
			<name>onabort</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a canplay event occurs.]]></description>
			<name>oncanplay</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a canplaythrough event occurs.]]></description>
			<name>oncanplaythrough</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a durationchange event occurs.]]></description>
			<name>ondurationchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a emptied event occurs.]]></description>
			<name>onemptied</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a ended event occurs.]]></description>
			<name>onended</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a error event occurs.]]></description>
			<name>onerror</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a loadeddata event occurs.]]></description>
			<name>onloadeddata</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a loadedmetadata event occurs.]]></description>
			<name>onloadedmetadata</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a loadstart event occurs.]]></description>
			<name>onloadstart</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a pause event occurs.]]></description>
			<name>onpause</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a play event occurs.]]></description>
			<name>onplay</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a playing event occurs.]]></description>
			<name>onplaying</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a progress event occurs.]]></description>
			<name>onprogress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a ratechange event occurs.]]></description>
			<name>onratechange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a seeked event occurs.]]></description>
			<name>onseeked</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a seeking event occurs.]]></description>
			<name>onseeking</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a stalled event occurs.]]></description>
			<name>onstalled</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a suspend event occurs.]]></description>
			<name>onsuspend</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a timeupdate event occurs.]]></description>
			<name>ontimeupdate</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a volumechange event occurs.]]></description>
			<name>onvolumechange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a waiting event occurs.]]></description>
			<name>onwaiting</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying how the media should be loaded in the page.]]></description>
			<name>preload</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A context-relative path, resource URL, <code>FacesResource</code>, or <code>List&lt;FacesResouce&gt;</code> that can be used to retrieve the media(s).]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying the initial volume of the player.]]></description>
			<name>volume</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[AutoComplete is a UIInput component that renders an <code>&lt;input&gt;</code> element and a popup list. Suggestions (list items) can be added by specifying f:selectItem or f:selectItems tags as children. Since it extends HtmlInputText, it supports all the features of h:inputText.]]></description>
		<tag-name>autoComplete</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.autocomplete.AutoComplete</component-type>
			<renderer-type>com.liferay.faces.alloy.component.autocomplete.AutoCompleteRenderer</renderer-type>
			<handler-class>com.liferay.faces.alloy.component.autocomplete.internal.AutoCompleteHandler</handler-class>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the first item in the list will be activated so that users can press TAB or ENTER to select it. Default is <code>true</code>.]]></description>
			<name>activateFirstItem</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>off</code> (default) and <code>on</code>.]]></description>
			<name>autocomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, if the active option of the autoComplete is not in view, the view will be scrolled to ensure that the active option is displayed to the user.]]></description>
			<name>autoScroll</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the autoComplete list will wrap around allowing users to use keyboard navigation to move from the top of the list to the bottom and vice versa. Defaults to <code>true</code>.]]></description>
			<name>circular</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A callback which filters the client-side results. The callback must be a function which takes <code>query</code> and <code>source</code> arguments and returns an array of <code>String</code>s as a result. The <code>source</code> argument recieved by this callback is an <code>Array</code> of <code>Object</code>s which contain three properties: <code>display</code>, <code>raw</code>, and <code>text</code>. <strong>Note:</strong> This attribute will be ignored if the <code>serverCustomFilter</code> or <code>serverFilterType</code> attributes are used.]]></description>
			<name>clientCustomFilter</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the type of filter that will be used for the autoComplete results. Valid values include:       <ul>        <li>charMatch</li>        <li>charMatchCase</li>        <li>phraseMatch</li>        <li>phraseMatchCase</li>        <li>startsWith</li>        <li>startsWithCase</li>        <li>subWordMatch</li>        <li>subWordMatchCase</li>        <li>wordMatch</li>        <li>wordMatchCase</li>       </ul>      <strong>Note:</strong> This attribute will be ignored if the <code>serverCustomFilter</code>, <code>serverFilterType</code>, or <code>clientCustomFilter</code> attributes are used.]]></description>
			<name>clientFilterType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The delay in milliseconds before a request for filtering occurs. After the <code>autoComplete</code> receives input, it waits the specified number of milliseconds before sending a request for filtering it's source. If input occurs before the specified number of milliseconds has elapsed, the timer is reset.]]></description>
			<name>delay</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[The string which delimits the part of the text that will have completion. For example, if <code>delimiter=" "</code>, then only the text after the final space will have completion. <strong>Note:</strong> if <code>listItemRequired="true"</code>, this attribute is ignored.]]></description>
			<name>delimiter</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The the height (in pixels) of the rendered autoComplete list.]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the type of highlighter that will be used for the autoComplete results. Valid values include:       <ul>        <li>charMatch</li>        <li>charMatchCase</li>        <li>phraseMatch</li>        <li>phraseMatchCase</li>        <li>startsWith</li>        <li>startsWithCase</li>        <li>subWordMatch</li>        <li>subWordMatchCase</li>        <li>wordMatch</li>        <li>wordMatchCase</li>       </ul>]]></description>
			<name>highlighterType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the component will perform server-side validation to ensure that the value entered is on the list of completion items. Default is <code>false</code>.]]></description>
			<name>listItemRequired</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The maximum amount of autoComplete results.]]></description>
			<name>maxItems</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[The minimum length of input required to trigger a query.]]></description>
			<name>minChars</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when a query occurs. The method must be <code>public</code>, return a <code>java.util.List&lt;java.lang.String&gt;</code>, and takes a <code>java.lang.String</code> and a <code>java.util.List&lt;java.lang.String&gt;</code> as a arguments. The <code>String</code> passed to the method is the current query. The <code>List&lt;String&gt;</code> is an immutable list of unfiltered results. The method must return a <code>List&lt;String&gt;</code> which contains the filtered results.]]></description>
			<name>serverCustomFilter</name>
			<required>false</required>
			<method-signature>java.util.List&lt;java.lang.String&gt; filterResults(java.lang.String, java.util.List&lt;java.lang.String&gt;)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the type of filter that will be used for the autoComplete results. Valid values include:       <ul>        <li>charMatch</li>        <li>charMatchCase</li>        <li>phraseMatch</li>        <li>phraseMatchCase</li>        <li>startsWith</li>        <li>startsWithCase</li>        <li>subWordMatch</li>        <li>subWordMatchCase</li>        <li>wordMatch</li>        <li>wordMatchCase</li>       </ul>      <strong>Note:</strong> This attribute will be ignored if the <code>serverCustomFilter</code> attribute is used.]]></description>
			<name>serverFilterType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the visual length of the element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When <code>true</code>, pressing TAB selects the active autoComplete option. Defaults to <code>true</code>.]]></description>
			<name>tabSelect</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[The the width (in pixels) of the rendered autoComplete list.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Body is a UIOutput that renders a <code>&lt;body&gt;</code> element for webapps and a <code>&lt;div&gt;</code> for portlets. Since it extends HtmlBody, it supports all the features of h:body.]]></description>
		<tag-name>body</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.body.Body</component-type>
			<renderer-type>com.liferay.faces.alloy.component.body.BodyRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Button is a UIOutput component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is button. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlOutcomeTargetButton.html" target="_blank"><code>HtmlOutcomeTargetButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/button.html" target="_blank"><code>h:button</code></a>. The component does not need to be a child of h:form since the outcome attribute is designed to navigate via HTTP GET.]]></description>
		<tag-name>button</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.button.Button</component-type>
			<renderer-type>com.liferay.faces.alloy.component.button.ButtonRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether or not the component should automatically recieve focus on the initial page load.]]></description>
			<name>autofocus</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the client window param will not be inlcuded on the navigation URL. <b>Note:</b> the <code>ClientWindow</code> feature is disabled by default, so this attribute will have no effect unless <code>ClientWindow</code> is enabled.]]></description>
			<name>disableClientWindow</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A fragment to be appended to the navigation URL.]]></description>
			<name>fragment</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the URL of an image.]]></description>
			<name>image</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, view parameters (specified via <code>f:viewParam</code> tags) will be included on the navigation URL]]></description>
			<name>includeViewParams</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A string which potentially matches the value of <code>from-outcome</code> key in a navigation-case.]]></description>
			<name>outcome</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The type of the button: button (default), submit, or reset.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[ButtonRow is a UIPanel component that renders a <code>&lt;div&gt;</code> element for grouping purposes. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]></description>
		<tag-name>buttonRow</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.buttonrow.ButtonRow</component-type>
			<renderer-type>com.liferay.faces.alloy.component.buttonrow.ButtonRowRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Column is a UIColumn component that renders a div with CSS class name <code>span#</code> (for example: <code>span1</code> or <code>span5</code>).]]></description>
		<tag-name>column</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.column.Column</component-type>
			<renderer-type>com.liferay.faces.alloy.component.column.ColumnRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[When this flag is true, clicking on the button will cause the form to be submitted via XmlHttpRequest. The default is true.]]></description>
			<name>ajax</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the APPLY_REQUEST_VALUES, PROCESS_VALIDATIONS, UPDATE_MODEL_VALUES, and INVOKE_APPLICATION phases of the JSF lifecycle. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>, <code>@parent</code>. The default value is <code>@parent</code> (meaning, the parent alloy:dataTable).]]></description>
			<name>execute</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:dataTabe, this is the JavaBean property that is to be used for filtering.]]></description>
			<name>filterBy</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:dataTable, this is the name of the CSS class that is to be rendered within the class attribute of the table's <code>&lt;td&gt;</code> element inside the <code>&lt;tfoot&gt;</code> element.]]></description>
			<name>footerClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:dataTable, this is the name of the CSS class that is to be rendered within the class attribute of the table's <code>&lt;th&gt;</code> element inside the <code>&lt;thead&gt;</code> element.]]></description>
			<name>headerClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:dataTable, this is the text for the column header. This attribute can be used as a convenience instead of specifying a child <code>&lt;f:facet name="header" /&gt;</code> tag.]]></description>
			<name>headerText</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:row, this is the width that the column will be offset by as a unit from 1 to 12. This value is rendered as a CSS class as <code>offset#</code> (for example if offset="4", the CSS class rendered will be <code>offset4</code>). If both the offsetWidth and offset attributes are present, the offsetWidth attribute determines the value of the offset. Please consider using offsetWidth.]]></description>
			<name>offset</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:row, this is the width that the column will be offset by as a percent. This value selects the offset via the formula <code>offset = (offsetWidth/100)*12 (rounded to the nearest whole number)</code>. If both the offsetWidth and offset attributes are present, the offsetWidth attribute determines the value of the offset.]]></description>
			<name>offsetWidth</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>execute</code> attribute.]]></description>
			<name>process</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the RENDER_RESPONSE phase of the JSF lifecycle and be re-rendered in the DOM after the response is received from the XmlHttpRequest. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>, <code>@parent</code>. The default value is <code>@parent</code> (meaning, the parent alloy:dataTable).]]></description>
			<name>render</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:row and this flag is true, then the column is to be rendered as a <code>&lt;th&gt;</code> element with <code>scope=row</code>.]]></description>
			<name>rowHeader</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:dataTabe, this is the JavaBean property that is to be used for sorting.]]></description>
			<name>sortBy</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Indicates the sort order for the column. Valid values are <code>ascending</code>, <code>descending</code>, and <code>none</code>.]]></description>
			<name>sortOrder</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:row, this is the width of this column as a unit from 1 to 12. This value is rendered as a CSS class as <code>span#</code> (for example if span="4", the CSS class rendered will be <code>span4</code>). If both the width and span attributes are present, the width attribute determines the value of the span number. Please consider using width.]]></description>
			<name>span</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>render</code> attribute.]]></description>
			<name>update</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:column is a child of alloy:row, this is the width of the column as a percent. This value selects the span number via the formula <code>span = (width/100)*12 (rounded to the nearest whole number)</code>. If both the width and span attributes are present, the width attribute determines the value of the span number.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[CommandButton is a UICommand component that renders a styleable HTML <code>&lt;button&gt;</code> element. The default type is submit. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlCommandButton.html" target="_blank"><code>HtmlCommandButton</code></a> it supports all the features of <a href="https://javaserverfaces.java.net/nonav/docs/2.2/vdldocs/facelets/h/commandButton.html" target="_blank"><code>h:commandButton</code></a>. The component must be a child of h:form in order to trigger the action or actionListener.]]></description>
		<tag-name>commandButton</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.commandbutton.CommandButton</component-type>
			<renderer-type>com.liferay.faces.alloy.component.commandbutton.CommandButtonRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return an <code>Object</code>, and take no arguments. The <code>toString()</code> method of the returned object is used to determine where to navigate (if at all) after the action has been performed.]]></description>
			<name>action</name>
			<required>false</required>
			<method-signature>java.lang.Object action()</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return <code>void</code>, and take either no arguments or one <code>ActionEvent</code> argument.]]></description>
			<name>actionListener</name>
			<required>false</required>
			<method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, clicking on the button will cause the form to be submitted via XmlHttpRequest. The default is true.]]></description>
			<name>ajax</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether or not the component should automatically recieve focus on the initial page load.]]></description>
			<name>autofocus</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the APPLY_REQUEST_VALUES, PROCESS_VALIDATIONS, UPDATE_MODEL_VALUES, and INVOKE_APPLICATION phases of the JSF lifecycle. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>. The default value is <code>@all</code>.]]></description>
			<name>execute</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the URL of an image.]]></description>
			<name>image</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A name for this component to be rendered to the user. This name should be localized for the user.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>execute</code> attribute.]]></description>
			<name>process</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the RENDER_RESPONSE phase of the JSF lifecycle and be re-rendered in the DOM after the response is received from the XmlHttpRequest. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>. The default value is <code>@none</code>.]]></description>
			<name>render</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The type of the button: button, submit (default), or reset.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>render</code> attribute.]]></description>
			<name>update</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[CommandLink is a UICommand component that renders an HTML <code>&lt;a&gt;</code> element. Since it extends HtmlCommandLink, it supports all the features of h:commandLink. The component must be a child of h:form in order to trigger the action or actionListener.]]></description>
		<tag-name>commandLink</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.commandlink.CommandLink</component-type>
			<renderer-type>com.liferay.faces.alloy.component.commandlink.CommandLinkRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return an <code>Object</code>, and take no arguments. The <code>toString()</code> method of the returned object is used to determine where to navigate (if at all) after the action has been performed.]]></description>
			<name>action</name>
			<required>false</required>
			<method-signature>java.lang.Object action()</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when this component is clicked. The method must be <code>public</code>, return <code>void</code>, and take either no arguments or one <code>ActionEvent</code> argument.]]></description>
			<name>actionListener</name>
			<required>false</required>
			<method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, clicking on the button will cause the form to be submitted via XmlHttpRequest. The default is true.]]></description>
			<name>ajax</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The character encoding of the resource linked to by this component.]]></description>
			<name>charset</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The position and shape of the component's area on the page. Used in image maps.]]></description>
			<name>coords</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the APPLY_REQUEST_VALUES, PROCESS_VALIDATIONS, UPDATE_MODEL_VALUES, and INVOKE_APPLICATION phases of the JSF lifecycle. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>. The default value is <code>@all</code>.]]></description>
			<name>execute</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The language code of the resource linked to by this component.]]></description>
			<name>hreflang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>execute</code> attribute.]]></description>
			<name>process</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The relationship between the current document and the one linked to by this component. This is a space-separated list of link types. Used by bots, not browsers.]]></description>
			<name>rel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the RENDER_RESPONSE phase of the JSF lifecycle and be re-rendered in the DOM after the response is received from the XmlHttpRequest. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>. The default value is <code>@none</code>.]]></description>
			<name>render</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The reverse of the rel attribute. The relationship between the document linked to by this component and the current document.]]></description>
			<name>rev</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Used by some browsers with the coords to specify the size, shape, and placement of the link.]]></description>
			<name>shape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies which window, tab, or frame to open the link in.]]></description>
			<name>target</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the content type of resource located by the URL in the rendered href attribute.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>render</code> attribute.]]></description>
			<name>update</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[DataItem is a UIColumn component component that is designed to be used as a child of DataList and renders its children inside a <code>&lt;li&gt;</code> or <code>&lt;dt&gt;</code> element.]]></description>
		<tag-name>dataItem</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.dataitem.DataItem</component-type>
			<renderer-type>com.liferay.faces.alloy.component.dataitem.DataItemRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[DataList is a UIData (iterator) component that renders <code>&lt;ul&gt;</code> (unordered), <code>&lt;ol&gt;</code> (ordered), or <code>&lt;dl&gt;</code> (description) lists.]]></description>
		<tag-name>dataList</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.datalist.DataList</component-type>
			<renderer-type>com.liferay.faces.alloy.component.datalist.DataListRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The type of the list to render. Valid values are "unordered", "ordered" and "description". The default is "unordered".]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property. The value can be any of the following types:<ul><li>Any concrete subclass of <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/DataModel.html" target="_blank"><code>DataModel</code></a></li><li>Array (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ArrayDataModel.html" target="_blank"><code>ArrayDataModel</code></a>)</li><li>java.util.Collection (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/CollectionDataModel.html" target="_blank"><code>CollectionDataModel</code></a>)</li><li>java.util.List (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ListDataModel.html" target="_blank"><code>ListDataModel</code></a>)</li><li>java.sql.ResultSet (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ResultSetDataModel.html" target="_blank"><code>ResultSetDataModel</code></a>)</li></ul>]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the variable that is to be introduced into the EL representing the current iteration.]]></description>
			<name>var</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[DataTable is a UIData (iterator) component that renders a <code>&lt;table&gt;</code> element representing tabular data and is designed to be used in conjunction with alloy:column child component tags. Since it extends HtmlDataTable, it supports all the features of h:dataTable.]]></description>
		<tag-name>dataTable</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.datatable.DataTable</component-type>
			<renderer-type>com.liferay.faces.alloy.component.datatable.DataTableRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the background color for the <code>&lt;table&gt;</code> element.]]></description>
			<name>bgcolor</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Comma-delimited list of of row indexes. Each row index in the list will cause a previous <code>&lt;tbody&gt;</code> element to be closed, and a new <code>&lt;tbody&gt;</code> element to be opened.]]></description>
			<name>bodyrows</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The width of the table border (measured in pixels).]]></description>
			<name>border</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;caption&gt;</code> element.]]></description>
			<name>captionClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the css style of the caption element.]]></description>
			<name>captionStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the cell padding for the <code>&lt;table&gt;</code> element.]]></description>
			<name>cellpadding</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the cell spacing for the <code>&lt;table&gt;</code> element.]]></description>
			<name>cellspacing</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by commas) that are to be rendered within the class attribute of the table's <code>&lt;td&gt;</code> elements.]]></description>
			<name>columnClasses</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The first row number that is to be displayed, relative to zero.]]></description>
			<name>first</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;tfoot&gt;</code> element.]]></description>
			<name>footerClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies which side(s) of the surrounding frame are visible. Value values: none, above, below, hsides, vsides, lhs, rhs, box, border.]]></description>
			<name>frame</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;thead&gt;</code> element.]]></description>
			<name>headerClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, multiple columns can be selected by the user when the meta key is held down during a left click on a sortable column header. The default is false.]]></description>
			<name>multiColumnSort</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by commas) that are to be rendered within the class attribute of the table's <code>&lt;tr&gt;</code> elements.]]></description>
			<name>rowClasses</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The total number of rows that are to be displayed. If not set, then all rows are displayed.]]></description>
			<name>rows</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the rules for the <code>&lt;table&gt;</code> element. Valid values: none, groups, rows, cols, all.]]></description>
			<name>rules</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Comma-delimited list of row indexes that indicate which rows are selected.]]></description>
			<name>selectedRowIndexes</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Indicates the type of row selection. Valid values are <code>"checkbox"</code>, <code>"radio"</code>.]]></description>
			<name>selectionMode</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the summary for the <code>&lt;table&gt;</code> element.]]></description>
			<name>summary</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property. The value can be any of the following types:<ul><li>Any concrete subclass of <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/DataModel.html" target="_blank"><code>DataModel</code></a></li><li>Array (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ArrayDataModel.html" target="_blank"><code>ArrayDataModel</code></a>)</li><li>java.util.Collection (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/CollectionDataModel.html" target="_blank"><code>CollectionDataModel</code></a>)</li><li>java.util.List (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ListDataModel.html" target="_blank"><code>ListDataModel</code></a>)</li><li>java.sql.ResultSet (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ResultSetDataModel.html" target="_blank"><code>ResultSetDataModel</code></a>)</li></ul>]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the variable that is to be introduced into the EL representing the current iteration.]]></description>
			<name>var</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the width for the <code>&lt;table&gt;</code> element.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Dialog is a UIPanel component that that renders a <code>&lt;div&gt;</code> element that is initially styled with display:none so that it can be popped-up as an overlay by calling the JavaScript API. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]></description>
		<tag-name>dialog</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.dialog.Dialog</component-type>
			<renderer-type>com.liferay.faces.alloy.component.dialog.DialogRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[When true, the component is visible initially. The default is false.]]></description>
			<name>autoShow</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the overlay window is automatically hidden when the user clicks outside of it. The default is false.]]></description>
			<name>dismissible</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text to place in the header of the component.]]></description>
			<name>headerText</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The height of the dialog/popover.]]></description>
			<name>height</name>
			<required>false</required>
			<type>String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, an "x" is placed in the upper right corner that the user can click on to hide/dismiss the overlay window. The default is true.]]></description>
			<name>hideIconRendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true the user must interact with the child dialog window before continuing to interact with the parent. The default is true.]]></description>
			<name>modal</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The width of the dialog/popover.]]></description>
			<name>width</name>
			<required>false</required>
			<type>String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]></description>
			<name>zIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Field is a UIPanel component that renders a <code>&lt;div&gt;</code> element and a <code>&lt;label&gt;</code> element in order to wrap a field. Since it extends PanelGroup, it supports all the features of alloy:panelGroup.]]></description>
		<tag-name>field</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.field.Field</component-type>
			<renderer-type>com.liferay.faces.alloy.component.field.FieldRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text value for the rendered &lt;label&gt; element.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the label will be rendered before the rendered children.]]></description>
			<name>labelFirst</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies whether the HTML element rendered by this component will be a <code>div</code> (default) or a <code>span</code>. If the value of this attribute is <code>block</code>, the rendered element will be a <code>div</code>.]]></description>
			<name>layout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Fieldset is a UIPanel component that renders a &lt;fieldset&gt; element in order to group form elements.]]></description>
		<tag-name>fieldset</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.fieldset.Fieldset</component-type>
			<renderer-type>com.liferay.faces.alloy.component.fieldset.FieldsetRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text value for the rendered &lt;legend&gt; element.]]></description>
			<name>legend</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Form is an <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlForm.html" target="_blank"><code>HtmlForm</code></a> component that delegates rendering to its JSF renderer.]]></description>
		<tag-name>form</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.form.Form</component-type>
			<renderer-type>com.liferay.faces.alloy.component.form.FormRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML4 legacy passthrough attribute that has been made obsolete in HTML5 and is not supported by most browsers. The value can be a comma-delimited list of mime-types that the server accepts during file upload.]]></description>
			<name>accept</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute (accept-charset) is a space-separated list of character encodings associated with form submission.]]></description>
			<name>acceptcharset</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute that specifies how form-data should be encoded with form submission. Default is "application/x-www-form-urlencoded"]]></description>
			<name>enctype</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, view parameters (specified via <code>f:viewParam</code> tags) will be included in the URL rendered in the action attribute.]]></description>
			<name>includeViewParams</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the form will prepend its id to child components. This is true by default.]]></description>
			<name>prependId</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute that specifies the name of a tab/window/iframe that displays the results of the form submission.]]></description>
			<name>target</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Head is a UIOutput that renders a <code>&lt;head&gt;</code> element for webapps, but not for portlets. In the case of portlets, the presence of alloy:head informs the JSF portlet bridge that JSF resources with target="head" should be included in the <code>&lt;head&gt;</code> element rendered by the portal. Since it extends HtmlHead, it supports all the features of h:head.]]></description>
		<tag-name>head</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.head.Head</component-type>
			<renderer-type>com.liferay.faces.alloy.component.head.HeadRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the XML namespace used in the element.]]></description>
			<name>xmlns</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Icon is a component that renders a span which contains an icon specified by the name attribute.]]></description>
		<tag-name>icon</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.icon.Icon</component-type>
			<renderer-type>com.liferay.faces.alloy.component.icon.IconRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The color of the icon which this component will render. The default is black. Another option is white.]]></description>
			<name>color</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The icon which this component will render. A list of valid icons can be found at <a href="http://liferay.github.io/alloy-bootstrap/base-css.html#icons" target="_blank">Bootstrap Base CSS</a>. <b>Note:</b> icon names must be specified without the <code>icon-</code> prefix.]]></description>
			<name>name</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Image is a UIGraphic component that renders an img element. Since it extends HtmlGraphicImage, it supports all the features of h:graphicImage.]]></description>
		<tag-name>image</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.image.Image</component-type>
			<renderer-type>com.liferay.faces.alloy.component.image.ImageRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The height (in pixels) of the image.]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the image is part of a server-side image with clickable areas.]]></description>
			<name>ismap</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The library that contains the JSF image resource.]]></description>
			<name>library</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A URL linking to a page that contains a description of the image.]]></description>
			<name>longdesc</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the JSF image resource.]]></description>
			<name>name</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An alias for the 'value' attribute.]]></description>
			<name>url</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the name or id of the map associated with the clickable areas of the image.]]></description>
			<name>usemap</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A context-relative path that can be used to retrieve the image.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The width (in pixels) of the image.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputDate is a UIInput component that renders an <code>&lt;input type="text"&gt;</code> element and a calendar-popover with selectable dates. The component attempts to automatically convert the submitted value to a Date via a built-in DateTimeConverter.]]></description>
		<tag-name>inputDate</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputdate.InputDate</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputdate.InputDateRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will hide when an item is selected. The default value is true.]]></description>
			<name>autoHide</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The locale of the component which can be of type <code>java.lang.String</code> or <code>java.util.Locale</code>.]]></description>
			<name>locale</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The maximum date that can be selected by the user. This attribute can be of type <code>java.lang.String</code> or <code>java.util.Date</code>.]]></description>
			<name>maxDate</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[The minimum date that can be selected by the user. This attribute can be of type <code>java.lang.String</code> or <code>java.util.Date</code>.]]></description>
			<name>minDate</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the component will render an HTML5 <code>&lt;input type="date" /&gt;</code> element on small/mobile displays in order to enable selection of a date with the mobile device's native UI. The default is true.]]></description>
			<name>nativeWhenMobile</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The number of month panes shown in the popup calendar. Valid values are 1 (the default), 2, and 3.]]></description>
			<name>panes</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[The format of the date that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>.]]></description>
			<name>pattern</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies which event will pop up the picker. Valid values are <code>focus</code> (the default), <code>button</code>, and <code>both</code>.]]></description>
			<name>showOn</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the visual length of the element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The time zone for the built-in DateTimeConverter.]]></description>
			<name>timeZone</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]></description>
			<name>zIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputFile is a UIInput component that renders an <code>&lt;input&gt;</code> element with type=file. Since it extends HtmlInputFile, it supports all the features of h:inputFile and also supports multi-file uploads, instant-Ajax, preview, upload progress, and validation.]]></description>
		<tag-name>inputFile</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputfile.InputFile</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputfile.InputFileRenderer</renderer-type>
			<handler-class>com.liferay.faces.alloy.component.inputfile.internal.InputFileHandler</handler-class>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, selected files are appended to the preview table. Otherwise, the preview table is cleared when new files are selected. The default value is false. NOTE: This feature is only available when showProgress=true.]]></description>
			<name>appendNewFiles</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, files are uploaded automatically as soon as they are selected. The default value is false.]]></description>
			<name>auto</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>on</code> (default) and <code>off</code>.]]></description>
			<name>autocomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Comma-delimited list of uploaded file MIME types that are valid. If not specified, then all MIME types are assumed to be valid.]]></description>
			<name>contentTypes</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when a file is uploaded. The method must be <code>public</code>, return <code>void</code>, and take a <code>FileUploadEvent</code> argument.]]></description>
			<name>fileUploadListener</name>
			<required>false</required>
			<method-signature>void fileUploadListener(com.liferay.faces.util.component.inputfile.FileUploadEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The absolute path that uploaded file should be copied to. If not specified, then the value of the &lt;location&gt; element specified in the Servlet 3.0 web.xml &lt;multipart-config&gt; of the FacesServlet &lt;servlet&gt; will be utilized. Otherwise, the value of the "com.liferay.faces.util.uploadedFilesDir" context-param is utilizied.]]></description>
			<name>location</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Maximum length (in bytes) permitted for each individual uploaded file. If not specified, then files of any length are assumed to be valid.]]></description>
			<name>maxFileSize</name>
			<required>false</required>
			<type>java.lang.Long</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether or not multiple files can be uploaded. Valid values are blank (to upload a single file) or "multiple" (to upload multiple files).]]></description>
			<name>multiple</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, a table showing a preview will be rendered when the user selects one or more files. The default value is false.]]></description>
			<name>showPreview</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, a table showing file upload progress will be rendered when the user selects one of more files. The default value is false.]]></description>
			<name>showProgress</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the visual length of the element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputHidden is a UIInput component that renders an input element with type="hidden". Since it extends HtmlInputHidden, it supports all the features of h:inputHidden.]]></description>
		<tag-name>inputHidden</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputhidden.InputHidden</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputhidden.InputHiddenRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputSecret is a UIInput component that renders an <code>&lt;input&gt;</code> element with type="password". Since it extends HtmlInputSecret, it supports all the features of h:inputSecret.]]></description>
		<tag-name>inputSecret</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputsecret.InputSecret</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputsecret.InputSecretRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>on</code> (default) and <code>off</code>.]]></description>
			<name>autocomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the value attribute is rendered to the response. The default is false for security purposes.]]></description>
			<name>redisplay</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the visual length of the element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputSourceCode is an input component that renders a field for editing source code text.]]></description>
		<tag-name>inputSourceCode</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputsourcecode.InputSourceCode</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputsourcecode.InputSourceCodeRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The the height (in pixels) of the rendered <code>&lt;div&gt;</code>.]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the background-color of the line that is being edited by the user (the active line) will change to indicate a highlight.]]></description>
			<name>highlightActiveLine</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The locale of the text that the editor is editing or displaying.]]></description>
			<name>locale</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the maximum number of lines that the editor is to display before a vertical scrollbar appears. Default is 1024.]]></description>
			<name>maxLines</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Minimum number of lines that the editor is to display. Default is 6.]]></description>
			<name>minLines</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the programming language that the editor is editing or displaying.]]></description>
			<name>mode</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be read-only, meaning that the user will be unable to edit the source code text. The default value is false.]]></description>
			<name>readOnly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, a vertical line will appear that indicates the print margin. The default value is true.]]></description>
			<name>showPrintMargin</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The number of spaces that are to be displayed in place of each tab character.]]></description>
			<name>tabSize</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the tab key will produce space characters rather than tab characters. The default value is false.]]></description>
			<name>useSoftTabs</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the line will break when it reaches the end of the line. The default value is true.]]></description>
			<name>useWrapMode</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[The the width (in pixels) of the rendered <code>&lt;div&gt;</code>.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputText is a UIInput component that renders a field for editing single-line text. Since it extends HtmlInputText, it supports all the features of h:inputText.]]></description>
		<tag-name>inputText</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputtext.InputText</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputtext.InputTextRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying whether autocomplete is turned on or off for the rendered HTML element. Valid values include <code>on</code> (default) and <code>off</code>.]]></description>
			<name>autocomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the visual length of the element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputTextarea is a UIInput component that renders a field for editing multi-line text. Since it extends HtmlInputTextarea, it supports all the features of h:inputTextarea.]]></description>
		<tag-name>inputTextarea</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputtextarea.InputTextarea</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputtextarea.InputTextareaRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The visible width of the text area.]]></description>
			<name>cols</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The number of lines in the text area.]]></description>
			<name>rows</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[InputTime is a UIInput component that renders an <code>&lt;input type="text"&gt;</code> element and a list-popover with selectable times. The component attempts to automatically convert the submitted value to a Date via a built-in DateTimeConverter.]]></description>
		<tag-name>inputTime</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.inputtime.InputTime</component-type>
			<renderer-type>com.liferay.faces.alloy.component.inputtime.InputTimeRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the first item in the list will be activated so that users can press TAB or ENTER to select it. Default is <code>true</code>.]]></description>
			<name>activateFirstItem</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying alternative information about the rendered HTML element.]]></description>
			<name>alt</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will hide when an item is selected. The default value is true.]]></description>
			<name>autoHide</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the autoComplete list will wrap around allowing users to use keyboard navigation to move from the top of the list to the bottom and vice versa. Defaults to <code>true</code>.]]></description>
			<name>circular</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the type of filter that will be used for the pickTime's autocompletion. Valid values include:       <ul>        <li>charMatch</li>        <li>charMatchCase</li>        <li>phraseMatch</li>        <li>phraseMatchCase</li>        <li>startsWith</li>        <li>startsWithCase</li>        <li>subWordMatch</li>        <li>subWordMatchCase</li>        <li>wordMatch</li>        <li>wordMatchCase</li>       </ul>]]></description>
			<name>filterType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The the height (in pixels) of the rendered autoComplete list.]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the type of filter that will be used for the pickTime's autocomplete highlighter. Valid values include:       <ul>        <li>charMatch</li>        <li>charMatchCase</li>        <li>phraseMatch</li>        <li>phraseMatchCase</li>        <li>startsWith</li>        <li>startsWithCase</li>        <li>subWordMatch</li>        <li>subWordMatchCase</li>        <li>wordMatch</li>        <li>wordMatchCase</li>       </ul>]]></description>
			<name>highlighterType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The locale of the component which can be of type <code>java.lang.String</code> or <code>java.util.Locale</code>.]]></description>
			<name>locale</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the maximum length of characters allowed in the element.]]></description>
			<name>maxlength</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[The maximum amount of autoComplete results.]]></description>
			<name>maxResults</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[The maximum time that can be selected by the user. <code>maxTime</code> can be of type <code>java.lang.String</code> (of the pattern "HH:mm:ss") or <code>java.util.Date</code>.]]></description>
			<name>maxTime</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The minimum time that can be selected by the user. <code>minTime</code> can be of type <code>java.lang.String</code> (of the pattern "HH:mm:ss") or <code>java.util.Date</code>.]]></description>
			<name>minTime</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the component will render an HTML5 <code>&lt;input type="time" /&gt;</code> element on small/mobile displays in order to enable selection of a time with the mobile device's native UI. The default is true.]]></description>
			<name>nativeWhenMobile</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The format of the time that corresponds to patterns described in the javadoc for <code>java.text.SimpleDateFormat</code>. The default is <code>hh:mm a</code>.]]></description>
			<name>pattern</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The delay in milliseconds before a query occurs. After the <code>autoComplete</code> receives input, it waits the specified number of milliseconds before querying it's source. If input occurs before the specified number of milliseconds has elapsed, the timer is reset.]]></description>
			<name>queryDelay</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, if the active option of the autoComplete is not in view, the view will be scrolled to make the active option is displayed to the user.]]></description>
			<name>scrollIntoView</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies which event will pop up the picker. Valid values are <code>focus</code> (the default), <code>button</code>, and <code>both</code>.]]></description>
			<name>showOn</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the visual length of the element.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[The step in seconds between each selectable timestamp. The default is 3,600 seconds (or 1 hour).]]></description>
			<name>step</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The time zone for the built-in DateTimeConverter.]]></description>
			<name>timeZone</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]></description>
			<name>zIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Link is a UIOutcomeTarget component that renders an <code>&lt;a&gt;</code> element (hyperlink). Since it extends HtmlLink, it supports all the features of h:link.]]></description>
		<tag-name>link</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.link.Link</component-type>
			<renderer-type>com.liferay.faces.alloy.component.link.LinkRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The character encoding of the resource linked to by this component.]]></description>
			<name>charset</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The position and shape of the component's area on the page. Used in image maps.]]></description>
			<name>coords</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the client window param will not be inlcuded on the navigation URL. <b>Note:</b> the <code>ClientWindow</code> feature is disabled by default, so this attribute will have no effect unless <code>ClientWindow</code> is enabled.]]></description>
			<name>disableClientWindow</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A fragment to be appended to the navigation URL.]]></description>
			<name>fragment</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The language code of the resource linked to by this component.]]></description>
			<name>hreflang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, view parameters (specified via <code>f:viewParam</code> tags) will be included on the navigation URL]]></description>
			<name>includeViewParams</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A string which potentially matches the value of <code>from-outcome</code> key in a navigation-case.]]></description>
			<name>outcome</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The relationship between the current document and the one linked to by this component. This is a space-separated list of link types. Used by bots, not browsers.]]></description>
			<name>rel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The reverse of the rel attribute. The relationship between the document linked to by this component and the current document.]]></description>
			<name>rev</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Used by some browsers with the coords to specify the size, shape, and placement of the link.]]></description>
			<name>shape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies which window, tab, or frame to open the link in.]]></description>
			<name>target</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the content type of resource located by the URL in the rendered href attribute.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[LoadConstants is a TagHandler which can obtain constants from java for use in EL.]]></description>
		<tag-name>loadConstants</tag-name>
		<handler-class>com.liferay.faces.alloy.taghandler.LoadConstants</handler-class>
		<attribute>
			<description><![CDATA[When true, the imported constants will be cached. Defaults to true.]]></description>
			<name>cacheable</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The fully qualified name of the class, enum, or interface which the constants are being imported from.]]></description>
			<name>classType</name>
			<required>true</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the variable that is to be introduced into the EL representing the map of imported constants.]]></description>
			<name>var</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[A menu is a UIColumn component that renders nested/child tags as content within itself.]]></description>
		<tag-name>menu</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.menu.Menu</component-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The visible label for the menu. This is only used if a facet with name="label" is not present.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Message is a UIMessage component that renders a <code>&lt;span&gt;</code> element containing the text of a single FacesMessage for an associated component. Since it extends HtmlMessage, it supports all the features of h:message.]]></description>
		<tag-name>message</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.message.Message</component-type>
			<renderer-type>com.liferay.faces.alloy.component.message.MessageRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]></description>
			<name>errorClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]></description>
			<name>errorStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]></description>
			<name>fatalClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]></description>
			<name>fatalStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The id of the component for which to render an associated message.]]></description>
			<name>for</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]></description>
			<name>infoClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]></description>
			<name>infoStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the value of FacesMessage.getDetail() is rendered. This is true by default.]]></description>
			<name>showDetail</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the value of FacesMessage.getSummary() is rendered. This is true by default.]]></description>
			<name>showSummary</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the value of FacesMessage.getDetail() rendered as a tooltip. This is false by default.]]></description>
			<name>tooltip</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]></description>
			<name>warnClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]></description>
			<name>warnStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Messages is a UIMessages component that the text of one or more FacesMessage instances inside a <code>&lt;ul&gt;</code> element or <code>&lt;table&gt;</code> element for an associated component, according to the layout attribute. Since it extends HtmlMessages, it supports all the features of h:messages.]]></description>
		<tag-name>messages</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.messages.Messages</component-type>
			<renderer-type>com.liferay.faces.alloy.component.messages.MessagesRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]></description>
			<name>errorClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.ERROR.]]></description>
			<name>errorStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]></description>
			<name>fatalClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.FATAL.]]></description>
			<name>fatalStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The id of the component for which to render associated message(s). This attribute takes precedence over the globalOnly attribute.]]></description>
			<name>for</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, only the global FacesMessages (those that are not associated with a specific component) are displayed. This is false by default.]]></description>
			<name>globalOnly</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]></description>
			<name>infoClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.INFO.]]></description>
			<name>infoStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When 'table', an HTML table is rendered and each message appears in a separate table row. When 'list', an HTML unordered list is rendered and each message appears in a separate list item. The default value is 'list'.]]></description>
			<name>layout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the value of FacesMessage.getDetail() is rendered. This is true by default.]]></description>
			<name>showDetail</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the value of FacesMessage.getSummary() is rendered. This is true by default.]]></description>
			<name>showSummary</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the value of FacesMessage.getDetail() rendered as a tooltip. This is false by default.]]></description>
			<name>tooltip</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS class name that is to be appended to the value of the rendered class attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]></description>
			<name>warnClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[CSS style that is to be appended to the value of the rendered style attribute when the severity of a FacesMessage is FacesMessage.Severity.WARN.]]></description>
			<name>warnStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputFormat is a UIOutput component that renders parameterized text. Since it extends HtmlOutputFormat, it supports all the features of h:outputFormat.]]></description>
		<tag-name>outputFormat</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputformat.OutputFormat</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputformat.OutputFormatRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When false, markup will not be escaped. This is true by default.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputLabel is a UIOutput component that renders its value attribute within a <code>&lt;label&gt;</code> element. Since it extends HtmlOutputLabel, it supports all the features of h:outputLabel.]]></description>
		<tag-name>outputLabel</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputlabel.OutputLabel</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputlabel.OutputLabelRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When false, markup will not be escaped. This is true by default.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The id of the target associated with this component.]]></description>
			<name>for</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputLink is a UIOutput component that renders an <code>&lt;a&gt;</code> element (hyperlink). Since it extends HtmlOutputLink, it supports all the features of h:outputLink.]]></description>
		<tag-name>outputLink</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputlink.OutputLink</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputlink.OutputLinkRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The character encoding of the resource linked to by this component.]]></description>
			<name>charset</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[The position and shape of the component's area on the page. Used in image maps.]]></description>
			<name>coords</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The language code of the resource linked to by this component.]]></description>
			<name>hreflang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The relationship between the current document and the one linked to by this component. This is a space-separated list of link types. Used by bots, not browsers.]]></description>
			<name>rel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The reverse of the rel attribute. The relationship between the document linked to by this component and the current document.]]></description>
			<name>rev</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Used by some browsers with the coords to specify the size, shape, and placement of the link.]]></description>
			<name>shape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies which window, tab, or frame to open the link in.]]></description>
			<name>target</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the content type of resource located by the URL in the rendered href attribute.]]></description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputRemainingChars is a UIOutput component that displays the number of characters remaining for an associated alloy:inputText or alloy:inputTextarea.]]></description>
		<tag-name>outputRemainingChars</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputremainingchars.OutputRemainingChars</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputremainingchars.OutputRemainingCharsRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When false, markup will not be escaped. This is true by default.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The id of the component for which the remaining characters are to be calculated.]]></description>
			<name>for</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The maximum number of charachters to allow in the input.]]></description>
			<name>maxLength</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Node or Selector to display the number of remaining characters calculated by the charCounter.]]></description>
			<name>onceMaxlengthReached</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Node or Selector to display the number of remaining characters calculated by the charCounter.]]></description>
			<name>onMaxlengthReached</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputScript is a UIOutput component that renders a <code>&lt;script&gt;</code> element with <code>type="text/javascript"</code>.]]></description>
		<tag-name>outputScript</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputscript.OutputScript</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputscript.OutputScriptRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the library which contains the resource.]]></description>
			<name>library</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the resource file to be included on the page.]]></description>
			<name>name</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The position on the page where the JavaScript should be rendered. Valid values include <code>body</code>, <code>form</code>, and <code>head</code>. The default value of this attribute is an empty (null) value which causes the <code>&lt;script&gt;</code> to be rendered inline (corresponding to its position in the view). Specifying <code>body</code> for the target attribute will cause the <code>&lt;script&gt;</code> to be rendered as close to the closing body tag as possible.]]></description>
			<name>target</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A comma-delimited list of YUI or AlloyUI modules to load for this script. <strong>Note:</strong> if this attribute is specified, a YUI sandbox will be created automatically for the <code>&lt;script&gt;</code>.]]></description>
			<name>use</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputStylesheet is a UIOutput component that renders a <code>&lt;style&gt;</code> element.]]></description>
		<tag-name>outputStylesheet</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputstylesheet.OutputStylesheet</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputstylesheet.OutputStylesheetRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the library which contains the resource.]]></description>
			<name>library</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the media type of the element.]]></description>
			<name>media</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the resource file to be included on the page.]]></description>
			<name>name</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputText is an <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlOutputText.html" target="_blank"><code>HtmlOutputText</code></a> component that delegates rendering to its JSF renderer.]]></description>
		<tag-name>outputText</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputtext.OutputText</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputtext.OutputTextRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When false, markup will not be escaped. This is true by default.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[OutputTooltip is a UIOutput component that renders a <code>&lt;div&gt;</code> element which is displayed as an overlay that is initially styled with display:none so that it can be popped-up as an overlay. Since it extends HtmlOutputText, it supports all the features of h:outputText.]]></description>
		<tag-name>outputTooltip</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.outputtooltip.OutputTooltip</component-type>
			<renderer-type>com.liferay.faces.alloy.component.outputtooltip.OutputTooltipRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[When true, the component is visible initially. The default is false.]]></description>
			<name>autoShow</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When false, markup will not be escaped. This is true by default.]]></description>
			<name>escape</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The id of the component that is associated with the tooltip.]]></description>
			<name>for</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text to place in the header of the component.]]></description>
			<name>headerText</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A number between 0 and 1 describing how much the tooltip will obscure its background when visible.]]></description>
			<name>opacity</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Indicates the side of the associated component where the tooltip should appear ("right", "left", "top", "bottom"). Default is "right".]]></description>
			<name>position</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]></description>
			<name>zIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Paginator is a UIComponent that renders pagination controls and can be used in conjunction with alloy:dataTable in order to paginate tabular data.]]></description>
		<tag-name>paginator</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.paginator.Paginator</component-type>
			<renderer-type>com.liferay.faces.alloy.component.paginator.PaginatorRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[When this flag is true, clicking on the button will cause the form to be submitted via XmlHttpRequest. The default is true.]]></description>
			<name>ajax</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the APPLY_REQUEST_VALUES, PROCESS_VALIDATIONS, UPDATE_MODEL_VALUES, and INVOKE_APPLICATION phases of the JSF lifecycle. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>. The default value is <code>@this @for</code> (meaning, the paginator itself and the associated alloy:dataTable).]]></description>
			<name>execute</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Integer representing the first page number that is to be displayed in the list of page number controls. The default value is 1.]]></description>
			<name>firstPage</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[The label of the control that causes the first page to be displayed. The default value is the &amp;laquo; character code.]]></description>
			<name>firstPageLabel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The id of the UIData component that is to be paginated.]]></description>
			<name>for</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The label of the control that causes the last page to be displayed. The default value is the &amp;raquo; character code.]]></description>
			<name>lastPageLabel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Integer representing the maximum number of page number controls that will be displayed. The default value is 10.]]></description>
			<name>maxPageNumberControls</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[The label of the control that causes the next page to be displayed. The default value is the &amp;rsaquo; character code.]]></description>
			<name>nextPageLabel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The label of the control that causes the previous page to be displayed. The default value is the &amp;lsaquo; character code.]]></description>
			<name>previousPageLabel</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>execute</code> attribute.]]></description>
			<name>process</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Space-delimited list of component ids that are to participate in the RENDER_RESPONSE phase of the JSF lifecycle and be re-rendered in the DOM after the response is received from the XmlHttpRequest. The following keywords may also appear in the list: <code>@this</code>, <code>@form</code>, <code>@all</code>, <code>@none</code>, <code>@for</code>. The default value is <code>@this @for</code> (meaning, the paginator itself and the associated alloy:dataTable).]]></description>
			<name>render</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, a control will be rendered that will cause the associated UIData component to display the first page . This is true by default.]]></description>
			<name>showFirstPageControl</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, a control will be rendered that will cause the associated UIData component to display the last page. This is true by default.]]></description>
			<name>showLastPageControl</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, a control will be rendered that will cause the associated UIData component to display the next page. This is true by default.]]></description>
			<name>showNextPageControl</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, controls will be rendered for each page number (limited by the maxPageNumberControls attribute). This is true by default.]]></description>
			<name>showPageNumberControls</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, a control will be rendered that will cause the associated UIData component to display the previous page. This is true by default.]]></description>
			<name>showPreviousPageControl</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute. Valid values are <code>pagination-large</code>, <code>pagination-small</code>, and <code>pagination-mini</code>.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, a row summary such as "Page 1 of 7." will be displayed based on the <code>results-x-x-of-x-page-x-of-x</code> internationalized language key. This is true by default.]]></description>
			<name>summaryPosition</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Synonym for the <code>render</code> attribute.]]></description>
			<name>update</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Panel is a UIPanel component that renders a <code>&lt;div&gt;</code> element with three child <code>&lt;div&gt;</code> elements (one for header, body, and footer). Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]></description>
		<tag-name>panel</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.panel.Panel</component-type>
			<renderer-type>com.liferay.faces.alloy.component.panel.PanelRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text to place in the footer of the component.]]></description>
			<name>footerText</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text to place in the header of the component.]]></description>
			<name>headerText</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies whether the HTML element rendered by this component will be a <code>span</code> (default) or a <code>div</code>. If the value of this attribute is <code>block</code>, the rendered element will be a <code>div</code>.]]></description>
			<name>layout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[PanelGrid is a UIPanel component that renders a <code>&lt;table&gt;</code> element to layout its children in a tabular grid. Since it extends HtmlPanelGrid, it supports all the features of h:panelGrid.]]></description>
		<tag-name>panelGrid</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.panelgrid.PanelGrid</component-type>
			<renderer-type>com.liferay.faces.alloy.component.panelgrid.PanelGridRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the background color for the <code>&lt;table&gt;</code> element.]]></description>
			<name>bgcolor</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[Comma-delimited list of of row indexes. Each row index in the list will cause a previous <code>&lt;tbody&gt;</code> element to be closed, and a new <code>&lt;tbody&gt;</code> element to be opened.]]></description>
			<name>bodyrows</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The width of the table border (measured in pixels).]]></description>
			<name>border</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;caption&gt;</code> element.]]></description>
			<name>captionClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the css style of the caption element.]]></description>
			<name>captionStyle</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the cell padding for the <code>&lt;table&gt;</code> element.]]></description>
			<name>cellpadding</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the cell spacing for the <code>&lt;table&gt;</code> element.]]></description>
			<name>cellspacing</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by commas) that are to be rendered within the class attribute of the table's <code>&lt;td&gt;</code> elements.]]></description>
			<name>columnClasses</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The total number of columns that are to be displayed. When the number of child components exceeds this number, the previous <code>&lt;tr&gt;</code> element is closed and a new <code>&lt;tr&gt;</code> element is opened.]]></description>
			<name>columns</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;tfoot&gt;</code> element.]]></description>
			<name>footerClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies which side(s) of the surrounding frame are visible. Value values: none, above, below, hsides, vsides, lhs, rhs, box, border.]]></description>
			<name>frame</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute of the table's <code>&lt;thead&gt;</code> element.]]></description>
			<name>headerClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by commas) that are to be rendered within the class attribute of the table's <code>&lt;tr&gt;</code> elements.]]></description>
			<name>rowClasses</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the rules for the <code>&lt;table&gt;</code> element. Valid values: none, groups, rows, cols, all.]]></description>
			<name>rules</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the summary for the <code>&lt;table&gt;</code> element.]]></description>
			<name>summary</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the width for the <code>&lt;table&gt;</code> element.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[PanelGroup is a UIPanel component that renders a <code>&lt;span&gt;</code> or a <code>&lt;div&gt;</code> element for grouping purposes. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]></description>
		<tag-name>panelGroup</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.panelgroup.PanelGroup</component-type>
			<renderer-type>com.liferay.faces.alloy.component.panelgroup.PanelGroupRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies whether the HTML element rendered by this component will be a <code>span</code> (default) or a <code>div</code>. If the value of this attribute is <code>block</code>, the rendered element will be a <code>div</code>.]]></description>
			<name>layout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Popover is a UIPanel component that that renders a <code>&lt;div&gt;</code> element that is initially styled with display:none so that it can be popped-up as an overlay by calling the JavaScript API. Since it extends HtmlPanelGroup, it supports all the features of h:panelGroup.]]></description>
		<tag-name>popover</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.popover.Popover</component-type>
			<renderer-type>com.liferay.faces.alloy.component.popover.PopoverRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[When true, the component is visible initially. The default is false.]]></description>
			<name>autoShow</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, the overlay window is automatically hidden when the user clicks outside of it. The default is true.]]></description>
			<name>dismissible</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The id of the component that is associated with the popover.]]></description>
			<name>for</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text to place in the header of the component.]]></description>
			<name>headerText</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The height of the dialog/popover.]]></description>
			<name>height</name>
			<required>false</required>
			<type>String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, an "x" is placed in the upper right corner that the user can click on to hide/dismiss the overlay window. The default is true.]]></description>
			<name>hideIconRendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Indicates the side of the associated component where the tooltip should appear ("right", "left", "top", "bottom"). Default is "right".]]></description>
			<name>position</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The width of the dialog/popover.]]></description>
			<name>width</name>
			<required>false</required>
			<type>String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Specifies the stack order of the component. The default value is a constant from the Liferay.zIndex JavaScript object.]]></description>
			<name>zIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[<p>ProgressBar is a UIComponent that displays a progress bar and can operate as a server-side or client-side progress indicator.</p>     <p>This component includes a client-side JavaScript API which can be accessed using the <code>clientKey</code> attribute and the <code>Liferay.component()</code> method:     <ul>      <li><code>set()</code> - The <code>set()</code> method can be used to set the client-side value of the component e.g. <code>Liferay.component('progressBar').set('value', value);</code>.</li>      <li><code>start()</code> - The <code>start()</code> method starts polling the server for the value of the component.</li>      <li><code>stop()</code> - The <code>stop()</code> method stops the component's polling of the server.</li>     </ul></p>]]></description>
		<tag-name>progressBar</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.progressbar.ProgressBar</component-type>
			<renderer-type>com.liferay.faces.alloy.component.progressbar.ProgressBarRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The the height (in pixels) of the progress bar.]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The label which appears on the progress bar. The <code>{0}</code> token can be used to include the value in the label.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The direction in which the layout of the component should be displayed. Valid values include <code>lineDirection</code> (the default) and <code>pageDirection</code>.]]></description>
			<name>layout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The maximum value that the progress bar can have. Defaults to 100.]]></description>
			<name>maxProgress</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[The minimum value that the progress bar can have. Defaults to 0.]]></description>
			<name>minProgress</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[Client-side javascript to be executed when progress has completed.]]></description>
			<name>oncomplete</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The delay (in milliseconds) before dispatching a polling Ajax request after recieving the response of a previous request. Defaults to 3000.]]></description>
			<name>pollingDelay</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property. Defaults to 0.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[The the width (in pixels) of the progress bar.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[A generic resource tag for use with <code>&lt;alloy:audio&gt;</code> and <code>&lt;alloy:video&gt;</code>.]]></description>
		<tag-name>resource</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.resource.Resource</component-type>
		</component>
		<attribute>
			<description><![CDATA[The content type of the resource.]]></description>
			<name>contentType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the library which contains the resource.]]></description>
			<name>library</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the resource file to be included on the page.]]></description>
			<name>name</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Row is a UIPanel component that renders a <code>&lt;div&gt;</code> and is designed to be used in conjunction with alloy:column child component tags.]]></description>
		<tag-name>row</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.row.Row</component-type>
			<renderer-type>com.liferay.faces.alloy.component.row.RowRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the element will have the CSS class <code>row-fluid</code>. Otherwise, the element will have the CSS class <code>row</code>. The default value is true.]]></description>
			<name>fluid</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectBooleanCheckbox is a UISelectOne component that renders a check box. Since it extends HtmlSelectBooleanCheckbox, it supports all the features of h:selectBooleanCheckbox such as accepting f:selectItem or f:selectItems as child tags.]]></description>
		<tag-name>selectBooleanCheckbox</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectbooleancheckbox.SelectBooleanCheckbox</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectbooleancheckbox.SelectBooleanCheckboxRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectManyCheckbox is a UISelectMany component that renders checkboxes and enables the user to select multiple values. Since it extends HtmlSelectManyCheckbox, it supports all the features of h:selectManyCheckbox such as accepting f:selectItem or f:selectItems as child tags. However, since it does not render a &lt;table&gt;, it does not support h:selectManyCheckbox's <code>border</code> and <code>layout</code> attributes.]]></description>
		<tag-name>selectManyCheckbox</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectmanycheckbox.SelectManyCheckbox</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectmanycheckbox.SelectManyCheckboxRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[An optional attribute that can contain a value like <code>java.util.ArrayList</code> or <code>java.util.HashSet</code> that indicates the type of <code>java.util.Collection</code> for the component's value.]]></description>
			<name>collectionType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]></description>
			<name>disabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]></description>
			<name>enabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]></description>
			<name>hideNoSelectionOption</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of each selected item.]]></description>
			<name>selectedClass</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of each unselected item.]]></description>
			<name>unselectedClass</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectManyListbox is a UISelectMany component that renders a select element and enables the user to select multiple values. Since it extends HtmlSelectManyListbox, it supports all the features of h:selectManyListbox such as accepting f:selectItem or f:selectItems as child tags.]]></description>
		<tag-name>selectManyListbox</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectmanylistbox.SelectManyListbox</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectmanylistbox.SelectManyListboxRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[An optional attribute that can contain a value like <code>java.util.ArrayList</code> or <code>java.util.HashSet</code> that indicates the type of <code>java.util.Collection</code> for the component's value.]]></description>
			<name>collectionType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]></description>
			<name>disabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]></description>
			<name>enabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]></description>
			<name>hideNoSelectionOption</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The number of items to show in the box. The default is to show all of the items.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectManyMenu is a UISelectMany component that renders a select element and enables the user to select multiple values. It has the same basic features of alloy:selectManyListbox except that there is no size attribute because JSF "select*menu" components always render size=1. Since it extends HtmlSelectManyMenu, it supports all the features of h:selectManyMenu such as accepting f:selectItem or f:selectItems as child tags.]]></description>
		<tag-name>selectManyMenu</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectmanymenu.SelectManyMenu</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectmanymenu.SelectManyMenuRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[An optional attribute that can contain a value like <code>java.util.ArrayList</code> or <code>java.util.HashSet</code> that indicates the type of <code>java.util.Collection</code> for the component's value.]]></description>
			<name>collectionType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]></description>
			<name>disabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]></description>
			<name>enabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]></description>
			<name>hideNoSelectionOption</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectOneListbox is a UISelectOne component that renders a `select` element (multi-item list) and enables the user to select one value. Since it extends HtmlSelectOneListbox, it supports all the features of h:selectOneListbox such as accepting f:selectItem or f:selectItems as child tags.]]></description>
		<tag-name>selectOneListbox</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectonelistbox.SelectOneListbox</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectonelistbox.SelectOneListboxRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]></description>
			<name>disabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]></description>
			<name>enabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]></description>
			<name>hideNoSelectionOption</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The number of items to show in the box. The default is to show all of the items.]]></description>
			<name>size</name>
			<required>false</required>
			<type>int</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectOneMenu is a UISelectOne component that renders a select element (drop down list) and enables the user to select one value. Since it extends HtmlSelectOneMenu, it supports all the features of h:selectOneMenu such as accepting f:selectItem or f:selectItems as child tags.]]></description>
		<tag-name>selectOneMenu</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectonemenu.SelectOneMenu</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectonemenu.SelectOneMenuRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]></description>
			<name>disabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]></description>
			<name>enabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]></description>
			<name>hideNoSelectionOption</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectOneRadio is a UISelectOne component that renders radio buttons. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it supports all the features of h:selectOneRadio such as accepting f:selectItem or f:selectItems as child tags. However, since it does not render a &lt;table&gt;, it does not support h:selectOneRadio's <code>border</code> and <code>layout</code> attributes.]]></description>
		<tag-name>selectOneRadio</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectoneradio.SelectOneRadio</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectoneradio.SelectOneRadioRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying a hot key character for the element.]]></description>
			<name>accesskey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the reading direction for the element For example, right to left (RTL), or left to right (LTR).]]></description>
			<name>dir</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to interact with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of a disabled selectItems.]]></description>
			<name>disabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A CSS class name to apply to the label of an enabled selectItems.]]></description>
			<name>enabledClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, any child selectItem with a noSelectOption attribute (which is set to true) will be hidden from the user.]]></description>
			<name>hideNoSelectionOption</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component's value has changed, and then it loses focus.]]></description>
			<name>onchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when the user selects this component.]]></description>
			<name>onselect</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this causes an attribute to be rendered as readonly="readonly", and prevents the user from changing the value of this component.]]></description>
			<name>readonly</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectStarRating is a UISelectOne component that renders a set of stars. The user can click on a star to select a rating and click on the same star a second time to de-select a rating. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it accepts f:selectItem or f:selectItems as child tags.]]></description>
		<tag-name>selectStarRating</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectstarrating.SelectStarRating</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectstarrating.SelectStarRatingRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[SelectThumbRating is a UISelectOne component that renders a pair of thumb icons that a user can select to indicate their favor. The user can click on a thumb to select their favor and click on the same thumb a second time to de-select their favor. Since it extends <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/html/HtmlSelectOneRadio.html" target="_blank"><code>HtmlSelectOneRadio</code></a>, it accepts f:selectItem or f:selectItems as children.]]></description>
		<tag-name>selectThumbRating</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.selectthumbrating.SelectThumbRating</component-type>
			<renderer-type>com.liferay.faces.alloy.component.selectthumbrating.SelectThumbRatingRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The class name of the converter instance that is to be used by this component.]]></description>
			<name>converter</name>
			<required>false</required>
			<type>javax.faces.convert.Converter</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the converter message instead of any message that comes from the registered converter for this component.]]></description>
			<name>converterMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component's value must be converted and validated (immediately) during the Apply Request Values phase, instead of (later) during the PROCESS_VALIDATIONS phase.]]></description>
			<name>immediate</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A localized label for this component that is typically only rendered in a FacesMessage when validation fails.]]></description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the language code used in the element.]]></description>
			<name>lang</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, and a value has not been specified for this component, then the PROCESS_VALIDATIONS phase will fail and a FacesMessage will be added to the FacesContext for this component.]]></description>
			<name>required</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component when required="true" and no value is selected by the user.]]></description>
			<name>requiredMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the various WAI-ARIA roles that the element is used for.]]></description>
			<name>role</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying where the element is located in the tabbing progression.]]></description>
			<name>tabindex</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the title of the element.]]></description>
			<name>title</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed in the PROCESS_VALIDATIONS phase of the lifecycle. The method must be <code>public</code>, return <code>void</code>, and take three arguments of <code>FacesContext</code>, <code>UIComponent</code>, and <code>Object</code>.]]></description>
			<name>validator</name>
			<required>false</required>
			<method-signature>void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent,
java.lang.Object)</method-signature>
		</attribute>
		<attribute>
			<description><![CDATA[This message or the result of the specified expression, will be used as the text of the validation error message instead of any message that comes from the resulting validation error for this component.]]></description>
			<name>validatorMessage</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property.]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[A method that is executed when the value of this component changes. The method must be <code>public</code>, return <code>void</code>, and take no arguments or one argument of <code>ValueChangeEvent</code>.]]></description>
			<name>valueChangeListener</name>
			<required>false</required>
			<method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Tab is a panel component that renders nested/child tags as content within itself.]]></description>
		<tag-name>tab</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.tab.Tab</component-type>
			<renderer-type>com.liferay.faces.alloy.component.tab.TabRenderer</renderer-type>
			<handler-class>com.liferay.faces.alloy.component.tab.internal.TabHandler</handler-class>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:tab is a child of alloy:accordion, this is the name of the CSS class that is to be rendered within the class attribute of the content &lt;div&gt;]]></description>
			<name>contentClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, the component will be disabled, and the user will be unable to intercat with the component.]]></description>
			<name>disabled</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When alloy:tab is a child of alloy:accordion, this is the name of the CSS class that is to be rendered within the class attribute of the header &lt;div&gt;]]></description>
			<name>headerClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The text to place in the header of the component.]]></description>
			<name>headerText</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[TabView is an iterator component that renders tabs either statically or dynamically.]]></description>
		<tag-name>tabView</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.tabview.TabView</component-type>
			<renderer-type>com.liferay.faces.alloy.component.tabview.TabViewRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[An EL expression that binds the Java reference to this component in the component tree to a bean property.]]></description>
			<name>binding</name>
			<required>false</required>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description><![CDATA[The key name that can be used to reference the component on the client.]]></description>
			<name>clientKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The the height (in pixels) of the rendered <code>&lt;div&gt;</code>.]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A unique identifier for this component.]]></description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[When this flag is true, this component will be rendered to there response. When false, it will not be rendered to the response. The default value of this attribute is true.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[Integer representing the zero-based index representing the selected tab.]]></description>
			<name>selectedIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true, this indicates whether or not the tabs will appear vertically. The default value is false.]]></description>
			<name>stacked</name>
			<required>false</required>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The value of this component, which is typically bound via EL to a model bean property. The value can be any of the following types:<ul><li>Any concrete subclass of <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/DataModel.html" target="_blank"><code>DataModel</code></a></li><li>Array (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ArrayDataModel.html" target="_blank"><code>ArrayDataModel</code></a>)</li><li>java.util.Collection (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/CollectionDataModel.html" target="_blank"><code>CollectionDataModel</code></a>)</li><li>java.util.List (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ListDataModel.html" target="_blank"><code>ListDataModel</code></a>)</li><li>java.sql.ResultSet (automatically wrapped with <a href="http://docs.oracle.com/javaee/7/api/javax/faces/model/ResultSetDataModel.html" target="_blank"><code>ResultSetDataModel</code></a>)</li></ul>]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the variable that is to be introduced into the EL representing the current iteration.]]></description>
			<name>var</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The the height (in pixels) of the rendered <code>&lt;div&gt;</code>.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
	<tag>
		<description><![CDATA[Video is a UIComponent that renders a <code>&lt;div&gt;</code> that contains an HTML5 <code>&lt;video&gt;</code> element. It also supports graceful degradation for older browsers.]]></description>
		<tag-name>video</tag-name>
		<component>
			<component-type>com.liferay.faces.alloy.component.video.Video</component-type>
			<renderer-type>com.liferay.faces.alloy.component.video.VideoRenderer</renderer-type>
		</component>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether the media will begin playing automatically. Defaults to false.]]></description>
			<name>autoplay</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The content type of the media. This attribute is required when the <code>value</code> attribute is used to specify the media URL. Otherwise, the contentType defaults to to the content type determined by the JSF runtime for the resource.]]></description>
			<name>contentType</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether controls should be rendered for the media. Defaults to false.]]></description>
			<name>controls</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[When true the component will gracefully degrade to the Adobe&reg; Flash&reg; player for older browsers. Defaults to true. Defaults to true.]]></description>
			<name>degrade</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[A context-relative path, resource URL, or FacesResource that can be used to retrieve the Adobe&reg; Flash&reg; player. Defaults to the player that comes bundled with AlloyUI. <strong>Note:</strong> The AlloyUI player does not support <code>.ogv</code> or <code>.webm</code> formats.]]></description>
			<name>flashPlayer</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The version of Adobe&reg; Flash&reg; required to play this media. Defaults to <code>"9,0,0,0"</code>.]]></description>
			<name>flashPlayerVersion</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The height (in pixels) of the video, this attribute will also be applied to the Adobe&reg; Flash&reg; player's <code>&lt;object&gt;</code> tag.]]></description>
			<name>height</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the library which contains the resource.]]></description>
			<name>library</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether the media will restart after it has completed playing. Defaults to false.]]></description>
			<name>loop</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying whether the media will be muted initially. Defaults to false.]]></description>
			<name>muted</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The name of the resource file to be included on the page.]]></description>
			<name>name</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a abort event occurs.]]></description>
			<name>onabort</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute after this component loses focus.]]></description>
			<name>onblur</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a canplay event occurs.]]></description>
			<name>oncanplay</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a canplaythrough event occurs.]]></description>
			<name>oncanplaythrough</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component is clicked.]]></description>
			<name>onclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a double click event occurs.]]></description>
			<name>ondblclick</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a durationchange event occurs.]]></description>
			<name>ondurationchange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a emptied event occurs.]]></description>
			<name>onemptied</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a ended event occurs.]]></description>
			<name>onended</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a error event occurs.]]></description>
			<name>onerror</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when this component gets focus.]]></description>
			<name>onfocus</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keydown event occurs.]]></description>
			<name>onkeydown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keypress event occurs.]]></description>
			<name>onkeypress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a keyup event occurs.]]></description>
			<name>onkeyup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a loadeddata event occurs.]]></description>
			<name>onloadeddata</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a loadedmetadata event occurs.]]></description>
			<name>onloadedmetadata</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a loadstart event occurs.]]></description>
			<name>onloadstart</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousedown event occurs.]]></description>
			<name>onmousedown</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mousemove event occurs.]]></description>
			<name>onmousemove</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseout event occurs.]]></description>
			<name>onmouseout</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseover event occurs.]]></description>
			<name>onmouseover</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a mouseup event occurs.]]></description>
			<name>onmouseup</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a pause event occurs.]]></description>
			<name>onpause</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a play event occurs.]]></description>
			<name>onplay</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a playing event occurs.]]></description>
			<name>onplaying</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a progress event occurs.]]></description>
			<name>onprogress</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a ratechange event occurs.]]></description>
			<name>onratechange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a seeked event occurs.]]></description>
			<name>onseeked</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a seeking event occurs.]]></description>
			<name>onseeking</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a stalled event occurs.]]></description>
			<name>onstalled</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a suspend event occurs.]]></description>
			<name>onsuspend</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a timeupdate event occurs.]]></description>
			<name>ontimeupdate</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a volumechange event occurs.]]></description>
			<name>onvolumechange</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Javascript to execute when a waiting event occurs.]]></description>
			<name>onwaiting</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A context-relative path, resource URL, or <code>FacesResource</code> that can be used to retrieve the poster image.]]></description>
			<name>poster</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML5 passthrough attribute specifying how the media should be loaded in the page.]]></description>
			<name>preload</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[HTML passthrough attribute specifying the css style of the element.]]></description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[List of CSS class names (separated by spaces) that are to be rendered within the class attribute.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[A context-relative path, resource URL, <code>FacesResource</code>, or <code>List&lt;FacesResouce&gt;</code> that can be used to retrieve the media(s).]]></description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description><![CDATA[The width (in pixels) of the video, this attribute will also be applied to the Adobe&reg; Flash&reg; player's <code>&lt;object&gt;</code> tag.]]></description>
			<name>width</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<tag-extension>
			<vdldoc:since>4.2.5-ga6</vdldoc:since>
		</tag-extension>
	</tag>
</facelet-taglib>
